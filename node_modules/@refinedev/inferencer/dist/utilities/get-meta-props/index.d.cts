import type { InferencerComponentProps } from "../../types";
export type Action = keyof NonNullable<InferencerComponentProps["meta"]>[string];
/**
 * @returns meta props for a given identifier by actions
 * @description Searchs actions in meta[identifier] and returns first founded meta[identifier][action] and disgards the rest
 * if no action is found, returns meta[identifier]["default"]
 *
 * @param identifier
 * @param meta
 * @param actions keys of meta[identifier]. actions order is important. first founded action will be returned from meta[`identifier`]
 */
export declare const getMetaProps: (identifier?: string, meta?: InferencerComponentProps["meta"], actions?: Action[]) => string;
export declare const pickMeta: (identifier?: string, meta?: InferencerComponentProps["meta"], actions?: Action[]) => Record<string, unknown> | undefined;
//# sourceMappingURL=index.d.ts.map