"use client"
var er=Object.create;var we=Object.defineProperty;var tr=Object.getOwnPropertyDescriptor;var rr=Object.getOwnPropertyNames;var nr=Object.getPrototypeOf,or=Object.prototype.hasOwnProperty;var o=(e,r)=>we(e,"name",{value:r,configurable:!0});var sr=(e,r)=>{for(var a in r)we(e,a,{get:r[a],enumerable:!0})},mt=(e,r,a,c)=>{if(r&&typeof r=="object"||typeof r=="function")for(let s of rr(r))!or.call(e,s)&&s!==a&&we(e,s,{get:()=>r[s],enumerable:!(c=tr(r,s))||c.enumerable});return e};var K=(e,r,a)=>(a=e!=null?er(nr(e)):{},mt(r||!e||!e.__esModule?we(a,"default",{value:e,enumerable:!0}):a,e)),ar=e=>mt(we({},"__esModule",{value:!0}),e);var Sr={};sr(Sr,{HeadlessCreateInferencer:()=>qe,HeadlessCreateRenderer:()=>ut,HeadlessEditInferencer:()=>Be,HeadlessEditRenderer:()=>lt,HeadlessInferencer:()=>wr,HeadlessListInferencer:()=>je,HeadlessListRenderer:()=>pt,HeadlessShowInferencer:()=>De,HeadlessShowRenderer:()=>ct});module.exports=ar(Sr);var Ne=K(require("react")),Yt=require("@refinedev/core");var W=K(require("react")),be=require("@refinedev/core");var ir=/(image|photo|avatar|url|logo|cover|thumbnail|icon)/i,cr=/^(\w|\d|_|-|)*?(name|label){1}$/i,Qe=o((e,r)=>{let a=["name","label","title","count","content","username","nickname","login","firstName","lastName","url"],s=Object.keys(r).filter(d=>cr.test(d));a.push(...s),ir.test(e)&&a.unshift("url");let p=a.find(d=>d in r&&!!r[d]);if(p)return p==="firstName"&&"lastName"in r?["firstName","lastName"]:p},"getFieldableKeys");var dt=require("@refinedev/core");function ze(e,r,a){if(r)return r;let c=a==null?void 0:a.find(p=>p.name===e),s=(0,dt.pickNotDeprecated)(c==null?void 0:c.meta,c==null?void 0:c.options);return s!=null&&s.dataProviderName?s.dataProviderName:"default"}o(ze,"pickDataProvider");var Se=o(e=>{var r;return(r=e==null?void 0:e.options)==null?void 0:r.dataProviderName},"dataProviderFromResource");var Ge=o(e=>{let r=[...e].filter(Boolean).sort((a,c)=>(c.priority||0)-(a.priority||0))[0];return r||null},"pickInferredField");var yt=K(require("prettier/standalone")),ft=K(require("prettier/parser-typescript"));var _e=o(e=>{try{return yt.default.format(e,{parser:"typescript",plugins:[ft.default],arrowParens:"always",trailingComma:"all",semi:!0,tabWidth:4,printWidth:80})}catch(r){return console.warn("Formatting error in inferencer",r),e}},"prettierFormat");var gt=o(e=>e.replace(/ {2,}/g," ").replace(/\n{2,}/g,`
`),"prettySpaces");var We=/(-id|-ids|_id|_ids|Id|Ids|ID|IDs)(\[\])?$/,ht=o((e,r)=>{let a=We.test(e),c=typeof r=="string"||typeof r=="number",s=Array.isArray(r)&&r.every(p=>typeof p=="string"||typeof p=="number");return a&&c||a&&s?{key:e,relation:!0,multiple:s,type:"relation",priority:1}:!1},"relationInfer");var Q=o(e=>e.replace(We,""),"removeRelationSuffix");var Z=o(e=>Q(e).replace(/([a-z])([A-Z])/g,"$1 $2").replace(/_/g," ").replace(/-/g," ").split(" ").map(d=>d.charAt(0).toUpperCase()+d.slice(1)).join(" "),"prettyString");var k=o(e=>{let{resource:r,field:a,i18n:c}=e;if(c){let p=`translate("${r.name}.fields.${a.key}")`;return e.noBraces?`${p}`:`{${p}}`}let s=Z(a.key);return e.noQuotes?s:`"${s}"`},"translatePrettyString");var Ue=K(require("pluralize"));var G=o((e="")=>Ue.default.isSingular(e)?e:Ue.default.singular(e),"toSingular");var Ze=K(require("pluralize"));var re=o((e="")=>Ze.default.isPlural(e)?e:Ze.default.plural(e),"toPlural");var ee=o(e=>{var p;let{resource:r,action:a,i18n:c,noBraces:s}=e;if(c){let d=`translate("${r.name}.titles.${a}")`;return s?d:`{${d}}`}return a==="list"?Z(re(r.label??((p=r==null?void 0:r.meta)==null?void 0:p.label)??r.name)):`${Z(G(r.name))} ${Z(a)}`},"translateActionTitle");var ne=o(e=>{let{action:r,i18n:a,noQuotes:c}=e;return a?`{translate("buttons.${r}")}`:c?Z(r):`"${Z(r)}"`},"translateButtonTitle");var Ye=o(e=>e.replace(/export\s+(const|let|var|type|interface|function|class)\s+(\w+)\s*(=|:)\s*/g,"$1 $2 = ").split(`
`).filter(s=>!s.trim().startsWith("export default")).join(`
`),"replaceExports");var $t=/import(?:(?:(?:[ \n\t]+([^ *\n\t\{\},]+)[ \n\t]*(?:,|[ \n\t]+))?([ \n\t]*\{(?:[ \n\t]*[^ \n\t"'\{\}]+[ \n\t]*,?)+\})?[ \n\t]*)|[ \n\t]*\*[ \n\t]*as[ \n\t]+([^ \n\t\{\}]+)[ \n\t]+)from[ \n\t]*(?:['"])([^'"\n]+)(?:['"])(?:;?)/g,pr=/import[ \n\t](?:['"])([^'"\n]+)(?:['"])(?:;?)/g,ur=/((?:\w|\s|_)*)( as )((?:\w|\s|_)*)( |,)?/g,Je=o((e,r={})=>{let a=e.matchAll($t),c=new Set;for(let s of a){let[,p,d,l,y]=s;if(y in r){let x=r[y];if(y==="react")continue;p&&c.add(`const { default: ${p} } = ${x};`),d&&c.add(`const${d.replace(ur,"$1: $3$4")} = ${x};`),l&&c.add(`const ${l} = ${x};`)}}return gt(`
    ${Array.from(c).join(`
`)}
    ${e.replace($t,"").replace(pr,"")}
    `)},"replaceImports");var Ae=K(require("pluralize"));var Xe=o((e,r)=>e?r.find(c=>{let s=Q(e.key);return c.name===s||c.name===(Ae.default.isPlural(s)?s:Ae.default.plural(s))||c.name===(Ae.default.isSingular(s)?s:Ae.default.singular(s))}):void 0,"resourceFromInferred");var xt=K(require("pluralize"));var oe=o((e,r,a="Inferred")=>{let c=e.replace(/[^a-zA-Z0-9]/g," "),s=xt.default.singular(c),d=Z(s).replace(/ /g,"")||a,l=r.charAt(0).toUpperCase()+r.slice(1);return/^[a-zA-Z]/.test(d)?`${d}${l}`:`${l}${d}`},"componentName");var lr=o(e=>e?Array.isArray(e)?e.join(""):typeof e=="string"?e:typeof e=="object"||typeof e=="function"?e.toString():typeof e=="number"?String(e):typeof e=="boolean"&&e?"true":e:"","handleExpression"),I=o((e,...r)=>e.reduce((c,s,p)=>`${c}${s}${lr(r[p])}`,"").trim(),"jsx");var et=o((e,r)=>`
    ${e??""}
    
    render(typeof ${r} !== "undefined" ? <${r} /> : <></>);
    `,"prepareLiveCode");var tt=o(e=>e==null?void 0:e.replace(/(\/\* hidden-start \*\/)(.|\n)*?(\/\* hidden-end \*\/)/g,""),"removeHiddenCode");var mr=/^[a-zA-Z_$][a-zA-Z_$0-9]*$/,rt=o(e=>mr.test(e),"shouldDotAccess");function nt(e,r,a){let c=`${e}`;return r&&(c+="?.",rt(r)?c+=r:c+=`['${r}']`),a&&(c+="?.",rt(a)?c+=a:c+=`['${a}']`),c}o(nt,"accessorSingle");function dr(e,r,a){return(a??[]).map(s=>nt(e,r,s))}o(dr,"accessorMultiple");var m=o((e,r,a,c=' + " " + ')=>Array.isArray(a)?c?dr(e,r,a).join(c):nt(e,r,a[0]):nt(e,r,a),"accessor"),_=o((e,r,a)=>{let c=e;return r&&(c+=`.${r}`),a&&(Array.isArray(a)?c+=`.${a[0]}`:c+=`.${a}`),c},"dotAccessor");var pe=o(e=>{let r=e.reduce((c,[s,p,d])=>(c[p]||(c[p]=[]),c[p].includes(s)||(d?c[p].push([s,!0]):c[p].push(s)),c),{});return Object.entries(r).map(([c,s])=>{let p=s.find(x=>Array.isArray(x)&&x[1]),d=s.filter(x=>typeof x=="string"),l=p?`${p[0]}`:"",y=d.length?`{ ${d.join(", ")} }`:"";return`import ${l}${l&&y?", ":""}${y} from "${c}";`})},"printImports");var yr=/^id$/i,Te=o(e=>yr.test(e),"isIDKey");var Re=o(e=>{var r;return e.relationInfer&&(r=e.relationInfer)!=null&&r.accessor?Array.isArray(e.relationInfer.accessor)?`optionLabel: "${e.relationInfer.accessor[0]}",`:e.relationInfer.accessor!=="title"?`optionLabel: "${e.relationInfer.accessor}",`:"":""},"getOptionLabel");var ue=o(e=>{},"noOp");var P=o((e,r="")=>{if(Number.isInteger(Number(e)))return r.charAt(0).toLowerCase()+r.slice(1)+e;let c=e.replace(/^\d+/,"").replace(/[^a-zA-Z0-9]/g,"-"),s=Z(c).replace(/ /g,"");return`${s.charAt(0).toLowerCase()+s.slice(1)}${r.charAt(0).toUpperCase()+r.slice(1)}`},"getVariableName");var q=o((e,r,a)=>{var A,C,g,w;if(!(r&&a&&e)||!Object.keys(r).length)return"";let c=e?r[e]:{},s=[],p=a.find(N=>c[N]),d=c==null?void 0:c[p||"default"];if(!d)return"";let{gqlQuery:l,gqlMutation:y,...x}=d;Object.keys(x).forEach(N=>{s.push(`${N}: ${JSON.stringify(x[N])}`)}),l&&s.push(`gqlQuery: gql\`${(C=(A=l==null?void 0:l.loc)==null?void 0:A.source)==null?void 0:C.body}\``),y&&s.push(`gqlMutation: gql\`${(w=(g=y==null?void 0:y.loc)==null?void 0:g.source)==null?void 0:w.body}\``);let v=s.join(",");return v.length?`meta:{${v}}`:""},"getMetaProps"),ae=o((e,r,a)=>{if(r&&a&&e){let c=e?r[e]:{},p=[...a,"default"].reduce((d,l)=>d??(c==null?void 0:c[l]),void 0);if(p)return p}},"pickMeta");var Pe=o(e=>e===void 0?e:typeof e=="string"?`"${e}"`:e,"idQuoteWrapper");var ie=o((e,r)=>{for(let a in e)if(r.includes(a)||typeof e[a]=="object"&&e[a]!==null&&ie(e[a],r))return!0;return!1},"deepHasKey");var It=o(e=>{let r=o((a,c,s,p=r,d)=>{let l=e.map(x=>x(a,c,s,p,d));return Ge(l)},"fieldInferencer");return r},"composeInferencers");var vt=o(e=>o((a,c,s,p,d,l)=>e.reduce((y,x)=>x(y,c,s,p,d,l),a),"fieldTransformer"),"composeTransformers");var bt=o((e,r,a,c,s)=>{let p=Array.isArray(r),d=Array.isArray(r)&&r.every(l=>typeof l=="string"||typeof l=="number");if(p){if(!d){let y=c(e,r[0],a,c,s);return y?{...y,key:e,multiple:!0,priority:1}:!1}let l=c(e,r[0],a,c,s)||{type:"string"};return{key:e,multiple:!0,priority:1,type:l==null?void 0:l.type}}return!1},"arrayInfer");var kt=o((e,r)=>typeof r=="boolean"?{key:e,type:"boolean"}:!1,"booleanInfer");var ot=K(require("dayjs"));var fr=/(_at|_on|At|On|AT|ON)(\[\])?$/,gr=["/",":","-","."],Ct=o((e,r)=>{let a=fr.test(e)&&(0,ot.default)(r).isValid(),c=typeof r=="string"&&(0,ot.default)(r).isValid();return typeof r=="string"&&gr.some(p=>r.includes(p))&&(a||c)?{key:e,type:"date",priority:1}:!1},"dateInfer");var hr=/^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,Ft=o((e,r)=>typeof r=="string"&&hr.test(r)?{key:e,type:"email",priority:1}:!1,"emailInfer");var $r=/\.(gif|jpe?g|tiff?|png|webp|bmp|svg)$/i,wt=o((e,r)=>typeof r=="string"&&$r.test(r)?{key:e,type:"image",priority:2}:!1,"imageInfer");var St=o((e,r)=>typeof r>"u"||r===null?null:!1,"nullishInfer");var At=o((e,r)=>{let a=typeof r=="string"&&r.length>0,c=!Number.isNaN(Number(r));return a&&c||typeof r=="number"?{key:e,type:"number"}:!1},"numberInfer");var Tt=/id$/i,Rt=o((e,r,a,c,s)=>{let p=r!==null,d=!Array.isArray(r);if(p&&d&&typeof r=="object"){let y=Object.keys(r).length===1&&Tt.test(Object.keys(r)[0]),x=Object.keys(r).some(C=>Tt.test(C));if(y)return{key:e,type:"relation",relation:!0,accessor:"id",priority:1};let v=Qe(e,r);if((v?v.length>0:!1)&&v){let C=v&&Array.isArray(v)?v[0]:v,g=c(C,r[C],r,c,s);if(g){let w=Array.isArray(v)?v.map(N=>g.accessor?`${N}.${Array.isArray(g.accessor)?g.accessor[0]:g.accessor}`:N):g.accessor?Array.isArray(g.accessor)?`${v}.${g.accessor[0]}`:`${v}.${g.accessor}`:v;return(g==null?void 0:g.type)==="text"&&(s==="create"||s==="edit")&&x?{key:e,type:"relation",relation:!0,accessor:"id",priority:1}:{...g,fieldable:!0,key:e,accessor:w,priority:1}}}return{key:e,fieldable:!1,type:"object",priority:1}}return!1},"objectInfer");var Pt=o((e,r)=>typeof r=="string"&&r.length>100?{key:e,type:"richtext",priority:1}:!1,"richtextInfer");var Nt=o((e,r)=>typeof r=="string"?{key:e,type:"text"}:!1,"textInfer");var xr=/^(https?|ftp):\/\/(-\.)?([^\s/?\.#-]+\.?)+(\/[^\s]*)?$/i,Vt=o((e,r)=>typeof r=="string"&&xr.test(r)?{key:e,type:"url",priority:1}:!1,"urlInfer");var Lt=[bt,kt,Ct,Ft,wt,St,At,Rt,ht,Pt,Nt,Vt];var Mt=o((e,r,a,c)=>e.map(p=>{if(!p.relation&&(p.type==="text"||p.type==="richtext"||p.type==="number")&&!p.canRelation){let d=/^[a-z0-9-]+$/,l=o(C=>d.test(`${C}`),"isValidUUID"),y=p.key.toLowerCase()!=="id";return!(!p.accessor||typeof p.accessor=="string")||!y?p:(p.multiple?c[p.key]:[c[p.key]]).every(C=>l(p.accessor?C[p.accessor]:C))?{...p,canRelation:!0}:p}return p}),"basicToRelation");var Ir=/(image|photo|avatar|cover|thumbnail|icon)/i,Et=o(e=>e.map(a=>a.type==="url"&&Ir.test(a.key)?{...a,type:"image"}:a),"imageByKey");var Ot=o((e,r)=>e.map(c=>{let s=Xe(c,r);return s?{...c,relation:!0,type:"relation",resource:s}:c}),"relationByResource");var Ht=o((e,r,a,c,s,p)=>e.map(l=>{if(l.relation&&l.type==="relation"&&!l.resource){let y=l.accessor?c[l.key][l.accessor]:c[l.key],x=s(l.key,y,c,s,p);if(x&&x.type!=="relation")return{...l,fieldable:!0,relation:!1,type:x.type,canRelation:!0}}return l}),"relationToFieldable");var Dt=[Et,Ot,Ht,Mt];var te=K(require("react")),vr=K(require("@refinedev/core")),br=K(require("graphql-tag")),Me=require("@aliemir/react-live");var jt=[["react","React",te.default],["@refinedev/core","RefineCore",vr],["graphql-tag","GraphqlTag",br]],st=te.default.createContext({}),at=o(({fetchError:e,code:r,additionalScope:a,errorComponent:c})=>{let s=(r&&Ye(Je(r,[...jt,...a??[]].reduce((l,[y,x,v,A])=>A?l:{...l,[y]:x},{}))))??"",p=te.default.useMemo(()=>({React:te.default,...te.default,...[...jt,...a??[]].reduce((l,[y,x,v])=>({...l,[x]:v}),{})}),[a]),d=te.default.useMemo(()=>o(()=>{let{error:y}=te.default.useContext(st);return c?te.default.createElement(c,{error:y?`<p>An error occured while rendering the generated component.You can check the generated code from the below "Show Code" button and fix the error manually.</p>
                                    <p>If you think this is a bug, please report the issue at <a target="_blank" rel="noopener noreferrer" href="https://github.com/refinedev/refine/issues">https://github.com/refinedev/refine/issues</a></p>
                                    <p>Exception:</p>
                                    <code>${y}</code>`:typeof e=="string"?e:e?`<p>Something went wrong while fetching the resource data.</p>
                                    <p>To learn more about the Inferencer, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`:void 0}):null},"LiveErrorComponent"),[c,e]);return te.default.createElement(Me.LiveProvider,{Context:st,code:s,scope:p,noInline:!0},!e&&te.default.createElement(Me.LivePreview,{Context:st}),te.default.createElement(d,null))},"LiveComponent");var f=K(require("react")),Ee=K(require("prism-react-renderer")),Bt=K(require("prism-react-renderer/themes/vsDark"));var ye=o(({code:e,loading:r})=>{let a=f.default.useMemo(()=>_e(e??""),[e]),[c,s]=f.default.useState(!1),[p,d]=f.default.useState(!1),[l,y]=f.default.useState(!1),[x,v]=f.default.useState(!1),[A,C]=f.default.useState(!1);return f.default.useEffect(()=>{if(!r){let g=setTimeout(()=>{s(!0)},300);return()=>{clearTimeout(g)}}return()=>{}},[r]),f.default.useEffect(()=>{if(typeof window<"u"){let g=window.matchMedia("(max-width: 449px)");g.matches?y(!1):y(!0);let w=o(()=>{g.matches?y(!1):y(!0)},"handleResize");return window.addEventListener("resize",w),()=>{window.removeEventListener("resize",w)}}return()=>{}},[]),f.default.useEffect(()=>{if(typeof window<"u"){let g=window.matchMedia("(max-width: 1280px)");g.matches?v(!0):v(!1);let w=o(()=>{g.matches?v(!0):v(!1)},"handleResize");return window.addEventListener("resize",w),()=>{window.removeEventListener("resize",w)}}return()=>{}},[]),a&&!r?f.default.createElement(f.default.Fragment,null,l&&f.default.createElement("div",{className:"refine-inferencer--code-viewer",style:{position:"sticky",bottom:"24px",paddingTop:"24px",left:0,right:0,width:"100%",zIndex:10,display:"flex",justifyContent:"center",transition:"all 0.2s ease",opacity:c&&!p?1:0,transform:c&&!p?"translateY(0)":"translateY(100px)"}},f.default.createElement("div",{style:{width:"calc(100% - calc(64px * 2))",maxWidth:"1080px",padding:"20px",backgroundColor:"#1A1A1A",boxShadow:"0px 4px 16px -4px rgba(0, 0, 0, 0.5), 0px 8px 32px -8px rgba(0, 0, 0, 0.35)",borderRadius:"16px",display:"flex",alignItems:"center",justifyContent:"space-between",flexDirection:x?"column":"row",gap:"12px"}},f.default.createElement("div",{style:{display:"flex",alignItems:"flex-start",gap:"8px"}},f.default.createElement("div",null,f.default.createElement(Cr,null)),f.default.createElement("div",{style:{fontSize:"14px",lineHeight:"20px",color:"#ffffff"}},f.default.createElement("p",{style:{padding:0,margin:0}},"Most of the page code is auto-generated by the"," ",f.default.createElement("span",{style:{textDecoration:"underline"}},"Inferencer")," ","feature, based on your backend data structure."),f.default.createElement("p",{style:{padding:0,margin:0}},"While this is an excellent way to experiment with refine,"," ",f.default.createElement("span",{style:{fontWeight:600}},"it's not intended to be used on production.")))),f.default.createElement("div",null,f.default.createElement("button",{onPointerEnter:()=>C(!0),onPointerLeave:()=>C(!1),onClick:()=>d(!0),style:{appearance:"none",border:"none",padding:"10px 16px",borderRadius:"4px",display:"flex",alignItems:"center",justifyContent:"center",background:"#0080FF",color:"#ffffff",fontSize:"14px",lineHeight:"20px",fontWeight:600,gap:"8px",cursor:"pointer",transition:"all 0.2s ease",transform:A?"scale(1.025)":void 0,filter:A?"brightness(1.1)":void 0}},f.default.createElement(Kt,{style:{flexShrink:0}}),f.default.createElement("span",null,"Show the auto-generated code"))))),f.default.createElement(kr,{visible:p,onClose:()=>d(!1),code:a})):null},"SharedCodeViewer"),kr=o(({visible:e,onClose:r,code:a=""})=>{let c=f.default.useRef(null),[s,p]=f.default.useState(!1),[d,l]=f.default.useState(!1),[y,x]=f.default.useState(!1),[v,A]=f.default.useState(!1);f.default.useEffect(()=>{if(typeof document<"u"){let i=o($=>{c.current&&!c.current.contains($.target)&&r()},"onOutsideClick");return document.addEventListener("pointerdown",i),()=>{document.removeEventListener("pointerdown",i)}}return()=>{}},[r]);let C=o(()=>{typeof navigator<"u"&&(navigator.clipboard.writeText(a),p(!0),setTimeout(()=>{p(!1)},1e3))},"onCopy"),g=f.default.createElement("div",{style:{display:"flex",justifyContent:"space-between",alignItems:"center"}},f.default.createElement("div",{style:{fontWeight:700,fontSize:"20px",lineHeight:"32px",color:"#0D0D0D"}},"Auto-generated code by Inferencer"),f.default.createElement("button",{onClick:r,onPointerEnter:()=>x(!0),onPointerLeave:()=>x(!1),style:{flexShrink:0,appearance:"none",border:"none",background:"none",padding:0,margin:0,outline:"none",borderRadius:"50px",width:"32px",height:"32px",cursor:"pointer",transition:"all 0.15s ease",transform:y?"scale(1.05)":void 0,filter:y?"brightness(0.8)":void 0}},f.default.createElement(Fr,null))),w=f.default.createElement("div",{style:{fontSize:"13px",borderRadius:"8px",flex:"1",overflow:"scroll",background:"#1E1E1E"}},f.default.createElement(Ee.default,{...Ee.defaultProps,theme:Bt.default,code:a,language:"tsx"},({className:i,style:$,tokens:u,getLineProps:T,getTokenProps:V})=>f.default.createElement("pre",{className:i,style:{...$,padding:"14px 14px 14px 14px",margin:"0",width:"100%",boxSizing:"border-box"}},u.map((F,D)=>f.default.createElement("div",{key:D,...T({line:F,key:D})},F.map((E,L)=>f.default.createElement("span",{key:L,...V({token:E,key:L})})))))));return f.default.createElement("div",{className:"refine-inferencer--code-viewer-modal",style:{position:"fixed",top:0,left:0,right:0,bottom:0,zIndex:9999,backgroundColor:"rgba(0, 0, 0, 0.5)",transition:"all 0.2s ease",opacity:e?1:0,pointerEvents:e?"all":"none",display:"flex",justifyContent:"center",alignItems:"center"}},f.default.createElement("div",{ref:c,style:{transform:e?"scale(1) translateY(0px)":"scale(0) translateY(-200px)",transition:"all 0.25s cubic-bezier(.35,1.29,.81,1.08)",transitionDelay:"0.25",width:"calc(100% - calc(32px * 2))",height:"calc(100% - calc(32px * 2))",backgroundColor:"#fff",maxWidth:"640px",maxHeight:"720px",borderRadius:"8px",padding:"16px"}},f.default.createElement("div",{style:{display:"flex",flexDirection:"column",height:"100%",width:"100%",gap:"16px"}},g,w,f.default.createElement("div",{style:{display:"flex",justifyContent:"flex-start",alignItems:"flex-end",gap:"16px"}},f.default.createElement("button",{onPointerEnter:()=>l(!0),onPointerLeave:()=>l(!1),onClick:C,style:{appearance:"none",height:"40px",border:"none",padding:"10px 16px",borderRadius:"4px",display:"flex",alignItems:"center",justifyContent:"center",background:"#0080FF",color:"#ffffff",fontSize:"14px",lineHeight:"20px",fontWeight:600,gap:"8px",cursor:"pointer",position:"relative",overflow:"hidden",transition:"filter 0.2s ease",transform:d?"scale(1.025)":"scale(1)",filter:d?"brightness(1.1)":void 0}},f.default.createElement(qt,{style:{flexShrink:0,marginTop:"-2px",marginBottom:"-2px"}}),f.default.createElement("span",null,"Copy Generated Code"),f.default.createElement("div",{style:{position:"absolute",width:"100%",height:"100%",top:0,left:0,display:"flex",alignItems:"center",justifyContent:"center",background:"#0080FF",transition:"all 0.2s ease",transform:s?"translateY(0)":"translateY(40px)"}},f.default.createElement(qt,{style:{flexShrink:0,marginTop:"-2px",marginBottom:"-2px"}}),f.default.createElement("span",null,"Copied!"))),f.default.createElement("a",{onPointerEnter:()=>A(!0),onPointerLeave:()=>A(!1),href:"https://refine.dev/docs/packages/documentation/inferencer",target:"_blank",rel:"noreferrer",style:{appearance:"none",textDecoration:"none",border:"none",padding:"10px 16px",borderRadius:"4px",display:"flex",alignItems:"center",justifyContent:"center",background:"rgba(0, 128, 255, 0.1)",color:"#0080FF",fontSize:"14px",lineHeight:"20px",fontWeight:600,gap:"8px",cursor:"pointer",transition:"all 0.2s ease",transform:v?"scale(1.025)":void 0,filter:v?"brightness(1.1)":void 0}},f.default.createElement(Kt,{style:{flexShrink:0}}),f.default.createElement("span",null,"Learn more about inferencer"))))))},"CodeModal"),Cr=o(e=>f.default.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:20,height:20,fill:"none",...e},f.default.createElement("path",{fill:"#0080FF",fillRule:"evenodd",d:"M10 20C4.477 20 0 15.523 0 10S4.477 0 10 0s10 4.477 10 10-4.477 10-10 10Zm0-15a1.25 1.25 0 1 0 0 2.5A1.25 1.25 0 0 0 10 5Zm0 10c.69 0 1.25-.56 1.25-1.25V10a1.25 1.25 0 1 0-2.5 0v3.75c0 .69.56 1.25 1.25 1.25Z",clipRule:"evenodd"})),"InfoIcon"),Kt=o(e=>f.default.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:16,height:16,fill:"none",...e},f.default.createElement("path",{fill:"currentColor",d:"M5 2a1 1 0 0 1 0 2H4v8h8v-1a1 1 0 1 1 2 0v1a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h1Z"}),f.default.createElement("path",{fill:"currentColor",d:"M9 2a1 1 0 0 0 0 2h1.586L6.293 8.293a1 1 0 0 0 1.414 1.414L12 5.414V7a1 1 0 1 0 2 0V3a1 1 0 0 0-1-1H9Z"})),"OpenIcon"),Fr=o(e=>f.default.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:32,height:32,fill:"none",...e},f.default.createElement("path",{fill:"#A6A6A6",fillRule:"evenodd",d:"M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16Zm-2.586-21.414a2 2 0 1 0-2.828 2.828L13.172 16l-2.586 2.586a2 2 0 1 0 2.828 2.828L16 18.828l2.586 2.586a2 2 0 1 0 2.828-2.828L18.828 16l2.586-2.586a2 2 0 1 0-2.828-2.828L16 13.172l-2.586-2.586Z",clipRule:"evenodd"})),"CloseIcon"),qt=o(e=>f.default.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:20,height:20,viewBox:"0 0 24 24",fill:"none",...e},f.default.createElement("path",{fill:"currentColor",fillRule:"evenodd",d:"M8 5a3 3 0 0 0 3 3h2a3 3 0 0 0 3-3h1a2 2 0 0 1 2 2v11a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2h1Zm0 7a1 1 0 0 1 1-1h6a1 1 0 1 1 0 2H9a1 1 0 0 1-1-1Zm1 3a1 1 0 1 0 0 2h4a1 1 0 1 0 0-2H9Z",clipRule:"evenodd"}),f.default.createElement("path",{fill:"currentColor",d:"M13 4a1 1 0 1 1 0 2h-2a1 1 0 1 1 0-2h2Z"})),"ClipboardIcon");var fe=K(require("react")),Oe=require("@refinedev/core");var Qt=o((e,r,a,c)=>{let{resource:s,id:p,resources:d}=(0,Oe.useResource)(r),l=a??p,y=(0,Oe.useDataProvider)(),[x,v]=fe.default.useState(void 0),[A,C]=fe.default.useState(void 0),[g,w]=fe.default.useState(void 0),[N,i]=fe.default.useState(!0),[$,u]=fe.default.useState(!1),T=fe.default.useCallback(async V=>{var E;let F=Se(s)??ze(s==null?void 0:s.name,void 0,d),D=y(F);u(!0),v(void 0);try{if((e==="list"||e==="create")&&s){let L=await D.getList({resource:s==null?void 0:s.name,meta:ae((s==null?void 0:s.identifier)??(s==null?void 0:s.name),c,["getList"])}),M=(E=L.data)==null?void 0:E[0];M||v(`<p>No records/data found for resource "${s==null?void 0:s.name}".</p>
                            <p>Please check your data provider and resource.</p>
                            <p>For more info, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`),C(M),w(L.data),setTimeout(()=>{u(!1)},500)}if((e==="edit"||e==="show")&&V&&s){let M=(await D.getOne({resource:s==null?void 0:s.name,id:V,meta:ae((s==null?void 0:s.identifier)??(s==null?void 0:s.name),c,["getOne"])})).data;M||v(`<p>No records/data found for resource "${s==null?void 0:s.name}".</p>
                            <p>Please check your data provider and resource.</p>
                            <p>For more info, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`),C(M),setTimeout(()=>{u(!1)},500)}}catch(L){console.warn("An error occured while fetching the resource data. Please check the error message below:",L),v(`<p>Something went wrong while fetching the resource data.</p>
                    <p>Please check your data provider and API for resource "${s==null?void 0:s.name}".</p>
                    <p>For more info, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`),setTimeout(()=>{u(!1)},500)}},[e,y,s,d]);return fe.default.useEffect(()=>{i(!1),!$&&!A&&T(l)},[T,l]),{data:A,datas:g,loading:$,initial:N,error:x}},"useInferFetch");var ve=K(require("react")),zt=require("@refinedev/core");var it=K(require("lodash/get"));var Gt=o(({record:e,fields:r,infer:a,meta:c})=>{let s=(0,zt.useDataProvider)(),[p,d]=ve.default.useState([]),[l,y]=ve.default.useState(!0),[x,v]=ve.default.useState(!1),A=ve.default.useCallback(async C=>{console.groupCollapsed("@refinedev/inferencer is trying to detect relations");let g=[];v(!0);try{let w=C.map(async i=>{var $,u,T,V;if(i&&(i.relation||i.canRelation)&&e){if(i.relationInfer)return i;let F=Se(i.resource),D=s(F),E=i.multiple,L=Array.isArray(i.accessor)?void 0:i.multiple?e[i.key].map(M=>i.accessor?(0,it.default)(M,i.accessor):M)[0]:i.accessor?(0,it.default)(e[i.key],i.accessor):e[i.key];if(L&&i.resource)try{let M={};if(E&&D.getMany){let{data:t}=await D.getMany({resource:i.resource.name,ids:[L],meta:ae((($=i.resource)==null?void 0:$.identifier)??((u=i.resource)==null?void 0:u.name),c,["getMany"])});M=t==null?void 0:t[0]}else{let{data:t}=await D.getOne({resource:i.resource.name,id:L,meta:ae(((T=i.resource)==null?void 0:T.identifier)??((V=i.resource)==null?void 0:V.name),c,E?["getMany","getOne"]:["getOne"])});M=t}g.push({status:"success",resource:i.resource.name,field:i.key});let n=a("__",M,{},a);return{...i,relationInfer:n}}catch{return g.push({status:"error",resource:i.resource.name,field:i.key}),{...i,relationInfer:null}}if(L){let M,n;try{let S={};if(E&&D.getMany){let{data:b}=await D.getMany({resource:re(Q(i.key)),ids:[L],meta:ae(re(Q(i.key)),c,["getMany"])});S=b==null?void 0:b[0]}else{let{data:b}=await D.getOne({resource:re(Q(i.key)),id:L,meta:ae(re(Q(i.key)),c,E?["getMany","getOne"]:["getOne"])});S=b}g.push({status:"success",resource:re(Q(i.key)),field:i.key}),M=S,n=!0}catch{g.push({status:"error",resource:re(Q(i.key)),field:i.key});let b={};try{if(E&&D.getMany){let{data:R}=await D.getMany({resource:G(Q(i.key)),meta:ae(G(Q(i.key)),c,["getMany"]),ids:[L]});b=R==null?void 0:R[0]}else{let{data:R}=await D.getOne({resource:G(Q(i.key)),meta:ae(G(Q(i.key)),c,E?["getMany","getOne"]:["getOne"]),id:L});b=R}g.push({status:"success",resource:G(Q(i.key)),field:i.key}),M=b,n=!1}catch{return g.push({status:"error",resource:G(Q(i.key)),field:i.key}),{...i,relationInfer:null}}}let t=a("__",M,{},a),h=Q(i.key);return{...i,relation:!0,type:"relation",resource:{name:n?re(h):G(h)},fieldable:!1,canRelation:void 0,relationInfer:t}}return{...i,relationInfer:null}}return i}),N=await Promise.all(w);d(N.filter(i=>i)),setTimeout(()=>{v(!1)},500)}catch{setTimeout(()=>{v(!1)},500)}setTimeout(()=>{console.log(`Tried to detect relations with ${g.length} attempts and succeeded with ${g.filter(w=>w.status==="success").length} attempts.`),console.groupEnd(),console.info("@refinedev/inferencer may send multiple requests to your API for nonexistent resources when trying to detect relations. To learn more about how the inferencer works, visit https://s.refine.dev/how-inferencer-works")},500)},[s,e]);return ve.default.useEffect(()=>{y(!1),!x&&r&&r.length>0&&p.length===0&&A(r)},[A,x,r,A]),{fields:p,loading:x,initial:l}},"useRelationFetch");var ge=o(({type:e,additionalScope:r=[],customElements:a=[],fieldTransformers:c=[],renderer:s,loadingComponent:p,errorComponent:d,codeViewerComponent:l})=>{let y=It([...Lt,...a]),x=vt([...Dt,...c]),v=o(({resourceName:C,fieldTransformer:g,hideCodeViewerInProduction:w,meta:N,id:i})=>{var xe,le;let{resource:$,resources:u}=(0,be.useResource)(C),{i18nProvider:T}=(0,W.useContext)(be.TranslationContext),{resource:V}=(0,be.useResource)(),{data:F,datas:D,loading:E,initial:L,error:M}=Qt(e,C??($==null?void 0:$.name),i,N),n=o((O,H,Y)=>{let J=y(O,H,Y,y,e);if(J&&$){let X=x([J],u,$,Y,y,e),B=g?X.flatMap(j=>{let U=g(j);return U?[U]:[]}):X;return B==null?void 0:B[0]}},"inferSingleField"),t=o(O=>Object.keys(O).map(Y=>{let J=O[Y];return n(Y,J,O)}).filter(Boolean),"inferSingleRecord"),h=o(O=>{let H=O.map(j=>t(j)),Y=O.flatMap(j=>Object.keys(j)).filter((j,U,Ce)=>Ce.indexOf(j)===U),J={},X=Y.map(j=>{let U=H.map(me=>me.find(ce=>ce.key===j));return U.reduce((me,ce,Le)=>{if(!ce)return me;let Fe=U.filter(de=>(de==null?void 0:de.key)===ce.key&&(de==null?void 0:de.type)===ce.type).length;return Fe>me.count?(J[j]=O[Le][j],{count:Fe,field:ce}):me},{count:0,field:void 0}).field});return{commonRecord:J,inferredFields:X}},"inferMultipleRecords"),[S,b]=W.default.useMemo(()=>{if(D&&(e==="list"||e==="create")){let O=h(D);return[O.inferredFields,O.commonRecord]}if(F){let O=Object.keys(F).map(H=>{let Y=F[H];return y(H,Y,F,y,e)}).filter(Boolean);if($){let H=x(O,u,$,F,y,e);return[g?H.flatMap(J=>{let X=g(J);return X?[X]:[]}):H,F]}return[[],F]}return[[],void 0]},[F,D,u,$,g]),{fields:R,loading:z}=Gt({record:b,fields:S,infer:y,meta:N}),se=W.default.useMemo(()=>{let O=[];return R.forEach((H,Y,J)=>{if(H.resource){if(O.findIndex(B=>{var j,U;return((j=B.resource)==null?void 0:j.name)===((U=H.resource)==null?void 0:U.name)})>-1)return;let X=J.filter((B,j)=>{var U,Ce,me,ce,Le,Fe;if(j!==Y){let de=H.resource,Jt=B.resource,Xt=((U=B.resource)==null?void 0:U.identifier)||((Ce=H.resource)==null?void 0:Ce.identifier)?((me=B.resource)==null?void 0:me.identifier)===((ce=H.resource)==null?void 0:ce.identifier):((Le=B.resource)==null?void 0:Le.name)===((Fe=H.resource)==null?void 0:Fe.name);return de&&Jt&&Xt}return!1});if(X.length>0)if(e==="create"||e==="edit"){let B;[H,...X].find(j=>{j.fieldable!==!0&&B===void 0&&(B=j)}),B?O.push(B):O.push(H)}else{let B;[H,...X].find(j=>{j.fieldable!==!1&&B===void 0&&(B=j)}),B?O.push(B):O.push(H)}else O.push(H)}else O.push(H)}),O},[R,e]),Ve=W.default.useMemo(()=>!E&&!z&&!L&&$?s({resource:$,resources:u,fields:se,infer:y,meta:N,isCustomPage:$.name!==(V==null?void 0:V.name),id:i,i18n:!!T}):"",[$,u,se,E,z]),Ke=w;return W.default.createElement(W.default.Fragment,null,p&&(E||z)&&W.default.createElement(p,null),!E&&!z&&W.default.createElement(W.default.Fragment,null,W.default.createElement(at,{fetchError:!E&&M?M:!E&&!L&&!F,code:et(Ve,oe(((xe=$==null?void 0:$.meta)==null?void 0:xe.label)??((le=$==null?void 0:$.options)==null?void 0:le.label)??($==null?void 0:$.label)??($==null?void 0:$.name)??"Resource",e)),errorComponent:d,additionalScope:r}),typeof l<"u"&&!Ke?W.default.createElement(l,{code:tt(Ve),loading:E||z}):null))},"Inferencer");return o(({name:C,resource:g,fieldTransformer:w,meta:N,hideCodeViewerInProduction:i,id:$})=>{let{resource:u}=(0,be.useResource)(g??C),T=`${(u==null?void 0:u.identifier)??(u==null?void 0:u.name)}-${e}-${$}`;return W.default.createElement(v,{hideCodeViewerInProduction:i,fieldTransformer:w,resourceName:g??C,meta:N??{},key:T,id:$})},"InferencerComponent")},"createInferencer");var He=K(require("react"));var he=o(({error:e})=>e?He.default.createElement("div",{style:{display:"flex",justifyContent:"center",alignItems:"center",minHeight:"300px",position:"relative"}},He.default.createElement("div",{style:{position:"absolute",top:"50%",left:"50%",transform:"translate(-50%, -50%)"}},He.default.createElement("div",{style:{fontSize:"1.5rem",fontWeight:"bold"},dangerouslySetInnerHTML:{__html:e??""}}))):null,"ErrorComponent");var ke=K(require("react"));var $e=o(()=>{let[e,r]=ke.default.useState(0);return ke.default.useEffect(()=>{if(typeof window<"u"){let a=setInterval(()=>{r(c=>c===3?0:c+1)},300);return()=>{clearInterval(a)}}return()=>{}},[]),ke.default.createElement("div",{style:{display:"flex",justifyContent:"center",alignItems:"center",minHeight:"120px",position:"relative"}},ke.default.createElement("div",{style:{position:"absolute",top:"50%",left:"50%",transform:"translate(-50%, -50%)"}},ke.default.createElement("span",{style:{fontSize:"1rem",fontWeight:600}},"loading",".".repeat(e))))},"LoadingComponent");var ct=o(({resource:e,fields:r,meta:a,isCustomPage:c,id:s,i18n:p})=>{let d=oe(e.label??e.name,"show"),l="record",y=[["React","react",!0],["useShow","@refinedev/core"],["useResource","@refinedev/core"],["useNavigation","@refinedev/core"]];p&&y.push(["useTranslate","@refinedev/core"]),ie(a||{},["gqlQuery","gqlMutation"])&&y.push(["gql","graphql-tag",!0]);let A=r.filter(t=>(t==null?void 0:t.relation)&&!(t!=null&&t.fieldable)&&(t==null?void 0:t.resource)).filter(Boolean).map(t=>{var h,S,b,R;if(t!=null&&t.relation&&!t.fieldable&&t.resource){if(t.multiple){y.push(["useMany","@refinedev/core"]);let z=m(l,t.key);return t.accessor&&(z=`${m(l,t.key)}?.map((item: any) => ${m("item",void 0,t.accessor)})`),`
                const { data: ${P(t.key,"Data")}, isLoading: ${P(t.key,"IsLoading")} } =
                useMany({
                    resource: "${t.resource.name}",
                    ids: ${z} || [],
                    queryOptions: {
                        enabled: !!${l} && !!${z}?.length,
                    },
                    ${q(((h=t==null?void 0:t.resource)==null?void 0:h.identifier)??((S=t==null?void 0:t.resource)==null?void 0:S.name),a,["getMany"])}
                });
                `}return y.push(["useOne","@refinedev/core"]),`
                const { data: ${P(t.key,"Data")}, isLoading: ${P(t.key,"IsLoading")} } =
                useOne({
                    resource: "${t.resource.name}",
                    id: ${m(l,t.key,t.accessor,!1)} || "",
                    queryOptions: {
                        enabled: !!${l},
                    },
                    ${q(((b=t==null?void 0:t.resource)==null?void 0:b.identifier)??((R=t==null?void 0:t.resource)==null?void 0:R.name),a,["getOne"])}
                });
            `}}).filter(Boolean),C=o(t=>{if(t.relation&&t.resource){let h=P(t.key,"Data"),S=P(t.key,"IsLoading");if(t.multiple){let b=`${m(l,t.key)}?.length`;return I`
                <div style={{ marginTop: "6px" }}>
                    <h5>${k({resource:e,field:t,i18n:p,noQuotes:!0})}</h5>
                    <ul>
                    {${S} && ${b} ? <>Loading...</> : (
                        <>
                        ${(()=>{var R;if(t.relationInfer){if((R=t.relationInfer)!=null&&R.accessor){if(Array.isArray(t.relationInfer.accessor))return console.log("@refinedev/inferencer: Inferencer failed to render this field",{key:t.key,relation:t.relationInfer}),'<span title="Inferencer failed to render this field. (Unsupported nesting)">Cannot Render</span>';let z=P(t.key),se=m(z,void 0,t.relationInfer.accessor);return I`
                                            {record?.${t.key}?.length ? ${h}?.data?.map((${z}: any) => <li key={${se}}>{${se}}</li>) : <></>}
                                        `}return console.log("@refinedev/inferencer: Inferencer failed to render this field",{key:t.key,relation:t.relationInfer}),'<span title="Inferencer failed to render this field. (Cannot find key)">Cannot Render</span>'}return console.log("@refinedev/inferencer: Inferencer failed to render this field",{key:t.key,relation:t.relationInfer}),'<span title="Inferencer failed to render this field (Cannot find relation)">Cannot Render</span>'})()}
                        </>
                    )}
                    </ul>
                </div>
                `}return t.fieldable?I`
                <div style={{ marginTop: "6px" }}>
                    <h5>${k({resource:e,field:t,i18n:p,noQuotes:!0})}</h5>
                    <div>{${m(l,t.key,t.accessor)}}</div>
                </div>
                `:I`
                <div style={{ marginTop: "6px" }}>
                    <h5>${k({resource:e,field:t,i18n:p,noQuotes:!0})}</h5>
                    <div>
                    {${S} ? <>Loading...</> : (
                        <>
                        ${(()=>{var b,R,z;if(t.relationInfer){if((b=t.relationInfer)!=null&&b.accessor)return Array.isArray(t.relationInfer.accessor)?`{${m(`${h}?.data`,void 0,t.relationInfer.accessor,' + " " + ')}}`:`{${h}?.data?.${t.relationInfer.accessor}}`;let se=((R=t==null?void 0:t.relationInfer)==null?void 0:R.type)==="object"&&!((z=t==null?void 0:t.relationInfer)!=null&&z.accessor);return se&&console.log("@refinedev/inferencer: Inferencer failed to render this field",{key:t.key,relation:t.relationInfer}),se?'<span title="Inferencer failed to render this field. (Cannot find key)">Cannot Render</span>':`{${h}?.data}`}return`{${h}?.data?.id}`})()}
                        </>
                    )}
                    </div>
                </div>
                `}},"renderRelationFields"),g=o(t=>{if(t.type==="text"){if(t.multiple){let h=m("item",void 0,t.accessor);return I`
                <div style={{ marginTop: "6px" }}>
                    <h5>${k({resource:e,field:t,i18n:p,noQuotes:!0})}</h5>
                    <ul>
                        {${m(l,t.key)}?.map((item: any) => (
                            <li key={${h}}>
                                {${h}}
                            </li>
                        ))}
                    </ul>
                </div>
            `}return I`
                <div style={{ marginTop: "6px" }}>
                    <h5>${k({resource:e,field:t,i18n:p,noQuotes:!0})}</h5>
                    <div>
                    {${m(l,t.key,t.accessor)}}
                    </div>
                </div>
            `}},"textFields"),w=o(t=>{if(t.type==="image"){if(t.multiple){let h=m("item",void 0,t.accessor);return I`
                <div style={{ marginTop: "6px" }}>
                    <h5>${k({resource:e,field:t,i18n:p,noQuotes:!0})}</h5>
                    <ul>
                    {${m(l,t.key)}?.map((item: any) => (
                        <li key={${h}}>
                            <img style={{ maxWidth: 200 }} src={${h}}/>
                        </li>
                    ))}
                    </ul>
                </div>
            `}return I`
                <div style={{ marginTop: "6px" }}>
                    <h5>${k({resource:e,field:t,i18n:p,noQuotes:!0})}</h5>
                    <img src={{ maxWidth: 200 }} src={${m(l,t.key,t.accessor," + ")}} />
                </div>
                `}},"imageFields"),N=o(t=>{if(t.type==="email"){if(t.multiple){let h=m("item",void 0,t.accessor);return I`
                <div style={{ marginTop: "6px" }}>
                    <h5>${k({resource:e,field:t,i18n:p,noQuotes:!0})}</h5>
                    <ul>
                        {${m(l,t.key)}?.map((item: any) => (
                            <li key={${h}}>
                                <a href={"mailto:" + ${h}}>{${h}}</a>
                            </li>
                        ))}
                    </ul>
                </div>
            `}return I`
                <div style={{ marginTop: "6px" }}>
                    <h5>${k({resource:e,field:t,i18n:p,noQuotes:!0})}</h5>
                    <div>
                        <a href={"mailto:" + ${m(l,t.key,t.accessor," + ")}}>
                            {${m(l,t.key,t.accessor," + ")}}
                        </a>
                    </div>
                </div>
            `}},"emailFields"),i=o(t=>{if(t.type==="url"){if(t.multiple){let h=m("item",void 0,t.accessor);return I`
                <div style={{ marginTop: "6px" }}>
                    <h5>${k({resource:e,field:t,i18n:p,noQuotes:!0})}</h5>
                    <ul>
                        {${m(l,t.key)}?.map((item: any) => (
                            <li key={${h}}>
                                <a href={${h}}>{${h}}</a>
                            </li>
                        ))}
                    </ul>
                </div>
            `}return I`
            <div style={{ marginTop: "6px" }}>
                <h5>${k({resource:e,field:t,i18n:p,noQuotes:!0})}</h5>
                <div>
                    <a href={${m(l,t.key,t.accessor," + ")}} target="_blank" rel="noreferrer">
                        {${m(l,t.key,t.accessor," + ")}}
                    </a>
                </div>
            </div>
            `}},"urlFields"),$=o(t=>{if(t.type==="boolean"){if(t.multiple){let h=m("item",void 0,t.accessor);return I`
                <div style={{ marginTop: "6px" }}>
                    <h5>${k({resource:e,field:t,i18n:p,noQuotes:!0})}</h5>
                    <ul>
                        {${m(l,t.key)}?.map((item: any) => (
                            <li key={${h}}>
                                {${h} ? "Yes" : "No"}
                            </li>
                        ))}
                    </ul>
                </div>
            `}return I`
            <div style={{ marginTop: "6px" }}>
                <h5>${k({resource:e,field:t,i18n:p,noQuotes:!0})}</h5>
                <div>
                {${m(l,t.key,t.accessor," && ")} ? "Yes" : "No"}
                </div>
            </div>
            `}},"booleanFields"),u=o(t=>{if(t.type==="date"){if(t.multiple){let h=m("item",void 0,t.accessor);return I`
                <div style={{ marginTop: "6px" }}>
                    <h5>${k({resource:e,field:t,i18n:p,noQuotes:!0})}</h5>
                    <ul>
                    {${m(l,t.key)}?.map((item: any) => (
                        <li key={${h}}>
                            {(new Date(${h})).toLocaleString(undefined, { timeZone: "UTC" })}
                        </li>
                    ))}
                    </ul>
                </div>
            `}return I`
            <div style={{ marginTop: "6px" }}>
                <h5>${k({resource:e,field:t,i18n:p,noQuotes:!0})}</h5>
                <div>
                    {(new Date(${m(l,t.key,t.accessor," + ' ' + ")})).toLocaleString(undefined, { timeZone: "UTC" })}
                </div>
            </div>
            `}},"dateFields"),T=o(t=>{if(t.type==="richtext")return I`
            <div style={{ marginTop: "6px" }}>
                <h5>${k({resource:e,field:t,i18n:p,noQuotes:!0})}</h5>
                <p>
                {${m(l,t.key,t.accessor,' + " " + ')}}
                </p>
            </div>
            `},"richtextFields"),V=o(t=>{if(t.type==="number"){if(t.multiple){let h=m("item",void 0,t.accessor);return I`
                <div style={{ marginTop: "6px" }}>
                    <h5>${k({resource:e,field:t,i18n:p,noQuotes:!0})}</h5>
                    <ul>
                        {${m(l,t.key)}?.map((item: any) => (
                        <li key={${h}}>
                            {${h}}
                        </li>
                        ))}
                    </ul>
                </div>
                `}return I`
                <div style={{ marginTop: "6px" }}>
                    <h5>${k({resource:e,field:t,i18n:p,noQuotes:!0})}</h5>
                    <div>
                    {${m(l,t.key,t.accessor,' + " " + ')} ?? ""}
                    </div>
                </div>
            `}},"numberFields"),F=o(t=>{if(t)return I`
                ${t}
            `},"wrapper"),D=r.map(t=>{switch(t==null?void 0:t.type){case"text":return F(g(t));case"number":return F(V(t));case"richtext":return F(T(t));case"email":return F(N(t));case"image":return F(w(t));case"date":return F(u(t));case"boolean":return F($(t));case"url":return F(i(t));case"relation":return F(C(t));default:return}}),{canEdit:E,list:L}=e??{},M=!!L;ue(y);let n=p&&"const translate = useTranslate();";return I`
    ${pe(y)}
    
    export const ${d} = () => {
        ${n}
        const { edit, list } = useNavigation();
        ${c?"":"const { id } = useResource();"}
        const { query } = useShow(${c?`{ 
                    resource: "${e.name}", 
                    id: ${Pe(s)},
                    ${q((e==null?void 0:e.identifier)??(e==null?void 0:e.name),a,["getOne"])}
                }`:q((e==null?void 0:e.identifier)??(e==null?void 0:e.name),a,["getOne"])?`{ ${q((e==null?void 0:e.identifier)??(e==null?void 0:e.name),a,["getOne"])} }`:""});
        const { data, isLoading } = query;

        const ${l} = data?.data;
    
        ${A}

        return (
            <div style={{ padding: "16px" }}>
            <div style={{ display: "flex", alignItems: "center", justifyContent: "space-between" }}>
                <h1>${ee({resource:e,action:"show",i18n:p})}</h1>
                <div style={{ display: "flex", gap: "8px" }}>
                ${M?I`<button onClick={() => list("${e.name}")}>${ee({resource:e,action:"list",i18n:p})}</button>`:""}
                ${E?I`<button onClick={() => edit("${e.name}", ${c?`"${s}"`:"id ?? ''"})}>${ne({action:"edit",i18n:p,noQuotes:!0})}</button>`:""}
                </div>
            </div>
                <div>
                    ${D.join("")}
                </div>
            </div>
        );
    };
    `},"renderer"),De=ge({type:"show",additionalScope:[],codeViewerComponent:ye,loadingComponent:$e,errorComponent:he,renderer:ct});var _t=require("@refinedev/react-table"),Wt=require("@tanstack/react-table");var Ie=o(e=>Array.isArray(e.accessor)||e.multiple?`accessorKey: "${e.key}"`:e.accessor?`accessorKey: "${_(e.key,void 0,e.accessor)}"`:`accessorKey: "${e.key}"`,"getAccessorKey"),pt=o(({resource:e,fields:r,meta:a,isCustomPage:c,i18n:s})=>{let p=oe(e.label??e.name,"list"),d="tableData?.data",l=[["React","react",!0],["useNavigation","@refinedev/core"],["useTable","@refinedev/react-table"],["ColumnDef","@tanstack/react-table"],["flexRender","@tanstack/react-table"]];s&&l.push(["useTranslate","@refinedev/core"]),ie(a||{},["gqlQuery","gqlMutation"])&&l.push(["gql","graphql-tag",!0]);let x=r.filter(n=>(n==null?void 0:n.relation)&&!(n!=null&&n.fieldable)&&(n==null?void 0:n.resource)),v=x.filter(Boolean).map(n=>{var t,h;if(n!=null&&n.relation&&!n.fieldable&&n.resource){l.push(["GetManyResponse","@refinedev/core"]),l.push(["useMany","@refinedev/core"]);let S="";return n.multiple?S=`[].concat(...(${d}?.map((item) => ${m("item",n.key,n.accessor,!1)}) ?? []))`:S=`${d}?.map((item) => ${m("item",n.key,n.accessor,!1)}) ?? []`,`
                const { data: ${P(n.key,"Data")} } =
                useMany({
                    resource: "${n.resource.name}",
                    ids: ${S},
                    queryOptions: {
                        enabled: !!${d},
                    },
                    ${q(((t=n==null?void 0:n.resource)==null?void 0:t.identifier)??((h=n==null?void 0:n.resource)==null?void 0:h.name),a,["getMany"])}
                });
                `}}).filter(Boolean),A=x==null?void 0:x.map(n=>{if(n!=null&&n.resource)return P(n.key,"Data")}).filter(Boolean),C=o(n=>{var t,h,S,b,R;if(n.relation&&n.resource){let z=`${P(n.key,"Data")}?.data`;if(Array.isArray(n.accessor))return;let se=`id: "${n.key}"`,Ve=`header: ${k({resource:e,field:n,i18n:s,noBraces:!0})}`,Ke=Ie(n),xe="";if(n.multiple){let le="item";if(n!=null&&n.relationInfer&&(le=m("item",void 0,n.relationInfer.accessor)),n!=null&&n.relationInfer&&((t=n==null?void 0:n.relationInfer)==null?void 0:t.type)==="object"&&!((h=n==null?void 0:n.relationInfer)!=null&&h.accessor))return console.log("@refinedev/inferencer: Inferencer failed to render this field",{key:n.key,relation:n.relationInfer}),`cell: function render({ getValue }) {
                        return (
                            <span title="Inferencer failed to render this field (Cannot find key)">Cannot Render</span>
                        )
                    }`;xe=`cell: function render({ getValue, table }) {
                    const meta = table.options.meta as {
                        ${P(n.key,"Data")}: GetManyResponse;
                    };

                    ${n!=null&&n.accessor?"try {":""}

                    const ${P(n.key,"")} = getValue<any[]>()?.map((item) => {
                        return meta.${P(n.key,"Data")}?.data?.find(
                            (resourceItems) => resourceItems.id === ${m("item",void 0,n.accessor)}
                        );
                    })


                    return (
                        <ul>
                            {${P(n.key,"")}?.map((item, index) => (
                                <li key={index}>
                                    {${le}}
                                </li>
                            ))}
                        </ul>
                    )
                    ${n!=null&&n.accessor?" } catch (error) { return null; }":""}
                }
            `}else if(n!=null&&n.relationInfer){let le=((S=n==null?void 0:n.relationInfer)==null?void 0:S.type)==="object"&&!((b=n==null?void 0:n.relationInfer)!=null&&b.accessor);le&&console.log("@refinedev/inferencer: Inferencer failed to render this field",{key:n.key,relation:n.relationInfer}),xe=`cell: function render({ getValue, table }) {
                        const meta = table.options.meta as {
                            ${P(n.key,"Data")}: GetManyResponse;
                        };

                        ${n!=null&&n.accessor?"try {":""}

                        const ${P(n.key,"")} = meta.${z}?.find(
                            (item) => item.id == getValue<any>(),
                        );

                        return ${le?'<span title="Inferencer failed to render this field (Cannot find key)">Cannot Render</span>':`${m(P(n.key),void 0,(R=n==null?void 0:n.relationInfer)==null?void 0:R.accessor)} ?? "Loading..."`};

                        ${n!=null&&n.accessor?" } catch (error) { return null; }":""}
                    },`}else xe="";return`
                {
                    ${se},
                    ${Ve},
                    ${Ke},
                    ${xe}
                }
            `}},"renderRelationFields"),g=o(n=>{if(n.type==="image"){let t=`id: "${n.key}"`,h=Ie(n),S=`header: ${k({resource:e,field:n,i18n:s,noBraces:!0})}`,b=I`
                cell: function render({ getValue }) {
                    ${n!=null&&n.accessor?"try {":""}
                        return <img style={{ maxWidth: "100px" }} src={${m("getValue<any>()",void 0,Array.isArray(n.accessor)?n.accessor:void 0," + ")}} />
                    ${n!=null&&n.accessor?" } catch (error) { return null; }":""}
                }
            `;if(n.multiple){let R=m("item",void 0,n.accessor," + ");b=`
                    cell: function render({ getValue }) {
                        ${n!=null&&n.accessor?"try {":""}
                            return (
                                <ul>
                                    {getValue<any[]>()?.map((item, index) => (
                                        <li key={index}><img src={${R}} style={{ height: "50px", maxWidth: "100px" }} /></li>
                                    ))}
                                </ul>
                            )
                        ${n!=null&&n.accessor?" } catch (error) { return null; }":""}
                    }
                `}return`
                {
                    ${t},
                    ${h},
                    ${S},
                    ${b}
                }
            `}},"imageFields"),w=o(n=>{if(n.type==="email"){let t=`id: "${n.key}"`,h=Ie(n),S=`header: ${k({resource:e,field:n,i18n:s,noBraces:!0})}`,b=I`
                cell: function render({ getValue }) {
                    return <a href={"mailto:" + ${m("getValue<any>()",void 0,Array.isArray(n.accessor)?n.accessor:void 0,' + " " + ')}}>{${m("getValue<any>()",void 0,Array.isArray(n.accessor)?n.accessor:void 0,' + " " + ')}}</a>
                }
            `;return n.multiple&&(b=`
                    cell: function render({ getValue }) {
                        return (
                            <ul>
                                {getValue<any[]>()?.map((item, index) => (
                                    <li key={index}>
                                        {${m("item",void 0,n.accessor," + ")}}
                                    </li>
                                ))}
                            </ul>
                        )
                    }
                `),`
                {
                    ${t},
                    ${h},
                    ${S},
                    ${b}
                }
            `}},"emailFields"),N=o(n=>{if(n.type==="url"){let t=`id: "${n.key}"`,h=Ie(n),S=`header: ${k({resource:e,field:n,i18n:s,noBraces:!0})}`,b=I`
                cell: function render({ getValue }) {
                    return <a href={${m("getValue<any>()",void 0,Array.isArray(n.accessor)?n.accessor:void 0," + ")}}>{${m("getValue<any>()",void 0,Array.isArray(n.accessor)?n.accessor:void 0," + ")}}</a>
                }
            `;return n.multiple&&(b=`
                    cell: function render({ getValue }) {
                        return (
                            <ul>
                                {getValue<any[]>()?.map((item, index) => (
                                    <li key={index}>
                                        {${m("item",void 0,n.accessor," + ")}}
                                    </li>
                                ))}
                            </ul>
                        )
                    }
                `),`
                {
                    ${t},
                    ${h},
                    ${S},
                    ${b}
                }
            `}},"urlFields"),i=o(n=>{if((n==null?void 0:n.type)==="boolean"){let t=`id: "${n.key}"`,h=Ie(n),S=`header: ${k({resource:e,field:n,i18n:s,noBraces:!0})}`,b=I`
                cell: function render({ getValue }) {
                    return ${m("getValue<any>()",void 0,Array.isArray(n.accessor)?n.accessor:void 0," + ")} ? "yes" : "no"
                }
            `;return n.multiple&&(b=`
                    cell: function render({ getValue }) {
                        return (
                            <ul>
                                {getValue<any[]>()?.map((item, index) => (
                                    <li key={index}>
                                        {${m("item",void 0,n.accessor," + ")} ? "yes" : "no"}
                                    </li>
                                ))}
                            </ul>
                        );
                    }
                `),`
                {
                    ${t},
                    ${h},
                    ${S},
                    ${b}
                }
            `}},"booleanFields"),$=o(n=>{if(n.type==="date"){let t=`id: "${n.key}"`,h=Ie(n),S=`header: ${k({resource:e,field:n,i18n:s,noBraces:!0})}`,b=I`
                cell: function render({ getValue }) {
                    return (new Date(${m("getValue<any>()",void 0,Array.isArray(n.accessor)?n.accessor:void 0,' + " " + ')})).toLocaleString(undefined, { timeZone: "UTC" })
                }
            `;return n.multiple&&(b=`
                    cell: function render({ getValue }) {
                        return (
                            <ul>
                                {getValue<any[]>()?.map((item, index) => (
                                    <li key={index}>
                                    {(new Date(${m("item",void 0,n.accessor," + ")})).toLocaleString(undefined, { timeZone: "UTC" })}
                                    </li>
                                ))}
                            </ul>
                        )
                    }
                `),`
                {
                    ${t},
                    ${h},
                    ${S},
                    ${b}
                }
            `}},"dateFields"),u=o(n=>{if(n&&(n.type==="text"||n.type==="number"||n.type==="richtext")){let t=`id: "${n.key}"`,h=Ie(n),S=`header: ${k({resource:e,field:n,i18n:s,noBraces:!0})}`,b="";return n.multiple&&(b=`
                    cell: function render({ getValue }) {
                        return (
                            <ul>
                                {getValue<any[]>()?.map((item, index) => (
                                    <li key={index}>
                                        {${m("item",void 0,n.accessor,' + " " + ')}}
                                    </li>
                                ))}
                            </ul>
                        )
                    }
                `),!n.multiple&&Array.isArray(n.accessor)&&(b=`
                    cell: function render({ getValue }) {
                        return (
                            <>{${m("getValue<any>()",n.key,n.accessor)}}</>
                        );
                    }
                `),`
                {
                    ${t},
                    ${h},
                    ${S},
                    ${b}
                }
            `}},"basicFields"),{canEdit:T,canShow:V,canCreate:F}=e??{},E=T||V?I`
    {
        id: "actions",
        accessorKey: "id",
        header: ${s?'translate("table.actions")':'"Actions"'},
        cell: function render({ getValue }) {
            return (
                <div
                    style={{
                        display: "flex",
                        flexDirection: "row",
                        flexWrap: "wrap",
                        gap: "4px",
                    }}
                >
                ${V?I`
                    <button
                        onClick={() => {
                            show("${e.name}", getValue() as string);
                        }}
                    >
                        ${ne({action:"show",i18n:s,noQuotes:!0})}
                    </button>
                    `:""}
                    ${T?I`
                            <button
                            onClick={() => {
                                edit("${e.name}", getValue() as string);
                            }}
                        >
                            ${ne({action:"edit",i18n:s,noQuotes:!0})}
                        </button>
                    `:""}
                </div>
            );
        },
    },
        `:"",L=r.map(n=>{switch(n==null?void 0:n.type){case"text":case"number":case"richtext":return u(n);case"email":return w(n);case"image":return g(n);case"date":return $(n);case"boolean":return i(n);case"url":return N(n);case"relation":return C(n);default:return}});ue(l);let M=s&&"const translate = useTranslate();";return I`
    ${pe(l)}
    
    export const ${p} = () => {
        ${M}
        const columns = React.useMemo<ColumnDef<any>[]>(() => [
            ${[...L,E].filter(Boolean).join(",")}
        ], [${s?"translate":""}]);

        ${T||V?I`
        const { ${T?"edit,":""} ${V?"show,":""} ${F?"create,":""} } = useNavigation();
        `:""}

        const {
            getHeaderGroups,
            getRowModel,
            setOptions,
            refineCore: {
                tableQueryResult: { data: tableData },
            },
            getState,
            setPageIndex,
            getCanPreviousPage,
            getPageCount,
            getCanNextPage,
            nextPage,
            previousPage,
            setPageSize,
            getColumn,
        } = useTable({
            columns,
            ${c?`
            refineCoreProps: {
                resource: "${e.name}",
                ${q((e==null?void 0:e.identifier)??(e==null?void 0:e.name),a,["getList"])}
            }
            `:q((e==null?void 0:e.identifier)??(e==null?void 0:e.name),a,["getList"])?`refineCoreProps: { ${q((e==null?void 0:e.identifier)??(e==null?void 0:e.name),a,["getList"])} },`:""}
            
        });

        ${v}

        setOptions((prev) => ({
            ...prev,
            meta: {
                ...prev.meta,
                ${A.join(", ")}
            },
        }));

        return (
            <div style={{ padding: "16px" }}>
            <div style={{ display: "flex", alignItems: "center", justifyContent: "space-between" }}>
                <h1>${ee({resource:e,action:"list",i18n:s})}</h1>
                ${F?I`<button onClick={() => create("${e.name}")}>${ne({action:"create",i18n:s,noQuotes:!0})}</button>`:""}
            </div>
                <div style={{ maxWidth: "100%", overflowY: "scroll" }}>
                    <table>
                        <thead>
                            {getHeaderGroups().map((headerGroup) => (
                                <tr key={headerGroup.id}>
                                    {headerGroup.headers.map((header) => (
                                        <th key={header.id}>
                                            {!header.isPlaceholder && (
                                                flexRender(
                                                    header.column.columnDef
                                                        .header,
                                                    header.getContext(),
                                                )
                                            )}
                                        </th>
                                    ))}
                                </tr>
                            ))}
                        </thead>
                        <tbody>
                            {getRowModel().rows.map((row) => (
                                <tr key={row.id}>
                                    {row.getVisibleCells().map((cell) => (
                                        <td key={cell.id}>
                                            {flexRender(
                                                cell.column.columnDef.cell,
                                                cell.getContext(),
                                            )}
                                        </td>
                                    ))}
                                </tr>
                            ))}
                        </tbody>
                    </table>
                </div>
                <div style={{ marginTop: "12px" }}>
                    <button
                        onClick={() => setPageIndex(0)}
                        disabled={!getCanPreviousPage()}
                    >
                        {"<<"}
                    </button>
                    <button
                        onClick={() => previousPage()}
                        disabled={!getCanPreviousPage()}
                    >
                        {"<"}
                    </button>
                    <button onClick={() => nextPage()} disabled={!getCanNextPage()}>
                        {">"}
                    </button>
                    <button
                        onClick={() => setPageIndex(getPageCount() - 1)}
                        disabled={!getCanNextPage()}
                    >
                        {">>"}
                    </button>
                    <span>
                        <strong>
                            {" "} {getState().pagination.pageIndex + 1} / {" "} {getPageCount()} {" "}
                        </strong>
                    </span>
                    <span>
                        | ${s?'{translate("pagination.go")}':"Go to Page"}:{" "}
                        <input
                            type="number"
                            defaultValue={getState().pagination.pageIndex + 1}
                            onChange={(e) => {
                                const page = e.target.value
                                    ? Number(e.target.value) - 1
                                    : 0;
                                setPageIndex(page);
                            }}
                        />
                    </span>{" "}
                    <select
                        value={getState().pagination.pageSize}
                        onChange={(e) => {
                            setPageSize(Number(e.target.value));
                        }}
                    >
                        {[10, 20, 30, 40, 50].map((pageSize) => (
                            <option key={pageSize} value={pageSize}>
                                ${s?'{translate("pagination.show")}':"Show"} {pageSize}
                            </option>
                        ))}
                    </select>
                </div>
            </div>   
        );
    };
    `},"renderer"),je=ge({type:"list",additionalScope:[["@refinedev/react-table","RefineReactTable",{useTable:_t.useTable}],["@tanstack/react-table","TanstackReactTable",{flexRender:Wt.flexRender}]],codeViewerComponent:ye,loadingComponent:$e,errorComponent:he,renderer:pt});var Ut=require("@refinedev/react-hook-form");var ut=o(({resource:e,fields:r,meta:a,isCustomPage:c,i18n:s})=>{let p=oe(e.label??e.name,"create"),d=[["React","react",!0],["useNavigation","@refinedev/core"],["useForm","@refinedev/react-hook-form"]];s&&d.push(["useTranslate","@refinedev/core"]),ie(a||{},["gqlQuery","gqlMutation"])&&d.push(["gql","graphql-tag",!0]);let x=r.filter(i=>(i==null?void 0:i.relation)&&!(i!=null&&i.fieldable)&&(i==null?void 0:i.resource)).filter(Boolean).map(i=>{var $,u;if(i!=null&&i.relation&&!i.fieldable&&i.resource)return d.push(["useSelect","@refinedev/core"]),`
                const { options: ${P(i.key,"Options")} } =
                useSelect({
                    resource: "${i.resource.name}",
                    ${Re(i)}
                    ${q((($=i==null?void 0:i.resource)==null?void 0:$.identifier)??((u=i==null?void 0:i.resource)==null?void 0:u.name),a,["getList"])}
                });
            `}).filter(Boolean),v=o(i=>{if(i.relation&&i.resource){d.push(["useSelect","@refinedev/core"]);let $=P(i.key,"Options");return I`
            <label>
                <span style={{ marginRight: "8px" }}>
                    ${k({resource:e,field:i,i18n:s,noQuotes:!0})}
                </span>
                <select
                    placeholder="Select ${G(i.resource.name)}"
                    {...register("${_(i.key,void 0,i.accessor)}", {
                        required: ${i.multiple?"false":'"This field is required"'},
                    })}
                >
                    {${$}?.map((option) => (
                        <option value={option.value} key={option.value}>
                            {option.label}
                        </option>
                    ))}
                </select>
                <span style={{ color: "red" }}>
                    {${m("(errors as any)",i.key,i.accessor,!1)}?.message as string}
                </span>
            </label>
            `}},"renderRelationFields"),A=o(i=>{if(i.type==="text"||i.type==="url"||i.type==="email"||i.type==="number"||i.type==="date"||i.type==="richtext"){if(Te(i.key)||i.multiple)return;let $=i.type==="richtext"?"textarea":"input";return I`
                <label>
                    <span style={{ marginRight: "8px" }}>
                        ${k({resource:e,field:i,i18n:s,noQuotes:!0})}
                    </span>
                    <${$}
                        ${i.type!=="date"&&i.type!=="richtext"?`type="${i.type}"`:""}
                        ${$==="textarea"?`
                            rows={5}
                            cols={33}
                            style={{ verticalAlign: "top" }}
                        `:""}
                        {...register("${_(i.key,void 0,i.accessor)}", {
                            required: "This field is required",
                            ${i.type==="number"?"valueAsNumber: true,":""}
                        })}

                    />
                    <span style={{ color: "red" }}>
                        {${m("(errors as any)",i.key,i.accessor,!1)}?.message as string}
                    </span>
                </label>
            `}},"basicInputFields"),C=o(i=>{if(i.type==="boolean")return i.multiple?void 0:I`
                <label>
                    <span style={{ marginRight: "8px" }}>
                        ${k({resource:e,field:i,i18n:s,noQuotes:!0})}
                    </span>
                    <input
                        type="checkbox"
                        {...register("${_(i.key,void 0,i.accessor)}", {
                            required: "This field is required",
                        })}
                    />
                    <span style={{ color: "red" }}>
                        {${m("errors",i.key,i.accessor,!1)}?.message as string}
                    </span>
                </label>
            `},"booleanFields"),g=r.map(i=>{switch(i==null?void 0:i.type){case"text":case"number":case"email":case"url":case"richtext":case"date":return A(i);case"boolean":return C(i);case"relation":return v(i);default:return}}),w=!!e.list;ue(d);let N=s&&"const translate = useTranslate();";return I`
    ${pe(d)}
    
    export const ${p} = () => {
        ${N}
        ${w?`
        const { list } = useNavigation();
        `:""}
        const {
            refineCore: { onFinish, formLoading },
            register,
            handleSubmit,
            resetField,
            formState: { errors },
        } = useForm(
            ${c?`
            { 
                refineCoreProps: {
                    resource: "${e.name}",
                    action: "create",
                    ${q(e.identifier??e.name,a,["create","getOne"])}
                }
            }`:q(e.identifier??e.name,a,["create","getOne"])?`{
                        refineCoreProps: { ${q(e.identifier??e.name,a,["create","getOne"])} }
                        }`:""}
        );
    
        ${x}

        return (
            <div style={{ padding: "16px" }}>
                <div style={{ display: "flex", justifyContent: ${w?'"space-between"':'"flex-start"'} }}>
                    <h1>${ee({resource:e,action:"create",i18n:s})}</h1>
                    ${w?I`
                            <div>
                        <button
                                onClick={() => {
                                    list("${e.name}");
                                }}
                        >
                            ${ee({resource:e,action:"list",i18n:s})}
                        </button>
                        </div>
                    `:""}
                </div>
                <form onSubmit={handleSubmit(onFinish)}>
                    <div style={{ display: "flex", flexDirection: "column", gap: "8px" }}>
                        ${g.join("")}
                        <div>
                            <input type="submit" value=${ne({action:"save",i18n:s})} />
                        </div>
                    </div>
                </form>
            </div>
        );
    };
    `},"renderer"),qe=ge({type:"create",additionalScope:[["@refinedev/react-hook-form","RefineReactHookForm",{useForm:Ut.useForm}]],codeViewerComponent:ye,loadingComponent:$e,errorComponent:he,renderer:ut});var Zt=require("@refinedev/react-hook-form");var lt=o(({resource:e,fields:r,meta:a,isCustomPage:c,id:s,i18n:p})=>{let d=oe(e.label??e.name,"edit"),l=P(e.label??e.name,"Data"),y=[["React","react",!0],["useNavigation","@refinedev/core"],["useForm","@refinedev/react-hook-form"]];p&&y.push(["useTranslate","@refinedev/core"]),ie(a||{},["gqlQuery","gqlMutation"])&&y.push(["gql","graphql-tag",!0]);let A=r.filter(u=>(u==null?void 0:u.relation)&&!(u!=null&&u.fieldable)&&(u==null?void 0:u.resource)).filter(Boolean).map(u=>{var T,V;if(u!=null&&u.relation&&!u.fieldable&&u.resource){y.push(["useSelect","@refinedev/core"]);let F=m(l,u.key,u.accessor,!1);return u.multiple&&u.accessor&&(F=`${m(l,u.key)}?.map((item: any) => ${m("item",void 0,u.accessor)})`),`
                const { options: ${P(u.key,"Options")} } =
                useSelect({
                    resource: "${u.resource.name}",
                    defaultValue: ${F},
                    ${Re(u)}
                    ${q(((T=u==null?void 0:u.resource)==null?void 0:T.identifier)??((V=u==null?void 0:u.resource)==null?void 0:V.name),a,["getList"])}
                });

                React.useEffect(() => {
                    setValue("${_(u.key,void 0,u.accessor)}", ${F});
                }, [${P(u.key,"Options")}]);
            `}}).filter(Boolean),C=o(u=>{if(u.relation&&u.resource){y.push(["useSelect","@refinedev/core"]);let T=P(u.key,"Options");return I`
            <label>
                <span style={{ marginRight: "8px" }}>${k({resource:e,field:u,i18n:p,noQuotes:!0})}</span>
                <select
                    placeholder="Select ${G(u.resource.name)}"
                    {...register("${_(u.key,void 0,u.accessor)}", {
                        required: ${u.multiple?"false":'"This field is required"'},
                    })}
                >
                    {${T}?.map((option) => (
                        <option value={option.value} key={option.value}>
                            {option.label}
                        </option>
                    ))}
                </select>
                <span style={{ color: "red" }}>
                    {${m("(errors as any)",u.key,u.accessor,!1)}?.message as string}
                </span>
            </label>
            `}},"renderRelationFields"),g=o(u=>{if(u.type==="text"||u.type==="url"||u.type==="email"||u.type==="number"||u.type==="date"||u.type==="richtext"){if(u.multiple){let V=_(u.key,"${index}",u.accessor),F=m(`${m("(errors as any)",u.key,void 0,!1)}?.[index]`,void 0,u.accessor);return`
                    <>
                        {${m(l,u.key)}?.map((item: any, index: number) => (
                            <label key={index}>
                                <span style={{ marginRight: "8px" }}>
                                    ${k({resource:e,field:u,i18n:p,noQuotes:!0})}
                                </span>
                                <input ${u.type!=="richtext"?`
                                type="${u.type!=="date"?u.type:"text"}"
                                `:""} {...register(\`${V}\`, { required: "This field is required", ${u.type==="number"?"valueAsNumber: true,":""} })} />
                                <span style={{color: "red"}}>
                                {${m(F,"message")} as string}
                                </span>
                            </label>
                        ))}
                    </>
                `}let T=u.type==="richtext"?"textarea":"input";return I`
            <label>
                <span style={{ marginRight: "8px" }}>${k({resource:e,field:u,i18n:p,noQuotes:!0})}</span>
                <${T}
                ${Te(u.key)?"disabled":""}
                ${u.type!=="date"&&u.type!=="richtext"?`type="${u.type}"`:""}
                ${T==="textarea"?`
                    rows={5}
                    cols={33}
                    style={{ verticalAlign: "top" }}
                `:""}
                {...register("${_(u.key,void 0,u.accessor)}", {
                    required: "This field is required",
                    ${u.type==="number"?"valueAsNumber: true,":""}
                })}
                />
                <span style={{ color: "red" }}>
                {${m("(errors as any)",u.key,u.accessor,!1)}?.message as string}
                </span>
            </label>
            `}},"basicInputFields"),w=o(u=>{if(u.type==="boolean"){if(u.multiple){let T=_(u.key,void 0,u.accessor),V=`${m("(errors as any)",u.key,void 0,!1)}?.[index]`;return`
                    <>
                        {${m(l,u.key)}?.map((item: any, index: number) => (
                            <label key={index}>
                            <span style={{ marginRight: "8px" }}>
                            ${k({resource:e,field:u,i18n:p,noQuotes:!0})}
                            </span>
                            <input
                                type="checkbox"
                                {...register(\`${T}.\${index}\`, {
                                    required: "This field is required",
                                })}
                            />
                            <span style={{ color: "red" }}>
                                {${V}?.message as string}
                            </span>
                        ))}
                    </>
                `}return I`
            <label>
                <span style={{ marginRight: "8px" }}>${k({resource:e,field:u,i18n:p,noQuotes:!0})}</span>
                <input type="checkbox" {...register("${_(u.key,void 0,u.accessor)}", {
                    required: "This field is required",
                })} />
                <span style={{ color: "red" }}>
                    {${m("errors",u.key,u.accessor,!1)}?.message as string}
                </span>
            </label>
            `}},"booleanFields"),N=r.map(u=>{switch(u==null?void 0:u.type){case"text":case"number":case"email":case"url":case"richtext":case"date":return g(u);case"boolean":return w(u);case"relation":return C(u);default:return}}),i=!!e.list;ue(y);let $=p&&"const translate = useTranslate();";return I`
    ${pe(y)}
    
    export const ${d} = () => {
        ${$}
        ${i?`
        const { list } = useNavigation();
        `:""}
        const {
            refineCore: { onFinish, formLoading, query },
            register,
            handleSubmit,
            setValue,
            formState: { errors },
        } = useForm(
            ${c?`
            { 
                refineCoreProps: {
                    resource: "${e.name}",
                    id: ${Pe(s)},
                    action: "edit",
                    ${q((e==null?void 0:e.identifier)??(e==null?void 0:e.name),a,["update","getOne"])}
                }
            }`:q((e==null?void 0:e.identifier)??(e==null?void 0:e.name),a,["update","getOne"])?`{ refineCoreProps: {
                        ${q((e==null?void 0:e.identifier)??(e==null?void 0:e.name),a,["update","getOne"])}
                    } }`:""}
        );
    
        const ${l} = query?.data?.data;
    
        ${A}

        return (
            <div style={{ padding: "16px" }}>
                <div style={{ display: "flex", justifyContent: ${i?'"space-between"':'"flex-start"'} }}>
                    <h1>${ee({resource:e,action:"edit",i18n:p})}</h1>
                    ${i?I`
                    <div>
                        <button
                                onClick={() => {
                                    list("${e.name}");
                                }}
                        >
                            ${ee({resource:e,action:"list",i18n:p})}
                        </button>
                    </div>
                    `:""}
                </div>
                <form onSubmit={handleSubmit(onFinish)}>
                    <div style={{ display: "flex", flexDirection: "column", gap: "8px" }}>
                        ${N.join("")}
                        <div>
                            <input type="submit" value=${ne({action:"save",i18n:p})} />
                        </div>
                    </div>
                </form>
            </div>
        );
    };
    `},"renderer"),Be=ge({type:"edit",additionalScope:[["@refinedev/react-hook-form","RefineReactHookForm",{useForm:Zt.useForm}]],codeViewerComponent:ye,loadingComponent:$e,errorComponent:he,renderer:lt});var wr=o(({action:e,id:r,...a})=>{let{action:c,id:s}=(0,Yt.useResource)();switch(e??c){case"show":return Ne.default.createElement(De,{...a,id:r??s});case"create":return Ne.default.createElement(qe,{...a,id:r??s});case"edit":return Ne.default.createElement(Be,{...a,id:r??s});default:return Ne.default.createElement(je,{...a,id:r??s})}},"HeadlessInferencer");
//# sourceMappingURL=headless.cjs.map