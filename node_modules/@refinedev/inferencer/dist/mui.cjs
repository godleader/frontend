"use client"
var vt=Object.create;var Ae=Object.defineProperty;var $t=Object.getOwnPropertyDescriptor;var It=Object.getOwnPropertyNames;var bt=Object.getPrototypeOf,kt=Object.prototype.hasOwnProperty;var o=(e,n)=>Ae(e,"name",{value:n,configurable:!0});var Ct=(e,n)=>{for(var c in n)Ae(e,c,{get:n[c],enumerable:!0})},mr=(e,n,c,p)=>{if(n&&typeof n=="object"||typeof n=="function")for(let s of It(n))!kt.call(e,s)&&s!==c&&Ae(e,s,{get:()=>n[s],enumerable:!(p=$t(n,s))||p.enumerable});return e};var b=(e,n,c)=>(c=e!=null?vt(bt(e)):{},mr(n||!e||!e.__esModule?Ae(c,"default",{value:e,enumerable:!0}):c,e)),Ft=e=>mr(Ae({},"__esModule",{value:!0}),e);var zt={};Ct(zt,{MuiCreateInferencer:()=>qe,MuiCreateRenderer:()=>ur,MuiEditInferencer:()=>He,MuiEditRenderer:()=>lr,MuiInferencer:()=>_t,MuiListInferencer:()=>De,MuiListRenderer:()=>pr,MuiShowInferencer:()=>Ve,MuiShowRenderer:()=>cr});module.exports=Ft(zt);var Ne=b(require("react")),gt=require("@refinedev/core");var Q=require("@refinedev/mui"),Jr=b(require("@mui/material/Typography")),Xr=b(require("@mui/material/Stack"));var te=b(require("react")),Fe=require("@refinedev/core");var wt=/(image|photo|avatar|url|logo|cover|thumbnail|icon)/i,At=/^(\w|\d|_|-|)*?(name|label){1}$/i,je=o((e,n)=>{let c=["name","label","title","count","content","username","nickname","login","firstName","lastName","url"],s=Object.keys(n).filter(f=>At.test(f));c.push(...s),wt.test(e)&&c.unshift("url");let u=c.find(f=>f in n&&!!n[f]);if(u)return u==="firstName"&&"lastName"in n?["firstName","lastName"]:u},"getFieldableKeys");var dr=require("@refinedev/core");function Ge(e,n,c){if(n)return n;let p=c==null?void 0:c.find(u=>u.name===e),s=(0,dr.pickNotDeprecated)(p==null?void 0:p.meta,p==null?void 0:p.options);return s!=null&&s.dataProviderName?s.dataProviderName:"default"}o(Ge,"pickDataProvider");var Te=o(e=>{var n;return(n=e==null?void 0:e.options)==null?void 0:n.dataProviderName},"dataProviderFromResource");var _e=o(e=>{let n=[...e].filter(Boolean).sort((c,p)=>(p.priority||0)-(c.priority||0))[0];return n||null},"pickInferredField");var fr=b(require("prettier/standalone")),yr=b(require("prettier/parser-typescript"));var ze=o(e=>{try{return fr.default.format(e,{parser:"typescript",plugins:[yr.default],arrowParens:"always",trailingComma:"all",semi:!0,tabWidth:4,printWidth:80})}catch(n){return console.warn("Formatting error in inferencer",n),e}},"prettierFormat");var gr=o(e=>e.replace(/ {2,}/g," ").replace(/\n{2,}/g,`
`),"prettySpaces");var Ke=/(-id|-ids|_id|_ids|Id|Ids|ID|IDs)(\[\])?$/,hr=o((e,n)=>{let c=Ke.test(e),p=typeof n=="string"||typeof n=="number",s=Array.isArray(n)&&n.every(u=>typeof u=="string"||typeof u=="number");return c&&p||c&&s?{key:e,relation:!0,multiple:s,type:"relation",priority:1}:!1},"relationInfer");var K=o(e=>e.replace(Ke,""),"removeRelationSuffix");var ke=o(e=>K(e).replace(/([a-z])([A-Z])/g,"$1 $2").replace(/_/g," ").replace(/-/g," ").split(" ").map(f=>f.charAt(0).toUpperCase()+f.slice(1)).join(" "),"prettyString");var I=o(e=>{let{resource:n,field:c,i18n:p}=e;if(p){let u=`translate("${n.name}.fields.${c.key}")`;return e.noBraces?`${u}`:`{${u}}`}let s=ke(c.key);return e.noQuotes?s:`"${s}"`},"translatePrettyString");var Qe=b(require("pluralize"));var me=o((e="")=>Qe.default.isSingular(e)?e:Qe.default.singular(e),"toSingular");var Ue=b(require("pluralize"));var de=o((e="")=>Ue.default.isPlural(e)?e:Ue.default.plural(e),"toPlural");var Ze=o(e=>e.replace(/export\s+(const|let|var|type|interface|function|class)\s+(\w+)\s*(=|:)\s*/g,"$1 $2 = ").split(`
`).filter(s=>!s.trim().startsWith("export default")).join(`
`),"replaceExports");var xr=/import(?:(?:(?:[ \n\t]+([^ *\n\t\{\},]+)[ \n\t]*(?:,|[ \n\t]+))?([ \n\t]*\{(?:[ \n\t]*[^ \n\t"'\{\}]+[ \n\t]*,?)+\})?[ \n\t]*)|[ \n\t]*\*[ \n\t]*as[ \n\t]+([^ \n\t\{\}]+)[ \n\t]+)from[ \n\t]*(?:['"])([^'"\n]+)(?:['"])(?:;?)/g,Tt=/import[ \n\t](?:['"])([^'"\n]+)(?:['"])(?:;?)/g,St=/((?:\w|\s|_)*)( as )((?:\w|\s|_)*)( |,)?/g,Ye=o((e,n={})=>{let c=e.matchAll(xr),p=new Set;for(let s of c){let[,u,f,l,m]=s;if(m in n){let v=n[m];if(m==="react")continue;u&&p.add(`const { default: ${u} } = ${v};`),f&&p.add(`const${f.replace(St,"$1: $3$4")} = ${v};`),l&&p.add(`const ${l} = ${v};`)}}return gr(`
    ${Array.from(p).join(`
`)}
    ${e.replace(xr,"").replace(Tt,"")}
    `)},"replaceImports");var Se=b(require("pluralize"));var Je=o((e,n)=>e?n.find(p=>{let s=K(e.key);return p.name===s||p.name===(Se.default.isPlural(s)?s:Se.default.plural(s))||p.name===(Se.default.isSingular(s)?s:Se.default.singular(s))}):void 0,"resourceFromInferred");var vr=b(require("pluralize"));var ce=o((e,n,c="Inferred")=>{let p=e.replace(/[^a-zA-Z0-9]/g," "),s=vr.default.singular(p),f=ke(s).replace(/ /g,"")||c,l=n.charAt(0).toUpperCase()+n.slice(1);return/^[a-zA-Z]/.test(f)?`${f}${l}`:`${l}${f}`},"componentName");var Pt=o(e=>e?Array.isArray(e)?e.join(""):typeof e=="string"?e:typeof e=="object"||typeof e=="function"?e.toString():typeof e=="number"?String(e):typeof e=="boolean"&&e?"true":e:"","handleExpression"),k=o((e,...n)=>e.reduce((p,s,u)=>`${p}${s}${Pt(n[u])}`,"").trim(),"jsx");var Xe=o((e,n)=>`
    ${e??""}
    
    render(typeof ${n} !== "undefined" ? <${n} /> : <></>);
    `,"prepareLiveCode");var er=o(e=>e==null?void 0:e.replace(/(\/\* hidden-start \*\/)(.|\n)*?(\/\* hidden-end \*\/)/g,""),"removeHiddenCode");var Lt=/^[a-zA-Z_$][a-zA-Z_$0-9]*$/,rr=o(e=>Lt.test(e),"shouldDotAccess");function tr(e,n,c){let p=`${e}`;return n&&(p+="?.",rr(n)?p+=n:p+=`['${n}']`),c&&(p+="?.",rr(c)?p+=c:p+=`['${c}']`),p}o(tr,"accessorSingle");function Nt(e,n,c){return(c??[]).map(s=>tr(e,n,s))}o(Nt,"accessorMultiple");var d=o((e,n,c,p=' + " " + ')=>Array.isArray(c)?p?Nt(e,n,c).join(p):tr(e,n,c[0]):tr(e,n,c),"accessor"),re=o((e,n,c)=>{let p=e;return n&&(p+=`.${n}`),c&&(Array.isArray(c)?p+=`.${c[0]}`:p+=`.${c}`),p},"dotAccessor");var fe=o(e=>{let n=e.reduce((p,[s,u,f])=>(p[u]||(p[u]=[]),p[u].includes(s)||(f?p[u].push([s,!0]):p[u].push(s)),p),{});return Object.entries(n).map(([p,s])=>{let u=s.find(v=>Array.isArray(v)&&v[1]),f=s.filter(v=>typeof v=="string"),l=u?`${u[0]}`:"",m=f.length?`{ ${f.join(", ")} }`:"";return`import ${l}${l&&m?", ":""}${m} from "${p}";`})},"printImports");var Rt=/^id$/i,he=o(e=>Rt.test(e),"isIDKey");var ye=o(e=>{},"noOp");var W=o((e,n="")=>{if(Number.isInteger(Number(e)))return n.charAt(0).toLowerCase()+n.slice(1)+e;let p=e.replace(/^\d+/,"").replace(/[^a-zA-Z0-9]/g,"-"),s=ke(p).replace(/ /g,"");return`${s.charAt(0).toLowerCase()+s.slice(1)}${n.charAt(0).toUpperCase()+n.slice(1)}`},"getVariableName");var H=o((e,n,c)=>{var T,C,g,F;if(!(n&&c&&e)||!Object.keys(n).length)return"";let p=e?n[e]:{},s=[],u=c.find(R=>p[R]),f=p==null?void 0:p[u||"default"];if(!f)return"";let{gqlQuery:l,gqlMutation:m,...v}=f;Object.keys(v).forEach(R=>{s.push(`${R}: ${JSON.stringify(v[R])}`)}),l&&s.push(`gqlQuery: gql\`${(C=(T=l==null?void 0:l.loc)==null?void 0:T.source)==null?void 0:C.body}\``),m&&s.push(`gqlMutation: gql\`${(F=(g=m==null?void 0:m.loc)==null?void 0:g.source)==null?void 0:F.body}\``);let $=s.join(",");return $.length?`meta:{${$}}`:""},"getMetaProps"),ue=o((e,n,c)=>{if(n&&c&&e){let p=e?n[e]:{},u=[...c,"default"].reduce((f,l)=>f??(p==null?void 0:p[l]),void 0);if(u)return u}},"pickMeta");var Pe=o(e=>e===void 0?e:typeof e=="string"?`"${e}"`:e,"idQuoteWrapper");var le=o((e,n)=>{for(let c in e)if(n.includes(c)||typeof e[c]=="object"&&e[c]!==null&&le(e[c],n))return!0;return!1},"deepHasKey");var $r=o(e=>{let n=o((c,p,s,u=n,f)=>{let l=e.map(v=>v(c,p,s,u,f));return _e(l)},"fieldInferencer");return n},"composeInferencers");var Ir=o(e=>o((c,p,s,u,f,l)=>e.reduce((m,v)=>v(m,p,s,u,f,l),c),"fieldTransformer"),"composeTransformers");var br=o((e,n,c,p,s)=>{let u=Array.isArray(n),f=Array.isArray(n)&&n.every(l=>typeof l=="string"||typeof l=="number");if(u){if(!f){let m=p(e,n[0],c,p,s);return m?{...m,key:e,multiple:!0,priority:1}:!1}let l=p(e,n[0],c,p,s)||{type:"string"};return{key:e,multiple:!0,priority:1,type:l==null?void 0:l.type}}return!1},"arrayInfer");var kr=o((e,n)=>typeof n=="boolean"?{key:e,type:"boolean"}:!1,"booleanInfer");var nr=b(require("dayjs"));var Mt=/(_at|_on|At|On|AT|ON)(\[\])?$/,Et=["/",":","-","."],Cr=o((e,n)=>{let c=Mt.test(e)&&(0,nr.default)(n).isValid(),p=typeof n=="string"&&(0,nr.default)(n).isValid();return typeof n=="string"&&Et.some(u=>n.includes(u))&&(c||p)?{key:e,type:"date",priority:1}:!1},"dateInfer");var Bt=/^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,Fr=o((e,n)=>typeof n=="string"&&Bt.test(n)?{key:e,type:"email",priority:1}:!1,"emailInfer");var Vt=/\.(gif|jpe?g|tiff?|png|webp|bmp|svg)$/i,wr=o((e,n)=>typeof n=="string"&&Vt.test(n)?{key:e,type:"image",priority:2}:!1,"imageInfer");var Ar=o((e,n)=>typeof n>"u"||n===null?null:!1,"nullishInfer");var Tr=o((e,n)=>{let c=typeof n=="string"&&n.length>0,p=!Number.isNaN(Number(n));return c&&p||typeof n=="number"?{key:e,type:"number"}:!1},"numberInfer");var Sr=/id$/i,Pr=o((e,n,c,p,s)=>{let u=n!==null,f=!Array.isArray(n);if(u&&f&&typeof n=="object"){let m=Object.keys(n).length===1&&Sr.test(Object.keys(n)[0]),v=Object.keys(n).some(C=>Sr.test(C));if(m)return{key:e,type:"relation",relation:!0,accessor:"id",priority:1};let $=je(e,n);if(($?$.length>0:!1)&&$){let C=$&&Array.isArray($)?$[0]:$,g=p(C,n[C],n,p,s);if(g){let F=Array.isArray($)?$.map(R=>g.accessor?`${R}.${Array.isArray(g.accessor)?g.accessor[0]:g.accessor}`:R):g.accessor?Array.isArray(g.accessor)?`${$}.${g.accessor[0]}`:`${$}.${g.accessor}`:$;return(g==null?void 0:g.type)==="text"&&(s==="create"||s==="edit")&&v?{key:e,type:"relation",relation:!0,accessor:"id",priority:1}:{...g,fieldable:!0,key:e,accessor:F,priority:1}}}return{key:e,fieldable:!1,type:"object",priority:1}}return!1},"objectInfer");var Lr=o((e,n)=>typeof n=="string"&&n.length>100?{key:e,type:"richtext",priority:1}:!1,"richtextInfer");var Nr=o((e,n)=>typeof n=="string"?{key:e,type:"text"}:!1,"textInfer");var Dt=/^(https?|ftp):\/\/(-\.)?([^\s/?\.#-]+\.?)+(\/[^\s]*)?$/i,Rr=o((e,n)=>typeof n=="string"&&Dt.test(n)?{key:e,type:"url",priority:1}:!1,"urlInfer");var Mr=[br,kr,Cr,Fr,wr,Ar,Tr,Pr,hr,Lr,Nr,Rr];var Er=o((e,n,c,p)=>e.map(u=>{if(!u.relation&&(u.type==="text"||u.type==="richtext"||u.type==="number")&&!u.canRelation){let f=/^[a-z0-9-]+$/,l=o(C=>f.test(`${C}`),"isValidUUID"),m=u.key.toLowerCase()!=="id";return!(!u.accessor||typeof u.accessor=="string")||!m?u:(u.multiple?p[u.key]:[p[u.key]]).every(C=>l(u.accessor?C[u.accessor]:C))?{...u,canRelation:!0}:u}return u}),"basicToRelation");var Ot=/(image|photo|avatar|cover|thumbnail|icon)/i,Br=o(e=>e.map(c=>c.type==="url"&&Ot.test(c.key)?{...c,type:"image"}:c),"imageByKey");var Vr=o((e,n)=>e.map(p=>{let s=Je(p,n);return s?{...p,relation:!0,type:"relation",resource:s}:p}),"relationByResource");var Dr=o((e,n,c,p,s,u)=>e.map(l=>{if(l.relation&&l.type==="relation"&&!l.resource){let m=l.accessor?p[l.key][l.accessor]:p[l.key],v=s(l.key,m,p,s,u);if(v&&v.type!=="relation")return{...l,fieldable:!0,relation:!1,type:v.type,canRelation:!0}}return l}),"relationToFieldable");var Or=[Br,Vr,Dr,Er];var se=b(require("react")),qt=b(require("@refinedev/core")),Wt=b(require("graphql-tag")),Me=require("@aliemir/react-live");var qr=[["react","React",se.default],["@refinedev/core","RefineCore",qt],["graphql-tag","GraphqlTag",Wt]],or=se.default.createContext({}),ar=o(({fetchError:e,code:n,additionalScope:c,errorComponent:p})=>{let s=(n&&Ze(Ye(n,[...qr,...c??[]].reduce((l,[m,v,$,T])=>T?l:{...l,[m]:v},{}))))??"",u=se.default.useMemo(()=>({React:se.default,...se.default,...[...qr,...c??[]].reduce((l,[m,v,$])=>({...l,[v]:$}),{})}),[c]),f=se.default.useMemo(()=>o(()=>{let{error:m}=se.default.useContext(or);return p?se.default.createElement(p,{error:m?`<p>An error occured while rendering the generated component.You can check the generated code from the below "Show Code" button and fix the error manually.</p>
                                    <p>If you think this is a bug, please report the issue at <a target="_blank" rel="noopener noreferrer" href="https://github.com/refinedev/refine/issues">https://github.com/refinedev/refine/issues</a></p>
                                    <p>Exception:</p>
                                    <code>${m}</code>`:typeof e=="string"?e:e?`<p>Something went wrong while fetching the resource data.</p>
                                    <p>To learn more about the Inferencer, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`:void 0}):null},"LiveErrorComponent"),[p,e]);return se.default.createElement(Me.LiveProvider,{Context:or,code:s,scope:u,noInline:!0},!e&&se.default.createElement(Me.LivePreview,{Context:or}),se.default.createElement(f,null))},"LiveComponent");var y=b(require("react")),Ee=b(require("prism-react-renderer")),Hr=b(require("prism-react-renderer/themes/vsDark"));var xe=o(({code:e,loading:n})=>{let c=y.default.useMemo(()=>ze(e??""),[e]),[p,s]=y.default.useState(!1),[u,f]=y.default.useState(!1),[l,m]=y.default.useState(!1),[v,$]=y.default.useState(!1),[T,C]=y.default.useState(!1);return y.default.useEffect(()=>{if(!n){let g=setTimeout(()=>{s(!0)},300);return()=>{clearTimeout(g)}}return()=>{}},[n]),y.default.useEffect(()=>{if(typeof window<"u"){let g=window.matchMedia("(max-width: 449px)");g.matches?m(!1):m(!0);let F=o(()=>{g.matches?m(!1):m(!0)},"handleResize");return window.addEventListener("resize",F),()=>{window.removeEventListener("resize",F)}}return()=>{}},[]),y.default.useEffect(()=>{if(typeof window<"u"){let g=window.matchMedia("(max-width: 1280px)");g.matches?$(!0):$(!1);let F=o(()=>{g.matches?$(!0):$(!1)},"handleResize");return window.addEventListener("resize",F),()=>{window.removeEventListener("resize",F)}}return()=>{}},[]),c&&!n?y.default.createElement(y.default.Fragment,null,l&&y.default.createElement("div",{className:"refine-inferencer--code-viewer",style:{position:"sticky",bottom:"24px",paddingTop:"24px",left:0,right:0,width:"100%",zIndex:10,display:"flex",justifyContent:"center",transition:"all 0.2s ease",opacity:p&&!u?1:0,transform:p&&!u?"translateY(0)":"translateY(100px)"}},y.default.createElement("div",{style:{width:"calc(100% - calc(64px * 2))",maxWidth:"1080px",padding:"20px",backgroundColor:"#1A1A1A",boxShadow:"0px 4px 16px -4px rgba(0, 0, 0, 0.5), 0px 8px 32px -8px rgba(0, 0, 0, 0.35)",borderRadius:"16px",display:"flex",alignItems:"center",justifyContent:"space-between",flexDirection:v?"column":"row",gap:"12px"}},y.default.createElement("div",{style:{display:"flex",alignItems:"flex-start",gap:"8px"}},y.default.createElement("div",null,y.default.createElement(jt,null)),y.default.createElement("div",{style:{fontSize:"14px",lineHeight:"20px",color:"#ffffff"}},y.default.createElement("p",{style:{padding:0,margin:0}},"Most of the page code is auto-generated by the"," ",y.default.createElement("span",{style:{textDecoration:"underline"}},"Inferencer")," ","feature, based on your backend data structure."),y.default.createElement("p",{style:{padding:0,margin:0}},"While this is an excellent way to experiment with refine,"," ",y.default.createElement("span",{style:{fontWeight:600}},"it's not intended to be used on production.")))),y.default.createElement("div",null,y.default.createElement("button",{onPointerEnter:()=>C(!0),onPointerLeave:()=>C(!1),onClick:()=>f(!0),style:{appearance:"none",border:"none",padding:"10px 16px",borderRadius:"4px",display:"flex",alignItems:"center",justifyContent:"center",background:"#0080FF",color:"#ffffff",fontSize:"14px",lineHeight:"20px",fontWeight:600,gap:"8px",cursor:"pointer",transition:"all 0.2s ease",transform:T?"scale(1.025)":void 0,filter:T?"brightness(1.1)":void 0}},y.default.createElement(jr,{style:{flexShrink:0}}),y.default.createElement("span",null,"Show the auto-generated code"))))),y.default.createElement(Ht,{visible:u,onClose:()=>f(!1),code:c})):null},"SharedCodeViewer"),Ht=o(({visible:e,onClose:n,code:c=""})=>{let p=y.default.useRef(null),[s,u]=y.default.useState(!1),[f,l]=y.default.useState(!1),[m,v]=y.default.useState(!1),[$,T]=y.default.useState(!1);y.default.useEffect(()=>{if(typeof document<"u"){let a=o(x=>{p.current&&!p.current.contains(x.target)&&n()},"onOutsideClick");return document.addEventListener("pointerdown",a),()=>{document.removeEventListener("pointerdown",a)}}return()=>{}},[n]);let C=o(()=>{typeof navigator<"u"&&(navigator.clipboard.writeText(c),u(!0),setTimeout(()=>{u(!1)},1e3))},"onCopy"),g=y.default.createElement("div",{style:{display:"flex",justifyContent:"space-between",alignItems:"center"}},y.default.createElement("div",{style:{fontWeight:700,fontSize:"20px",lineHeight:"32px",color:"#0D0D0D"}},"Auto-generated code by Inferencer"),y.default.createElement("button",{onClick:n,onPointerEnter:()=>v(!0),onPointerLeave:()=>v(!1),style:{flexShrink:0,appearance:"none",border:"none",background:"none",padding:0,margin:0,outline:"none",borderRadius:"50px",width:"32px",height:"32px",cursor:"pointer",transition:"all 0.15s ease",transform:m?"scale(1.05)":void 0,filter:m?"brightness(0.8)":void 0}},y.default.createElement(Gt,null))),F=y.default.createElement("div",{style:{fontSize:"13px",borderRadius:"8px",flex:"1",overflow:"scroll",background:"#1E1E1E"}},y.default.createElement(Ee.default,{...Ee.defaultProps,theme:Hr.default,code:c,language:"tsx"},({className:a,style:x,tokens:i,getLineProps:P,getTokenProps:w})=>y.default.createElement("pre",{className:a,style:{...x,padding:"14px 14px 14px 14px",margin:"0",width:"100%",boxSizing:"border-box"}},i.map((L,S)=>y.default.createElement("div",{key:S,...P({line:L,key:S})},L.map((t,h)=>y.default.createElement("span",{key:h,...w({token:t,key:h})})))))));return y.default.createElement("div",{className:"refine-inferencer--code-viewer-modal",style:{position:"fixed",top:0,left:0,right:0,bottom:0,zIndex:9999,backgroundColor:"rgba(0, 0, 0, 0.5)",transition:"all 0.2s ease",opacity:e?1:0,pointerEvents:e?"all":"none",display:"flex",justifyContent:"center",alignItems:"center"}},y.default.createElement("div",{ref:p,style:{transform:e?"scale(1) translateY(0px)":"scale(0) translateY(-200px)",transition:"all 0.25s cubic-bezier(.35,1.29,.81,1.08)",transitionDelay:"0.25",width:"calc(100% - calc(32px * 2))",height:"calc(100% - calc(32px * 2))",backgroundColor:"#fff",maxWidth:"640px",maxHeight:"720px",borderRadius:"8px",padding:"16px"}},y.default.createElement("div",{style:{display:"flex",flexDirection:"column",height:"100%",width:"100%",gap:"16px"}},g,F,y.default.createElement("div",{style:{display:"flex",justifyContent:"flex-start",alignItems:"flex-end",gap:"16px"}},y.default.createElement("button",{onPointerEnter:()=>l(!0),onPointerLeave:()=>l(!1),onClick:C,style:{appearance:"none",height:"40px",border:"none",padding:"10px 16px",borderRadius:"4px",display:"flex",alignItems:"center",justifyContent:"center",background:"#0080FF",color:"#ffffff",fontSize:"14px",lineHeight:"20px",fontWeight:600,gap:"8px",cursor:"pointer",position:"relative",overflow:"hidden",transition:"filter 0.2s ease",transform:f?"scale(1.025)":"scale(1)",filter:f?"brightness(1.1)":void 0}},y.default.createElement(Wr,{style:{flexShrink:0,marginTop:"-2px",marginBottom:"-2px"}}),y.default.createElement("span",null,"Copy Generated Code"),y.default.createElement("div",{style:{position:"absolute",width:"100%",height:"100%",top:0,left:0,display:"flex",alignItems:"center",justifyContent:"center",background:"#0080FF",transition:"all 0.2s ease",transform:s?"translateY(0)":"translateY(40px)"}},y.default.createElement(Wr,{style:{flexShrink:0,marginTop:"-2px",marginBottom:"-2px"}}),y.default.createElement("span",null,"Copied!"))),y.default.createElement("a",{onPointerEnter:()=>T(!0),onPointerLeave:()=>T(!1),href:"https://refine.dev/docs/packages/documentation/inferencer",target:"_blank",rel:"noreferrer",style:{appearance:"none",textDecoration:"none",border:"none",padding:"10px 16px",borderRadius:"4px",display:"flex",alignItems:"center",justifyContent:"center",background:"rgba(0, 128, 255, 0.1)",color:"#0080FF",fontSize:"14px",lineHeight:"20px",fontWeight:600,gap:"8px",cursor:"pointer",transition:"all 0.2s ease",transform:$?"scale(1.025)":void 0,filter:$?"brightness(1.1)":void 0}},y.default.createElement(jr,{style:{flexShrink:0}}),y.default.createElement("span",null,"Learn more about inferencer"))))))},"CodeModal"),jt=o(e=>y.default.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:20,height:20,fill:"none",...e},y.default.createElement("path",{fill:"#0080FF",fillRule:"evenodd",d:"M10 20C4.477 20 0 15.523 0 10S4.477 0 10 0s10 4.477 10 10-4.477 10-10 10Zm0-15a1.25 1.25 0 1 0 0 2.5A1.25 1.25 0 0 0 10 5Zm0 10c.69 0 1.25-.56 1.25-1.25V10a1.25 1.25 0 1 0-2.5 0v3.75c0 .69.56 1.25 1.25 1.25Z",clipRule:"evenodd"})),"InfoIcon"),jr=o(e=>y.default.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:16,height:16,fill:"none",...e},y.default.createElement("path",{fill:"currentColor",d:"M5 2a1 1 0 0 1 0 2H4v8h8v-1a1 1 0 1 1 2 0v1a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h1Z"}),y.default.createElement("path",{fill:"currentColor",d:"M9 2a1 1 0 0 0 0 2h1.586L6.293 8.293a1 1 0 0 0 1.414 1.414L12 5.414V7a1 1 0 1 0 2 0V3a1 1 0 0 0-1-1H9Z"})),"OpenIcon"),Gt=o(e=>y.default.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:32,height:32,fill:"none",...e},y.default.createElement("path",{fill:"#A6A6A6",fillRule:"evenodd",d:"M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16Zm-2.586-21.414a2 2 0 1 0-2.828 2.828L13.172 16l-2.586 2.586a2 2 0 1 0 2.828 2.828L16 18.828l2.586 2.586a2 2 0 1 0 2.828-2.828L18.828 16l2.586-2.586a2 2 0 1 0-2.828-2.828L16 13.172l-2.586-2.586Z",clipRule:"evenodd"})),"CloseIcon"),Wr=o(e=>y.default.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:20,height:20,viewBox:"0 0 24 24",fill:"none",...e},y.default.createElement("path",{fill:"currentColor",fillRule:"evenodd",d:"M8 5a3 3 0 0 0 3 3h2a3 3 0 0 0 3-3h1a2 2 0 0 1 2 2v11a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2h1Zm0 7a1 1 0 0 1 1-1h6a1 1 0 1 1 0 2H9a1 1 0 0 1-1-1Zm1 3a1 1 0 1 0 0 2h4a1 1 0 1 0 0-2H9Z",clipRule:"evenodd"}),y.default.createElement("path",{fill:"currentColor",d:"M13 4a1 1 0 1 1 0 2h-2a1 1 0 1 1 0-2h2Z"})),"ClipboardIcon");var ve=b(require("react")),Be=require("@refinedev/core");var Gr=o((e,n,c,p)=>{let{resource:s,id:u,resources:f}=(0,Be.useResource)(n),l=c??u,m=(0,Be.useDataProvider)(),[v,$]=ve.default.useState(void 0),[T,C]=ve.default.useState(void 0),[g,F]=ve.default.useState(void 0),[R,a]=ve.default.useState(!0),[x,i]=ve.default.useState(!1),P=ve.default.useCallback(async w=>{var t;let L=Te(s)??Ge(s==null?void 0:s.name,void 0,f),S=m(L);i(!0),$(void 0);try{if((e==="list"||e==="create")&&s){let h=await S.getList({resource:s==null?void 0:s.name,meta:ue((s==null?void 0:s.identifier)??(s==null?void 0:s.name),p,["getList"])}),A=(t=h.data)==null?void 0:t[0];A||$(`<p>No records/data found for resource "${s==null?void 0:s.name}".</p>
                            <p>Please check your data provider and resource.</p>
                            <p>For more info, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`),C(A),F(h.data),setTimeout(()=>{i(!1)},500)}if((e==="edit"||e==="show")&&w&&s){let A=(await S.getOne({resource:s==null?void 0:s.name,id:w,meta:ue((s==null?void 0:s.identifier)??(s==null?void 0:s.name),p,["getOne"])})).data;A||$(`<p>No records/data found for resource "${s==null?void 0:s.name}".</p>
                            <p>Please check your data provider and resource.</p>
                            <p>For more info, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`),C(A),setTimeout(()=>{i(!1)},500)}}catch(h){console.warn("An error occured while fetching the resource data. Please check the error message below:",h),$(`<p>Something went wrong while fetching the resource data.</p>
                    <p>Please check your data provider and API for resource "${s==null?void 0:s.name}".</p>
                    <p>For more info, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`),setTimeout(()=>{i(!1)},500)}},[e,m,s,f]);return ve.default.useEffect(()=>{a(!1),!x&&!T&&P(l)},[P,l]),{data:T,datas:g,loading:x,initial:R,error:v}},"useInferFetch");var Ce=b(require("react")),_r=require("@refinedev/core");var sr=b(require("lodash/get"));var zr=o(({record:e,fields:n,infer:c,meta:p})=>{let s=(0,_r.useDataProvider)(),[u,f]=Ce.default.useState([]),[l,m]=Ce.default.useState(!0),[v,$]=Ce.default.useState(!1),T=Ce.default.useCallback(async C=>{console.groupCollapsed("@refinedev/inferencer is trying to detect relations");let g=[];$(!0);try{let F=C.map(async a=>{var x,i,P,w;if(a&&(a.relation||a.canRelation)&&e){if(a.relationInfer)return a;let L=Te(a.resource),S=s(L),t=a.multiple,h=Array.isArray(a.accessor)?void 0:a.multiple?e[a.key].map(A=>a.accessor?(0,sr.default)(A,a.accessor):A)[0]:a.accessor?(0,sr.default)(e[a.key],a.accessor):e[a.key];if(h&&a.resource)try{let A={};if(t&&S.getMany){let{data:_}=await S.getMany({resource:a.resource.name,ids:[h],meta:ue(((x=a.resource)==null?void 0:x.identifier)??((i=a.resource)==null?void 0:i.name),p,["getMany"])});A=_==null?void 0:_[0]}else{let{data:_}=await S.getOne({resource:a.resource.name,id:h,meta:ue(((P=a.resource)==null?void 0:P.identifier)??((w=a.resource)==null?void 0:w.name),p,t?["getMany","getOne"]:["getOne"])});A=_}g.push({status:"success",resource:a.resource.name,field:a.key});let G=c("__",A,{},c);return{...a,relationInfer:G}}catch{return g.push({status:"error",resource:a.resource.name,field:a.key}),{...a,relationInfer:null}}if(h){let A,G;try{let Y={};if(t&&S.getMany){let{data:ne}=await S.getMany({resource:de(K(a.key)),ids:[h],meta:ue(de(K(a.key)),p,["getMany"])});Y=ne==null?void 0:ne[0]}else{let{data:ne}=await S.getOne({resource:de(K(a.key)),id:h,meta:ue(de(K(a.key)),p,t?["getMany","getOne"]:["getOne"])});Y=ne}g.push({status:"success",resource:de(K(a.key)),field:a.key}),A=Y,G=!0}catch{g.push({status:"error",resource:de(K(a.key)),field:a.key});let ne={};try{if(t&&S.getMany){let{data:oe}=await S.getMany({resource:me(K(a.key)),meta:ue(me(K(a.key)),p,["getMany"]),ids:[h]});ne=oe==null?void 0:oe[0]}else{let{data:oe}=await S.getOne({resource:me(K(a.key)),meta:ue(me(K(a.key)),p,t?["getMany","getOne"]:["getOne"]),id:h});ne=oe}g.push({status:"success",resource:me(K(a.key)),field:a.key}),A=ne,G=!1}catch{return g.push({status:"error",resource:me(K(a.key)),field:a.key}),{...a,relationInfer:null}}}let _=c("__",A,{},c),U=K(a.key);return{...a,relation:!0,type:"relation",resource:{name:G?de(U):me(U)},fieldable:!1,canRelation:void 0,relationInfer:_}}return{...a,relationInfer:null}}return a}),R=await Promise.all(F);f(R.filter(a=>a)),setTimeout(()=>{$(!1)},500)}catch{setTimeout(()=>{$(!1)},500)}setTimeout(()=>{console.log(`Tried to detect relations with ${g.length} attempts and succeeded with ${g.filter(F=>F.status==="success").length} attempts.`),console.groupEnd(),console.info("@refinedev/inferencer may send multiple requests to your API for nonexistent resources when trying to detect relations. To learn more about how the inferencer works, visit https://s.refine.dev/how-inferencer-works")},500)},[s,e]);return Ce.default.useEffect(()=>{m(!1),!v&&n&&n.length>0&&u.length===0&&T(n)},[T,v,n,T]),{fields:u,loading:v,initial:l}},"useRelationFetch");var $e=o(({type:e,additionalScope:n=[],customElements:c=[],fieldTransformers:p=[],renderer:s,loadingComponent:u,errorComponent:f,codeViewerComponent:l})=>{let m=$r([...Mr,...c]),v=Ir([...Or,...p]),$=o(({resourceName:C,fieldTransformer:g,hideCodeViewerInProduction:F,meta:R,id:a})=>{var N,J;let{resource:x,resources:i}=(0,Fe.useResource)(C),{i18nProvider:P}=(0,te.useContext)(Fe.TranslationContext),{resource:w}=(0,Fe.useResource)(),{data:L,datas:S,loading:t,initial:h,error:A}=Gr(e,C??(x==null?void 0:x.name),a,R),G=o((M,E,X)=>{let Z=m(M,E,X,m,e);if(Z&&x){let ee=v([Z],i,x,X,m,e),V=g?ee.flatMap(B=>{let z=g(B);return z?[z]:[]}):ee;return V==null?void 0:V[0]}},"inferSingleField"),_=o(M=>Object.keys(M).map(X=>{let Z=M[X];return G(X,Z,M)}).filter(Boolean),"inferSingleRecord"),U=o(M=>{let E=M.map(B=>_(B)),X=M.flatMap(B=>Object.keys(B)).filter((B,z,pe)=>pe.indexOf(B)===z),Z={},ee=X.map(B=>{let z=E.map(ae=>ae.find(ie=>ie.key===B));return z.reduce((ae,ie,Re)=>{if(!ie)return ae;let we=z.filter(ge=>(ge==null?void 0:ge.key)===ie.key&&(ge==null?void 0:ge.type)===ie.type).length;return we>ae.count?(Z[B]=M[Re][B],{count:we,field:ie}):ae},{count:0,field:void 0}).field});return{commonRecord:Z,inferredFields:ee}},"inferMultipleRecords"),[Y,ne]=te.default.useMemo(()=>{if(S&&(e==="list"||e==="create")){let M=U(S);return[M.inferredFields,M.commonRecord]}if(L){let M=Object.keys(L).map(E=>{let X=L[E];return m(E,X,L,m,e)}).filter(Boolean);if(x){let E=v(M,i,x,L,m,e);return[g?E.flatMap(Z=>{let ee=g(Z);return ee?[ee]:[]}):E,L]}return[[],L]}return[[],void 0]},[L,S,i,x,g]),{fields:oe,loading:r}=zr({record:ne,fields:Y,infer:m,meta:R}),D=te.default.useMemo(()=>{let M=[];return oe.forEach((E,X,Z)=>{if(E.resource){if(M.findIndex(V=>{var B,z;return((B=V.resource)==null?void 0:B.name)===((z=E.resource)==null?void 0:z.name)})>-1)return;let ee=Z.filter((V,B)=>{var z,pe,ae,ie,Re,we;if(B!==X){let ge=E.resource,ht=V.resource,xt=((z=V.resource)==null?void 0:z.identifier)||((pe=E.resource)==null?void 0:pe.identifier)?((ae=V.resource)==null?void 0:ae.identifier)===((ie=E.resource)==null?void 0:ie.identifier):((Re=V.resource)==null?void 0:Re.name)===((we=E.resource)==null?void 0:we.name);return ge&&ht&&xt}return!1});if(ee.length>0)if(e==="create"||e==="edit"){let V;[E,...ee].find(B=>{B.fieldable!==!0&&V===void 0&&(V=B)}),V?M.push(V):M.push(E)}else{let V;[E,...ee].find(B=>{B.fieldable!==!1&&V===void 0&&(V=B)}),V?M.push(V):M.push(E)}else M.push(E)}else M.push(E)}),M},[oe,e]),O=te.default.useMemo(()=>!t&&!r&&!h&&x?s({resource:x,resources:i,fields:D,infer:m,meta:R,isCustomPage:x.name!==(w==null?void 0:w.name),id:a,i18n:!!P}):"",[x,i,D,t,r]),q=F;return te.default.createElement(te.default.Fragment,null,u&&(t||r)&&te.default.createElement(u,null),!t&&!r&&te.default.createElement(te.default.Fragment,null,te.default.createElement(ar,{fetchError:!t&&A?A:!t&&!h&&!L,code:Xe(O,ce(((N=x==null?void 0:x.meta)==null?void 0:N.label)??((J=x==null?void 0:x.options)==null?void 0:J.label)??(x==null?void 0:x.label)??(x==null?void 0:x.name)??"Resource",e)),errorComponent:f,additionalScope:n}),typeof l<"u"&&!q?te.default.createElement(l,{code:er(O),loading:t||r}):null))},"Inferencer");return o(({name:C,resource:g,fieldTransformer:F,meta:R,hideCodeViewerInProduction:a,id:x})=>{let{resource:i}=(0,Fe.useResource)(g??C),P=`${(i==null?void 0:i.identifier)??(i==null?void 0:i.name)}-${e}-${x}`;return te.default.createElement($,{hideCodeViewerInProduction:a,fieldTransformer:F,resourceName:g??C,meta:R??{},key:P,id:x})},"InferencerComponent")},"createInferencer");var Le=b(require("react")),Kr=b(require("@mui/material/Alert")),Qr=b(require("@mui/material/AlertTitle")),Ur=b(require("@mui/material/Box"));var Ie=o(({error:e})=>e?Le.default.createElement(Ur.default,{style:{display:"flex",justifyContent:"center",alignItems:"center",minHeight:"200px"}},Le.default.createElement(Kr.default,{severity:"error"},Le.default.createElement(Qr.default,null,"Error"),Le.default.createElement("div",{dangerouslySetInnerHTML:{__html:e??""}}))):null,"ErrorComponent");var ir=b(require("react")),Zr=b(require("@mui/material/Box")),Yr=b(require("@mui/material/CircularProgress"));var be=o(()=>ir.default.createElement(Zr.default,{style:{display:"flex",justifyContent:"center",alignItems:"center",minHeight:"300px"}},ir.default.createElement(Yr.default,{size:"large"})),"LoadingComponent");var cr=o(({resource:e,fields:n,meta:c,isCustomPage:p,id:s,i18n:u})=>{let f=ce(e.label??e.name,"show"),l="record",m=[["useShow","@refinedev/core"],["Show","@refinedev/mui"],["Typography","@mui/material"],["Stack","@mui/material"]];u&&m.push(["useTranslate","@refinedev/core"]),le(c||{},["gqlQuery","gqlMutation"])&&m.push(["gql","graphql-tag",!0]);let T=n.filter(t=>(t==null?void 0:t.relation)&&!(t!=null&&t.fieldable)&&(t==null?void 0:t.resource)).filter(Boolean).map(t=>{var h,A,G,_;if(t!=null&&t.relation&&!t.fieldable&&t.resource){if(t.multiple){m.push(["useMany","@refinedev/core"]);let U=d(l,t.key);return t.accessor&&(U=`${d(l,t.key)}?.map((item: any) => ${d("item",void 0,t.accessor)})`),`
                const { data: ${W(t.key,"Data")}, isLoading: ${W(t.key,"IsLoading")} } =
                useMany({
                    resource: "${t.resource.name}",
                    ids: ${U} || [],
                    queryOptions: {
                        enabled: !!${l} && !!${U}?.length,
                    },
                    ${H(((h=t==null?void 0:t.resource)==null?void 0:h.identifier)??((A=t==null?void 0:t.resource)==null?void 0:A.name),c,["getMany"])}
                });
                `}return m.push(["useOne","@refinedev/core"]),`
                const { data: ${W(t.key,"Data")}, isLoading: ${W(t.key,"IsLoading")} } =
                useOne({
                    resource: "${t.resource.name}",
                    id: ${d(l,t.key,t.accessor,!1)} || "",
                    queryOptions: {
                        enabled: !!${l},
                    },
                    ${H(((G=t==null?void 0:t.resource)==null?void 0:G.identifier)??((_=t==null?void 0:t.resource)==null?void 0:_.name),c,["getOne"])}
                });
            `}}).filter(Boolean),C=o(t=>{if(t.relation&&t.resource){let h=W(t.key,"Data"),A=W(t.key,"IsLoading");if(t.multiple){let G=`${d(l,t.key)}?.length`;return m.push(["TagField","@refinedev/mui"]),k`
                <Typography variant="body1" fontWeight="bold">
                    ${I({resource:e,field:t,i18n:u,noQuotes:!0})}
                </Typography>
                {${A} && ${G} ? (
                    <>
                        Loading...
                    </>
                    ) : (
                    <>
                    ${(()=>{var _;if(t.relationInfer){if((_=t.relationInfer)!=null&&_.accessor){if(Array.isArray(t.relationInfer.accessor))return console.log("@refinedev/inferencer: Inferencer failed to render this field",{key:t.key,relation:t.relationInfer}),'<span title="Inferencer failed to render this field. (Unsupported nesting)">Cannot Render</span>';let U=W(t.key),Y=d(U,void 0,t.relationInfer.accessor);return`
                                        {record?.${t.key}?.length ? <Stack direction="row" spacing={1}>
                                            {${h}?.data?.map((${U}: any) => (
                                                <TagField key={${Y}} value={${Y}} />
                                            ))}
                                        </Stack> : <></>}
                                    `}return console.log("@refinedev/inferencer: Inferencer failed to render this field",{key:t.key,relation:t.relationInfer}),'<span title="Inferencer failed to render this field. (Cannot find key)">Cannot Render</span>'}return console.log("@refinedev/inferencer: Inferencer failed to render this field",{key:t.key}),'<span title="Inferencer failed to render this field (Cannot find relation)">Cannot Render</span>'})()}
                    </>
                )}
                `}return t.fieldable?k`
                <Typography variant="body1" fontWeight="bold">
                    ${I({resource:e,field:t,i18n:u,noQuotes:!0})}
                </Typography>
                <TextField value={${d(l,t.key,t.accessor)}} />
                `:k`
                <Typography variant="body1" fontWeight="bold">
                    ${I({resource:e,field:t,i18n:u,noQuotes:!0})}
                </Typography>

                {${A} ? (
                    <>Loading...</>
                ) : (
                    <>
                    ${(()=>{var G,_,U;if(t.relationInfer){if((G=t.relationInfer)!=null&&G.accessor)return Array.isArray(t.relationInfer.accessor)?`{${d(`${h}?.data`,void 0,t.relationInfer.accessor,' + " " + ')}}`:`{${h}?.data?.${t.relationInfer.accessor}}`;let Y=((_=t==null?void 0:t.relationInfer)==null?void 0:_.type)==="object"&&!((U=t==null?void 0:t.relationInfer)!=null&&U.accessor);return Y&&console.log("@refinedev/inferencer: Inferencer failed to render this field",{key:t.key,relation:t.relationInfer}),Y?'<span title="Inferencer failed to render this field. (Cannot find key)">Cannot Render</span>':`{${h}?.data}`}return`{${h}?.data?.id}`})()}
                    </>
                )}
                `}},"renderRelationFields"),g=o(t=>{if(t.type==="text"){if(m.push(["TextFieldComponent as TextField","@refinedev/mui"]),t.multiple){m.push(["TagField","@refinedev/mui"]);let h=d("item",void 0,t.accessor);return k`
                <Typography variant="body1" fontWeight="bold">
                    ${I({resource:e,field:t,i18n:u,noQuotes:!0})}
                </Typography>
                <Stack direction="row" spacing={1}>
                {${d(l,t.key)}?.map((item: any) => (
                    <TagField value={${h}} key={${h}} />
                ))}
                </Stack>
            `}return k`
                <Typography variant="body1" fontWeight="bold">
                    ${I({resource:e,field:t,i18n:u,noQuotes:!0})}
                </Typography>
                <TextField value={${d(l,t.key,t.accessor)}} />
            `}},"textFields"),F=o(t=>{if(t.type==="image"){if(t.multiple){let h=d("item",void 0,t.accessor);return k`
                <Typography variant="body1" fontWeight="bold">
                    ${I({resource:e,field:t,i18n:u,noQuotes:!0})}
                </Typography>
                <Stack direction="row" spacing={1}>
                {${d(l,t.key)}?.map((item: any) => (
                    <img style={{ maxWidth: 200, width: "100%", height: 200 }} src={${h}} key={${h}} />
                ))}
                </Stack>
            `}return k`
                <Typography variant="body1" fontWeight="bold">
                    ${I({resource:e,field:t,i18n:u,noQuotes:!0})}
                </Typography>
                <img style={{ maxWidth: 200, width: "100%", height: 200 }} src={${d(l,t.key,t.accessor," + ")}} />
                `}},"imageFields"),R=o(t=>{if(t.type==="email"){if(m.push(["EmailField","@refinedev/mui"]),t.multiple){m.push(["TagField","@refinedev/mui"]);let h=d("item",void 0,t.accessor);return k`
                <Typography variant="body1" fontWeight="bold">
                    ${I({resource:e,field:t,i18n:u,noQuotes:!0})}
                </Typography>
                <Stack direction="row" spacing={1}>
                {${d(l,t.key)}?.map((item: any) => (
                    <TagField value={${h}} key={${h}} />
                ))}
                </Stack>
            `}return k`
                <Typography variant="body1" fontWeight="bold">
                    ${I({resource:e,field:t,i18n:u,noQuotes:!0})}
                </Typography>
                <EmailField value={${d(l,t.key,t.accessor," + ")}} />
            `}},"emailFields"),a=o(t=>{if(t.type==="url"){if(m.push(["UrlField","@refinedev/mui"]),t.multiple){m.push(["TagField","@refinedev/mui"]);let h=d("item",void 0,t.accessor);return k`
                <Typography variant="body1" fontWeight="bold">
                    ${I({resource:e,field:t,i18n:u,noQuotes:!0})}
                </Typography>
                <Stack direction="row" spacing={1}>
                {${d(l,t.key)}?.map((item: any) => (
                    <TagField value={${h}} key={${h}} />
                ))}
                </Stack>
            `}return k`
                <Typography variant="body1" fontWeight="bold">
                    ${I({resource:e,field:t,i18n:u,noQuotes:!0})}
                </Typography>
                <UrlField value={${d(l,t.key,t.accessor," + ")}} />
            `}},"urlFields"),x=o(t=>{if(t.type==="boolean"){if(m.push(["BooleanField","@refinedev/mui"]),t.multiple){m.push(["TagField","@refinedev/mui"]);let h=d("item",void 0,t.accessor);return k`
                <Typography variant="body1" fontWeight="bold">
                    ${I({resource:e,field:t,i18n:u,noQuotes:!0})}
                </Typography>
                <Stack direction="row" spacing={1}>
                {${d(l,t.key)}?.map((item: any, index: number) => (
                    <TagField value={${h}} key={index} />
                ))}
                </Stack>
            `}return k`
                <Typography variant="body1" fontWeight="bold">
                    ${I({resource:e,field:t,i18n:u,noQuotes:!0})}
                </Typography>
                <BooleanField value={${d(l,t.key,t.accessor," && ")}} />
            `}},"booleanFields"),i=o(t=>{if(t.type==="date"){if(m.push(["DateField","@refinedev/mui"]),t.multiple){let h=d("item",void 0,t.accessor);return k`
                <Typography variant="body1" fontWeight="bold">
                    ${I({resource:e,field:t,i18n:u,noQuotes:!0})}
                </Typography>
                <Stack direction="row" spacing={1}>
                {${d(l,t.key)}?.map((item: any) => (
                    <DateField value={${h}} key={${h}} />
                ))}
                </Stack>
            `}return k`
                <Typography variant="body1" fontWeight="bold">
                    ${I({resource:e,field:t,i18n:u,noQuotes:!0})}
                </Typography>
                <DateField value={${d(l,t.key,t.accessor," + ' ' + ")}} />
            `}},"dateFields"),P=o(t=>{if(t.type==="richtext")return m.push(["MarkdownField","@refinedev/mui"]),k`
                <Typography variant="body1" fontWeight="bold">
                    ${I({resource:e,field:t,i18n:u,noQuotes:!0})}
                </Typography>
                <MarkdownField value={${d(l,t.key,t.accessor,' + " " + ')}} />
            `},"richtextFields"),w=o(t=>{if(t.type==="number"){if(m.push(["NumberField","@refinedev/mui"]),t.multiple){m.push(["TagField","@refinedev/mui"]);let h=d("item",void 0,t.accessor);return k`
                <Typography variant="body1" fontWeight="bold">
                    ${I({resource:e,field:t,i18n:u,noQuotes:!0})}
                </Typography>
                <Stack direction="row" spacing={1}>
                {${d(l,t.key)}?.map((item: any) => (
                    <TagField value={${h}} key={${h}} />
                ))}
                </Stack>
            `}return k`
                <Typography variant="body1" fontWeight="bold">
                    ${I({resource:e,field:t,i18n:u,noQuotes:!0})}
                </Typography>
                <NumberField value={${d(l,t.key,t.accessor,' + " " + ')} ?? ""} />
            `}},"numberFields"),L=n.map(t=>{switch(t==null?void 0:t.type){case"text":return g(t);case"number":return w(t);case"richtext":return P(t);case"email":return R(t);case"image":return F(t);case"date":return i(t);case"boolean":return x(t);case"url":return a(t);case"relation":return C(t);default:return}});ye(m);let S=u&&"const translate = useTranslate();";return k`
    ${fe(m)}

    export const ${f} = () => {
        ${S}
        const { query } = useShow(${p?`{ 
                    resource: "${e.name}", 
                    id: ${Pe(s)},
                    ${H((e==null?void 0:e.identifier)??(e==null?void 0:e.name),c,["getOne"])}
                }`:H((e==null?void 0:e.identifier)??(e==null?void 0:e.name),c,["getOne"])?`{ ${H((e==null?void 0:e.identifier)??(e==null?void 0:e.name),c,["getOne"])} }`:""});
        const { data, isLoading } = query;
    
        const ${l} = data?.data;
    
        ${T}

        return (
            <Show isLoading={isLoading}>
                <Stack gap={1}>
                    ${L.join("")}
                </Stack>
            </Show>
        );
    };
    `},"renderer"),Ve=$e({type:"show",additionalScope:[["@refinedev/mui","RefineMui",{Show:Q.Show,TagField:Q.TagField,TextFieldComponent:Q.TextFieldComponent,EmailField:Q.EmailField,UrlField:Q.UrlField,BooleanField:Q.BooleanField,DateField:Q.DateField,MarkdownField:Q.MarkdownField,NumberField:Q.NumberField}],["@mui/material","MuiMaterial",{Typography:Jr.default,Stack:Xr.default}]],codeViewerComponent:xe,loadingComponent:be,errorComponent:Ie,renderer:cr});var j=require("@refinedev/mui"),et=b(require("@mui/material/Checkbox")),rt=require("@mui/x-data-grid");var pr=o(({resource:e,fields:n,meta:c,isCustomPage:p,i18n:s})=>{var oe;let u=ce(e.label??e.name,"list"),f="dataGridProps?.rows",l=[["React","react",!0],["useDataGrid","@refinedev/mui"],["DataGrid","@mui/x-data-grid"],["GridColDef","@mui/x-data-grid"],["EditButton","@refinedev/mui"],["ShowButton","@refinedev/mui"],["DeleteButton","@refinedev/mui"],["List","@refinedev/mui"]];s&&l.push(["useTranslate","@refinedev/core"]),le(c||{},["gqlQuery","gqlMutation"])&&l.push(["gql","graphql-tag",!0]);let v=n.filter(r=>(r==null?void 0:r.relation)&&!(r!=null&&r.fieldable)&&(r==null?void 0:r.resource)),$=v.filter(Boolean).map(r=>{var D,O;if(r!=null&&r.relation&&!r.fieldable&&r.resource){l.push(["useMany","@refinedev/core"]);let q="";return r.multiple?q=`[].concat(...(${f}?.map((item: any) => ${d("item",r.key,r.accessor,!1)}) ?? []))`:q=`${f}?.map((item: any) => ${d("item",r.key,r.accessor,!1)}) ?? []`,`
                const { data: ${W(r.key,"Data")}, isLoading: ${W(r.key,"IsLoading")} } =
                useMany({
                    resource: "${r.resource.name}",
                    ids: ${q},
                    queryOptions: {
                        enabled: !!${f},
                    },
                    ${H(((D=r==null?void 0:r.resource)==null?void 0:D.identifier)??((O=r==null?void 0:r.resource)==null?void 0:O.name),c,["getMany"])}
                });
                `}}).filter(Boolean),T=v==null?void 0:v.map(r=>{if(r!=null&&r.resource)return`${W(r.key,"Data")}?.data`}).filter(Boolean),C=o(r=>{var D,O,q,N,J,M;if(r.relation&&r.resource){let E=`${W(r.key,"Data")}?.data`,X=W(r.key,"IsLoading");if(Array.isArray(r.accessor))return;let Z=`${X} ? <>Loading...</> : `,ee=`field: "${r.key}"`,V=r.accessor&&!r.multiple&&!Array.isArray(r.accessor)?`valueGetter: (_, row) => {
            const value = ${d("row",r.key,r.accessor,!1)};

            return value;
        },`:"",B=`headerName: ${I({resource:e,field:r,i18n:s,noBraces:!0})}`,z="";if(r.multiple){l.push(["TagField","@refinedev/mui"]);let pe="item";if(r!=null&&r.relationInfer){let ae=`${E}?.find((resourceItems) => resourceItems.id === ${d("item",void 0,r.accessor)})`;pe=d(ae,void 0,(D=r==null?void 0:r.relationInfer)==null?void 0:D.accessor)}if(r!=null&&r.relationInfer&&((O=r==null?void 0:r.relationInfer)==null?void 0:O.type)==="object"&&!((q=r==null?void 0:r.relationInfer)!=null&&q.accessor))return console.log("@refinedev/inferencer: Inferencer failed to render this field",{key:r.key,relation:r.relationInfer}),`renderCell: function render({ getValue }) {
                        return (
                            <span title="Inferencer failed to render this field (Cannot find key)">Cannot Render</span>
                        )
                    }`;z=`
                renderCell: function render({ value }) {
                    return ${Z} (
                        <>
                            {${d("value",void 0)}?.map((item: any, index: number) => (
                                <TagField key={index} value={${pe}} />
                            ))}
                        </>
                    )
                }
                `}else if(r!=null&&r.relationInfer){let pe=`${E}?.find((item) => item.id === value)`,ae=d(pe,void 0,(N=r==null?void 0:r.relationInfer)==null?void 0:N.accessor);((J=r==null?void 0:r.relationInfer)==null?void 0:J.type)==="object"&&!((M=r==null?void 0:r.relationInfer)!=null&&M.accessor)?(console.log("@refinedev/inferencer: Inferencer failed to render this field",{key:r.key,relation:r.relationInfer}),z=`
                        renderCell: function render({ value }) {
                            return <span title="Inferencer failed to render this field (Cannot find key)">Cannot Render</span>;
                        }
                        `):z=`
                    renderCell: function render({ value }) {
                        return ${Z} ${ae};
                    }
                    `}else z="";return`
                {
                    ${ee},
                    flex: 1,
                    ${B},${V}
                    minWidth: 300,${z}
                }
            `}},"renderRelationFields"),g=o(r=>{if(r.type==="image"){let D=`field: "${r.key}"`,O=`headerName: ${I({resource:e,field:r,i18n:s,noBraces:!0})}`,q=r.accessor&&!r.multiple&&!Array.isArray(r.accessor)?`valueGetter: (_, row) => {
            const value = ${d("row",r.key,r.accessor,!1)};

            return value;
        },`:"",N=`
                renderCell: function render({ value }) {
                    return (
                        <img src={${d("value",void 0,Array.isArray(r.accessor)?r.accessor:void 0," + ")}} style={{ height: "50px", maxWidth: "100px" }} />
                    )
                }
            `;return r.multiple&&(N=`
                    renderCell: function render({ value }) {
                        return (
                            <>
                            {value?.map((item: any, index: number) => (
                                <img src={${d("item",void 0,r.accessor," + ")}} key={index} style={{ height: "50px", maxWidth: "100px" }} />
                            ))}
                            </>
                        )
                    }
                `),`
                {
                    ${D},
                    flex: 1,
                    ${O},${q}
                    minWidth: 100,${N}
                }
            `}},"imageFields"),F=o(r=>{if(r.type==="email"){l.push(["EmailField","@refinedev/mui"]);let D=`field: "${r.key}"`,O=`headerName: ${I({resource:e,field:r,i18n:s,noBraces:!0})}`,q=r.accessor&&!r.multiple&&!Array.isArray(r.accessor)?`valueGetter: (_, row) => {
            const value = ${d("row",r.key,r.accessor,!1)};

            return value;
        },`:"",N=`
            renderCell: function render({ value }) {
                return (
                    <EmailField value={${d("value",void 0,Array.isArray(r.accessor)?r.accessor:void 0," + ")}} />
                )
            }
        `;return r.multiple&&(l.push(["TagField","@refinedev/mui"]),N=`
                renderCell: function render({ value }) {
                    return (
                        <>
                        {value?.map((item: any, index: number) => (
                            <TagField value={${d("item",void 0,r.accessor," + ")}} key={index} />
                        ))}
                        </>
                    )
                }
            `),`
            {
                ${D},
                flex: 1,
                ${O},${q}
                minWidth: 250,${N}
            }
        `}},"emailFields"),R=o(r=>{if(r.type==="url"){l.push(["UrlField","@refinedev/mui"]);let D=`field: "${r.key}"`,O=`headerName: ${I({resource:e,field:r,i18n:s,noBraces:!0})}`,q=r.accessor&&!r.multiple&&!Array.isArray(r.accessor)?`valueGetter: (_, row) => {
            const value = ${d("row",r.key,r.accessor,!1)};

            return value;
        },`:"",N=`
                renderCell: function render({ value }) {
                    return (
                        <UrlField value={${d("value",void 0,Array.isArray(r.accessor)?r.accessor:void 0," + ")}} />
                    )
                }
            `;return r.multiple&&(l.push(["TagField","@refinedev/mui"]),N=`
                    renderCell: function render({ value }) {
                        return (
                            <>
                            {value?.map((item: any, index: any) => (
                                <TagField value={${d("item",void 0,r.accessor," + ")}} key={index} />
                            ))}
                            </>
                        )
                    }
                `),`
                {
                    ${D},
                    flex: 1,
                    ${O},${q}
                    minWidth: 250,${N}
                }
            `}},"urlFields"),a=o(r=>{if(r!=null&&r.type){l.push(["Checkbox","@mui/material"]);let D=`field: "${r.key}"`,O=`headerName: ${I({resource:e,field:r,i18n:s,noBraces:!0})}`,q=r.accessor&&!r.multiple&&!Array.isArray(r.accessor)?`valueGetter: (_, row)=> {
            const value = ${d("row",r.key,r.accessor,!1)};

            return value;
        },`:"",N=`
                renderCell: function render({ value }) {
                    return (
                        <Checkbox checked={!!${d("value",void 0,Array.isArray(r.accessor)?r.accessor:void 0," && ")}} />
                    );
                }
            `;return r.multiple&&(N=`
                    renderCell: function render({ value }) {
                        return (
                            <>
                            {value?.map((item: any, index: number) => (
                                <Checkbox checked={!!${d("item",void 0,r.accessor," && ")}} key={index} />
                            ))}
                            </>
                        )
                    }
                `),`
                {
                    ${D},
                    ${O},${q}
                    minWidth: 100,${N}
                }
            `}},"booleanFields"),x=o(r=>{if(r.type==="date"){l.push(["DateField","@refinedev/mui"]);let D=`field: "${r.key}"`,O=`headerName: ${I({resource:e,field:r,i18n:s,noBraces:!0})}`,q=r.accessor&&!r.multiple&&!Array.isArray(r.accessor)?`valueGetter: (_, row) => {
            const value = ${d("row",r.key,r.accessor,!1)};

            return value;
        },`:"",N=`
                renderCell: function render({ value }) {
                    return <DateField value={value} />;
                }
            `;return r.multiple&&(N=`
                    renderCell: function render({ value }) {
                        return (
                            <>
                            {value?.map((item: any, index: number) => (
                                <DateField value={${d("item",void 0,r.accessor,' + " " + ')}} key={index} />
                            ))}
                            </>
                        )
                    }
                `),`
                {
                    ${D},
                    flex: 1,
                    ${O},${q}
                    minWidth: 250,${N}
                }
            `}},"dateFields"),i=o(r=>{if((r==null?void 0:r.type)==="richtext"){l.push(["MarkdownField","@refinedev/mui"]);let D=`field: "${r.key}"`,O=`headerName: ${I({resource:e,field:r,i18n:s,noBraces:!0})}`,q=r.accessor&&!r.multiple&&!Array.isArray(r.accessor)?`valueGetter: (_, row) => {
            const value = ${d("row",r.key,r.accessor,!1)};

            return value;
        },`:"",N=`
                renderCell: function render({ value }) {
                    return <MarkdownField value={(value ?? "").slice(0, 80) + "..."} />;
                }
            `;return r.multiple&&(N=`
                    renderCell: function render({ value }) {
                        return (
                            <>
                            {value?.map((item: any, index: number) => (
                                <MarkdownField value={(${d("item",void 0,r.accessor,' + " " + ')}).slice(0, 80) + "..."} key={index} />
                            ))}
                            </>
                        )
                    }
                `),`
                {
                    ${D},
                    flex: 1,
                    ${O},${q}
                    minWidth: 250,${N}
                }
            `}},"richtextFields"),P=o(r=>{if(r&&(r.type==="text"||r.type==="number")){let D=`field: "${r.key}"`,O=`headerName: ${I({resource:e,field:r,i18n:s,noBraces:!0})}`,q=r.accessor&&!r.multiple&&!Array.isArray(r.accessor)?`valueGetter: (_, row) => {
            const value = ${d("row",r.key,r.accessor,!1)};

            return value;
        },`:"",N="";if(r.multiple){l.push(["TagField","@refinedev/mui"]);let J=d("item",void 0,r.accessor,' + " " + ');N=`
                renderCell: function render({ row }) {
                    return (
                        <>
                            {(${d("row",r.key)})?.map((item: any) => (
                                <TagField value={${J}} key={${J}} />
                            ))}
                        </>
                    )
                }
                `}return!r.multiple&&Array.isArray(r.accessor)&&(N=`
                renderCell: function render({ row }) {
                    return (
                        <>{${d("row",r.key,r.accessor)}}</>
                    );
                }
                `),`
            {
                ${D}, ${he(r.key)?"":`
                flex: 1,`}
                ${O},${q}${r.type==="number"?"type: 'number',":""}
                minWidth: ${he(r.key)?50:200},${N}
            }
            `}},"basicFields"),w=((oe=n==null?void 0:n[0])==null?void 0:oe.key)??"id",L=n!=null&&n.find(r=>(r==null?void 0:r.key)==="id")?"":`getRowId={(row) => row?.${w}}`,{canEdit:S,canShow:t,canDelete:h,meta:A}=e??{},G=h||(A==null?void 0:A.canDelete);S&&l.push(["EditButton","@refinedev/mui"]),t&&l.push(["ShowButton","@refinedev/mui"]),G&&l.push(["DeleteButton","@refinedev/mui"]);let U=S||t||G?k`
            {
                field: "actions",
                headerName: ${s?'translate("table.actions")':'"Actions"'},
                sortable: false,
                renderCell: function render({ row }) {
                    return (
                        <>
                            ${S?k`<EditButton hideText recordItemId={row.id} />`:""}
                            ${t?k`<ShowButton hideText recordItemId={row.id} />`:""}
                            ${G?k`<DeleteButton hideText recordItemId={row.id} />`:""}
                        </>
                    );
                },
                align: "center",
                headerAlign: "center",
                minWidth: 80,
            },
    `:"",Y=n.map(r=>{switch(r==null?void 0:r.type){case"text":case"number":return P(r);case"richtext":return i(r);case"email":return F(r);case"image":return g(r);case"date":return x(r);case"boolean":return a(r);case"url":return R(r);case"relation":return C(r);default:return}});ye(l);let ne=s&&"const translate = useTranslate();";return k`
    ${fe(l)}
    
    export const ${u} = () => {
        ${ne}
        const { dataGridProps } = useDataGrid(
            ${p?`{ resource: "${e.name}",
                        ${H((e==null?void 0:e.identifier)??(e==null?void 0:e.name),c,["getList"])}
                        }`:H((e==null?void 0:e.identifier)??(e==null?void 0:e.name),c,["getList"])?`{ ${H((e==null?void 0:e.identifier)??(e==null?void 0:e.name),c,["getList"])} },`:""} 
        );
    
        ${$}

        const columns = React.useMemo<GridColDef[]>(() => [
            ${[...Y,U].filter(Boolean).join(`,\r
`)}
        ], [${s?"translate, ":""}${T.join(",")}]);

        return (
            <List>
                <DataGrid {...dataGridProps} ${L} columns={columns} autoHeight />
            </List>
        );
    };
    `},"renderer"),De=$e({type:"list",additionalScope:[["@refinedev/mui","RefineMui",{useDataGrid:j.useDataGrid,EditButton:j.EditButton,SaveButton:j.SaveButton,DeleteButton:j.DeleteButton,List:j.List,TagField:j.TagField,EmailField:j.EmailField,UrlField:j.UrlField,DateField:j.DateField,MarkdownField:j.MarkdownField,ShowButton:j.ShowButton}],["@mui/x-data-grid","MuiXDataGrid",{DataGrid:rt.DataGrid}],["@mui/material","MuiMaterial",{Checkbox:et.default}]],codeViewerComponent:xe,loadingComponent:be,errorComponent:Ie,renderer:pr});var Oe=require("@refinedev/mui"),tt=require("@refinedev/react-hook-form"),nt=b(require("@mui/material/Box")),ot=b(require("@mui/material/Autocomplete")),at=b(require("@mui/material/TextField")),st=b(require("@mui/material/Checkbox")),it=b(require("@mui/material/FormControlLabel")),ct=require("react-hook-form");var ur=o(({resource:e,fields:n,meta:c,isCustomPage:p,i18n:s})=>{let u=ce(e.label??e.name,"create"),f=[["Create","@refinedev/mui"],["Box","@mui/material"],["useForm","@refinedev/react-hook-form"]];s&&f.push(["useTranslate","@refinedev/core"]),le(c||{},["gqlQuery","gqlMutation"])&&f.push(["gql","graphql-tag",!0]);let v=n.filter(a=>(a==null?void 0:a.relation)&&!(a!=null&&a.fieldable)&&(a==null?void 0:a.resource)).filter(Boolean).map(a=>{var x,i;if(a!=null&&a.relation&&!a.fieldable&&a.resource)return f.push(["useAutocomplete","@refinedev/mui"]),`
                const { autocompleteProps: ${W(a.key,"AutocompleteProps")} } =
                useAutocomplete({
                    resource: "${a.resource.name}",
                    ${H(((x=a==null?void 0:a.resource)==null?void 0:x.identifier)??((i=a==null?void 0:a.resource)==null?void 0:i.name),c,["getList"])}
                });
            `}).filter(Boolean),$=o(a=>{if(a.relation&&a.resource){f.push(["Autocomplete","@mui/material"],["Controller","react-hook-form"]);let x=W(a.key,"AutocompleteProps"),i=a.relationInfer&&a.relationInfer.accessor?typeof a.relationInfer.accessor=="string"?a.relationInfer.accessor:a.relationInfer.accessor[0]:"title",P=i.includes(".")||i.includes("[")||i.includes("]")||i.includes("-"),w=a.accessor?d("item",void 0,a.accessor,!1):"(item?.id ?? item)",L=a.accessor?d("value",void 0,a.accessor,!1):"(value?.id ?? value)",S=a.accessor?"value":a.multiple?"value?.map((item: any) => item?.id ?? item)":"value?.id ?? value";return k`
                <Controller
                    control={control}
                    name="${re(a.key,void 0)}"
                    rules={{ required: "This field is required" }}
                    // eslint-disable-next-line
                    ${a.multiple?"defaultValue={[] as any}":"defaultValue={null as any}"}
                    render={({ field }) => (
                        <Autocomplete
                            {...${x}}
                            {...field}
                            ${a.multiple?"multiple":""}
                            onChange={(_, value) => {
                                field.onChange(${S});
                            }}
                            getOptionLabel={(item) => {
                                return (
                                    ${x}?.options?.find(
                                        (p) =>
                                            p?.id?.toString() ===
                                            ${w}?.toString(),
                                    )?.${P?`["${i}"]`:i} ?? ""
                                );
                            }}
                            isOptionEqualToValue={(option, value) =>
                                value === undefined ||
                                option?.id?.toString() === ${L}?.toString()
                            }
                            renderInput={(params) => (
                                <TextField
                                    {...params}
                                    label=${I({resource:e,field:a,i18n:s})}
                                    margin="normal"
                                    variant="outlined"
                                    error={!!${d("(errors as any)",a.key,a.accessor,!1)}}
                                    helperText={${d("(errors as any)",a.key,a.accessor,!1)}?.message}
                                    required
                                />
                            )}
                        />
                    )}
                />
            `}},"renderRelationFields"),T=o(a=>{if(a.type==="text"||a.type==="url"||a.type==="email"||a.type==="number"||a.type==="date"||a.type==="richtext")return he(a.key)||(f.push(["TextField","@mui/material"]),a.multiple)?void 0:k`
                <TextField
                    {...register("${re(a.key,void 0,a.accessor)}", {
                        required: "This field is required",
                        ${a.type==="number"?"valueAsNumber: true,":""}
                    })}
                    error={!!${d("(errors as any)",a.key,a.accessor,!1)}}
                    helperText={${d("(errors as any)",a.key,a.accessor,!1)}?.message}
                    margin="normal"
                    fullWidth
                    slotProps={{
                        inputLabel: {
                             shrink: true,
                        },
                    }}
                    ${a.type!=="date"&&a.type!=="richtext"?`type="${a.type}"`:""}
                    ${a.type==="richtext"?"multiline":""}
                    label=${I({resource:e,field:a,i18n:s})}
                    name="${re(a.key,void 0,a.accessor)}"
                />
            `},"basicInputFields"),C=o(a=>{if(a.type==="boolean")return f.push(["Checkbox","@mui/material"],["FormControlLabel","@mui/material"],["Controller","react-hook-form"]),a.multiple?void 0:k`
                <Controller
                    control={control}
                    name="${re(a.key,void 0,a.accessor)}"
                    // eslint-disable-next-line
                    defaultValue={null as any}
                    render={({ field }) => (
                        <FormControlLabel label=${I({resource:e,field:a,i18n:s})} control={
                            <Checkbox
                                {...field}
                                checked={field.value}
                                onChange={(event) => {
                                    field.onChange(event.target.checked);
                                }}
                            />
                        } />
                    )}
                />
            `},"booleanFields"),g=o(a=>{if(a.type==="date")return`
                {/*
                    DatePicker component is not included in "@refinedev/mui" package.
                    To use a <DatePicker> component, you can follow the official documentation for Material UI.

                    Docs: https://mui.com/x/react-date-pickers/date-picker/#basic-usage
                */}
                ${T(a)??""}
                `},"dateFields"),F=n.map(a=>{switch(a==null?void 0:a.type){case"text":case"number":case"email":case"url":case"richtext":return T(a);case"date":return g(a);case"boolean":return C(a);case"relation":return $(a);default:return}});ye(f);let R=s&&"const translate = useTranslate();";return k`
    ${fe(f)}

    export const ${u} = () => {
        ${R}
        const {
            saveButtonProps,
            refineCore: { formLoading },
            register,
            control,
            formState: { errors },
        } = useForm(
            ${p?`{
                refineCoreProps: {
                    resource: "${e.name}",
                    action: "create",
                    ${H(e.identifier??e.name,c,["create","getOne"])}
                }
            }`:H(e.identifier??e.name,c,["create","getOne"])?`{
                        refineCoreProps: { ${H(e.identifier??e.name,c,["create","getOne"])} }
                        }`:""}
        );

        ${v}

        return (
            <Create isLoading={formLoading} saveButtonProps={saveButtonProps}>
                <Box
                    component="form"
                    sx={{ display: "flex", flexDirection: "column" }}
                    autoComplete="off"
                >
                    ${F.join("")}
                </Box>
            </Create>
        );
    };
    `},"renderer"),qe=$e({type:"create",additionalScope:[["@refinedev/mui","RefineMui",{Create:Oe.Create,useAutocomplete:Oe.useAutocomplete}],["@refinedev/react-hook-form","RefineReactHookForm",{useForm:tt.useForm}],["@mui/material","MuiMaterial",{Box:nt.default,Autocomplete:ot.default,TextField:at.default,Checkbox:st.default,FormControlLabel:it.default}],["react-hook-form","ReactHookForm",{Controller:ct.Controller}]],codeViewerComponent:xe,loadingComponent:be,errorComponent:Ie,renderer:ur});var We=require("@refinedev/mui"),pt=require("@refinedev/react-hook-form"),ut=b(require("@mui/material/Box")),lt=b(require("@mui/material/Autocomplete")),mt=b(require("@mui/material/TextField")),dt=b(require("@mui/material/Checkbox")),ft=b(require("@mui/material/FormControlLabel")),yt=require("react-hook-form");var lr=o(({resource:e,fields:n,meta:c,isCustomPage:p,id:s,i18n:u})=>{let f=ce(e.label??e.name,"edit"),l=W(e.label??e.name,"Data"),m=[["Edit","@refinedev/mui"],["Box","@mui/material"],["useForm","@refinedev/react-hook-form"]];u&&m.push(["useTranslate","@refinedev/core"]),le(c||{},["gqlQuery","gqlMutation"])&&m.push(["gql","graphql-tag",!0]);let T=n.filter(i=>(i==null?void 0:i.relation)&&!(i!=null&&i.fieldable)&&(i==null?void 0:i.resource)).filter(Boolean).map(i=>{var P,w;if(i!=null&&i.relation&&!i.fieldable&&i.resource){m.push(["useAutocomplete","@refinedev/mui"]);let L=d(l,i.key,i.accessor,!1);return i.multiple&&i.accessor&&(L=`${d(l,i.key)}?.map((item: any) => ${d("item",void 0,i.accessor)})`),`
                const { autocompleteProps: ${W(i.key,"AutocompleteProps")} } =
                useAutocomplete({
                    resource: "${i.resource.name}",
                    defaultValue: ${L},
                    ${H(((P=i==null?void 0:i.resource)==null?void 0:P.identifier)??((w=i==null?void 0:i.resource)==null?void 0:w.name),c,["getList"])}
                });
            `}}).filter(Boolean),C=o(i=>{if(i.relation&&i.resource){m.push(["Autocomplete","@mui/material"],["Controller","react-hook-form"]);let P=W(i.key,"AutocompleteProps"),w=i.relationInfer&&i.relationInfer.accessor?typeof i.relationInfer.accessor=="string"?i.relationInfer.accessor:i.relationInfer.accessor[0]:"title",L=w.includes(".")||w.includes("[")||w.includes("]")||w.includes("-"),S=i.accessor?d("item",void 0,i.accessor,!1):"(item?.id ?? item)",t=i.accessor?d("value",void 0,i.accessor,!1):"(value?.id ?? value)",h=i.accessor?"value":i.multiple?"value?.map((item: any) => item?.id ?? item)":"value?.id ?? value";return k`
                <Controller
                    control={control}
                    name="${re(i.key,void 0)}"
                    rules={{ required: "This field is required" }}
                    // eslint-disable-next-line
                    ${i.multiple?"defaultValue={[] as any}":"defaultValue={null as any}"}
                    render={({ field }) => (
                        <Autocomplete
                            {...${P}}
                            {...field}
                            ${i.multiple?"multiple":""}
                            onChange={(_, value) => {
                                field.onChange(${h});
                            }}
                            getOptionLabel={(item) => {
                                return (
                                    ${P}?.options?.find(
                                        (p) =>
                                            p?.id?.toString() ===
                                            ${S}?.toString(),
                                    )?.${L?`["${w}"]`:w} ?? ""
                                );
                            }}
                            isOptionEqualToValue={(option, value) =>
                                value === undefined ||
                                option?.id?.toString() === ${t}?.toString()
                            }
                            renderInput={(params) => (
                                <TextField
                                    {...params}
                                    label=${I({resource:e,field:i,i18n:u})}
                                    margin="normal"
                                    variant="outlined"
                                    error={!!${d("(errors as any)",i.key,i.accessor,!1)}}
                                    helperText={${d("(errors as any)",i.key,i.accessor,!1)}?.message}
                                    required
                                />
                            )}
                        />
                    )}
                />
            `}},"renderRelationFields"),g=o(i=>{if(i.type==="text"||i.type==="url"||i.type==="email"||i.type==="number"||i.type==="date"||i.type==="richtext"){if(m.push(["TextField","@mui/material"]),i.multiple){m.push(["Box","@mui/material"]);let P=re(i.key,"${index}",i.accessor),w=`${d("(errors as any)",i.key,void 0,!1)}?.[index]`;return`
                    <Box sx={{display: "flex", gap: 1}}>
                        {${d(l,i.key)}?.map((item: any, index: number) => (
                            <TextField
                                key={index}
                                {...register(\`${P}\`, {
                                    required: "This field is required",
                                    ${i.type==="number"?"valueAsNumber: true,":""}
                                })}
                                error={!!${w}}
                                helperText={${w}?.message as string}
                                margin="normal"
                                fullWidth
                                slotProps={{
                                    inputLabel: {
                                         shrink: true,
                                    },
                                }}
                                ${i.type!=="date"&&i.type!=="richtext"?`type="${i.type}"`:""}
                                ${i.type==="richtext"?"multiline":""}
                                label=${I({resource:e,field:i,i18n:u})}
                                name={\`${re(i.key,void 0,i.accessor)}.\${index}\`}
                            />
                        ))}
                    </Box>
                `}return k`
                <TextField
                    {...register("${re(i.key,void 0,i.accessor)}", {
                        required: "This field is required",
                        ${i.type==="number"?"valueAsNumber: true,":""}
                    })}
                    error={!!${d("(errors as any)",i.key,i.accessor,!1)}}
                    helperText={${d("(errors as any)",i.key,i.accessor,!1)}?.message}
                    margin="normal"
                    fullWidth
                    slotProps={{
                        inputLabel: {
                            shrink: true,
                        },
                    }}
                    ${i.type!=="date"&&i.type!=="richtext"?`type="${i.type}"`:""}
                    ${i.type==="richtext"?"multiline":""}
                    label=${I({resource:e,field:i,i18n:u})}
                    name="${re(i.key,void 0,i.accessor)}"
                    ${he(i.key)?"disabled":""}
                />
            `}},"basicInputFields"),F=o(i=>{if(i.type==="boolean"){if(m.push(["Checkbox","@mui/material"],["FormControlLabel","@mui/material"],["Controller","react-hook-form"]),i.multiple){m.push(["Box","@mui/material"]);let P=re(i.key,"${index}",i.accessor);return`
                    <Box sx={{display: "flex", gap: 1}}>
                        {${d(l,i.key)}?.map((item: any, index: number) => (
                            <Controller
                                key={index}
                                control={control}
                                name={\`${P}\`}
                                // eslint-disable-next-line
                                defaultValue={null as any}
                                render={({ field }) => (
                                    <FormControlLabel label=${I({resource:e,field:i,i18n:u})} control={
                                        <Checkbox
                                            {...field}
                                            checked={field.value}
                                            onChange={(event) => {
                                                field.onChange(event.target.checked);
                                            }}
                                        />
                                    } />
                                )}
                            />
                        ))}
                    </Box>
                `}return k`
                <Controller
                    control={control}
                    name="${re(i.key,void 0,i.accessor)}"
                    // eslint-disable-next-line
                    defaultValue={null as any}
                    render={({ field }) => (
                        <FormControlLabel label=${I({resource:e,field:i,i18n:u})} control={
                            <Checkbox
                                {...field}
                                checked={field.value}
                                onChange={(event) => {
                                    field.onChange(event.target.checked);
                                }}
                            />
                        } />
                    )}
                />
            `}},"booleanFields"),R=o(i=>{if(i.type==="date")return`
                {/*
                    DatePicker component is not included in "@refinedev/mui" package.
                    To use a <DatePicker> component, you can follow the official documentation for Material UI.

                    Docs: https://mui.com/x/react-date-pickers/date-picker/#basic-usage
                */}
                ${g(i)}
                `},"dateFields"),a=n.map(i=>{switch(i==null?void 0:i.type){case"text":case"number":case"email":case"url":case"richtext":return g(i);case"date":return R(i);case"boolean":return F(i);case"relation":return C(i);default:return}});ye(m);let x=u&&"const translate = useTranslate();";return k`
    ${fe(m)}

    export const ${f} = () => {
        ${x}
        const {
            saveButtonProps,
            refineCore: { query },
            register,
            control,
            formState: { errors },
        } = useForm(
            ${p?`{
                refineCoreProps: {
                    resource: "${e.name}",
                    id: ${Pe(s)},
                    action: "edit",
                    ${H((e==null?void 0:e.identifier)??(e==null?void 0:e.name),c,["update","getOne"])}
                }
            }`:H((e==null?void 0:e.identifier)??(e==null?void 0:e.name),c,["update","getOne"])?`{ refineCoreProps: { ${H((e==null?void 0:e.identifier)??(e==null?void 0:e.name),c,["update","getOne"])} }
              }`:""}
        );

        const ${l} = query?.data?.data;

        ${T}

        return (
            <Edit saveButtonProps={saveButtonProps}>
                <Box
                    component="form"
                    sx={{ display: "flex", flexDirection: "column" }}
                    autoComplete="off"
                >
                    ${a.join("")}
                </Box>
            </Edit>
        );
    };
    `},"renderer"),He=$e({type:"edit",additionalScope:[["@refinedev/mui","RefineMui",{Edit:We.Edit,useAutocomplete:We.useAutocomplete}],["@refinedev/react-hook-form","RefineReactHookForm",{useForm:pt.useForm}],["@mui/material","MuiMaterial",{Box:ut.default,Autocomplete:lt.default,TextField:mt.default,Checkbox:dt.default,FormControlLabel:ft.default}],["react-hook-form","ReactHookForm",{Controller:yt.Controller}]],codeViewerComponent:xe,loadingComponent:be,errorComponent:Ie,renderer:lr});var _t=o(({action:e,id:n,...c})=>{let{action:p,id:s}=(0,gt.useResource)();switch(e??p){case"show":return Ne.default.createElement(Ve,{...c,id:n??s});case"create":return Ne.default.createElement(qe,{...c,id:n??s});case"edit":return Ne.default.createElement(He,{...c,id:n??s});default:return Ne.default.createElement(De,{...c,id:n??s})}},"MuiInferencer");
//# sourceMappingURL=mui.cjs.map