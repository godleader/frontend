"use client"
var Nt=Object.defineProperty;var r=(e,o)=>Nt(e,"name",{value:o,configurable:!0});import Ae from"react";import{useResource as fr}from"@refinedev/core";import{Show as $n,TagField as bn,TextField as kn,EmailField as Fn,UrlField as vn,BooleanField as Cn,DateField as wn,MarkdownField as Tn,NumberField as Sn}from"@refinedev/mantine";import{Title as An,Group as Pn,Image as Rn}from"@mantine/core";import te,{useContext as dn}from"react";import{useResource as qe,TranslationContext as fn}from"@refinedev/core";var Lt=/(image|photo|avatar|url|logo|cover|thumbnail|icon)/i,Gt=/^(\w|\d|_|-|)*?(name|label){1}$/i,Re=r((e,o)=>{let i=["name","label","title","count","content","username","nickname","login","firstName","lastName","url"],s=Object.keys(o).filter(d=>Gt.test(d));i.push(...s),Lt.test(e)&&i.unshift("url");let m=i.find(d=>d in o&&!!o[d]);if(m)return m==="firstName"&&"lastName"in o?["firstName","lastName"]:m},"getFieldableKeys");import{pickNotDeprecated as Et}from"@refinedev/core";function Me(e,o,i){if(o)return o;let p=i==null?void 0:i.find(m=>m.name===e),s=Et(p==null?void 0:p.meta,p==null?void 0:p.options);return s!=null&&s.dataProviderName?s.dataProviderName:"default"}r(Me,"pickDataProvider");var $e=r(e=>{var o;return(o=e==null?void 0:e.options)==null?void 0:o.dataProviderName},"dataProviderFromResource");var Ve=r(e=>{let o=[...e].filter(Boolean).sort((i,p)=>(p.priority||0)-(i.priority||0))[0];return o||null},"pickInferredField");import Dt from"prettier/standalone";import Ot from"prettier/parser-typescript";var Ne=r(e=>{try{return Dt.format(e,{parser:"typescript",plugins:[Ot],arrowParens:"always",trailingComma:"all",semi:!0,tabWidth:4,printWidth:80})}catch(o){return console.warn("Formatting error in inferencer",o),e}},"prettierFormat");var Ze=r(e=>e.replace(/ {2,}/g," ").replace(/\n{2,}/g,`
`),"prettySpaces");var Le=/(-id|-ids|_id|_ids|Id|Ids|ID|IDs)(\[\])?$/,Ye=r((e,o)=>{let i=Le.test(e),p=typeof o=="string"||typeof o=="number",s=Array.isArray(o)&&o.every(m=>typeof m=="string"||typeof m=="number");return i&&p||i&&s?{key:e,relation:!0,multiple:s,type:"relation",priority:1}:!1},"relationInfer");var q=r(e=>e.replace(Le,""),"removeRelationSuffix");var he=r(e=>q(e).replace(/([a-z])([A-Z])/g,"$1 $2").replace(/_/g," ").replace(/-/g," ").split(" ").map(d=>d.charAt(0).toUpperCase()+d.slice(1)).join(" "),"prettyString");var b=r(e=>{let{resource:o,field:i,i18n:p}=e;if(p){let m=`translate("${o.name}.fields.${i.key}")`;return e.noBraces?`${m}`:`{${m}}`}let s=he(i.key);return e.noQuotes?s:`"${s}"`},"translatePrettyString");import Je from"pluralize";var J=r((e="")=>Je.isSingular(e)?e:Je.singular(e),"toSingular");import Xe from"pluralize";var ae=r((e="")=>Xe.isPlural(e)?e:Xe.plural(e),"toPlural");var Ge=r(e=>e.replace(/export\s+(const|let|var|type|interface|function|class)\s+(\w+)\s*(=|:)\s*/g,"$1 $2 = ").split(`
`).filter(s=>!s.trim().startsWith("export default")).join(`
`),"replaceExports");var et=/import(?:(?:(?:[ \n\t]+([^ *\n\t\{\},]+)[ \n\t]*(?:,|[ \n\t]+))?([ \n\t]*\{(?:[ \n\t]*[^ \n\t"'\{\}]+[ \n\t]*,?)+\})?[ \n\t]*)|[ \n\t]*\*[ \n\t]*as[ \n\t]+([^ \n\t\{\}]+)[ \n\t]+)from[ \n\t]*(?:['"])([^'"\n]+)(?:['"])(?:;?)/g,Bt=/import[ \n\t](?:['"])([^'"\n]+)(?:['"])(?:;?)/g,jt=/((?:\w|\s|_)*)( as )((?:\w|\s|_)*)( |,)?/g,Ee=r((e,o={})=>{let i=e.matchAll(et),p=new Set;for(let s of i){let[,m,d,u,l]=s;if(l in o){let h=o[l];if(l==="react")continue;m&&p.add(`const { default: ${m} } = ${h};`),d&&p.add(`const${d.replace(jt,"$1: $3$4")} = ${h};`),u&&p.add(`const ${u} = ${h};`)}}return Ze(`
    ${Array.from(p).join(`
`)}
    ${e.replace(et,"").replace(Bt,"")}
    `)},"replaceImports");import Te from"pluralize";var De=r((e,o)=>e?o.find(p=>{let s=q(e.key);return p.name===s||p.name===(Te.isPlural(s)?s:Te.plural(s))||p.name===(Te.isSingular(s)?s:Te.singular(s))}):void 0,"resourceFromInferred");import Ht from"pluralize";var X=r((e,o,i="Inferred")=>{let p=e.replace(/[^a-zA-Z0-9]/g," "),s=Ht.singular(p),d=he(s).replace(/ /g,"")||i,u=o.charAt(0).toUpperCase()+o.slice(1);return/^[a-zA-Z]/.test(d)?`${d}${u}`:`${u}${d}`},"componentName");var Kt=r(e=>e?Array.isArray(e)?e.join(""):typeof e=="string"?e:typeof e=="object"||typeof e=="function"?e.toString():typeof e=="number"?String(e):typeof e=="boolean"&&e?"true":e:"","handleExpression"),I=r((e,...o)=>e.reduce((p,s,m)=>`${p}${s}${Kt(o[m])}`,"").trim(),"jsx");var Oe=r((e,o)=>`
    ${e??""}
    
    render(typeof ${o} !== "undefined" ? <${o} /> : <></>);
    `,"prepareLiveCode");var Be=r(e=>e==null?void 0:e.replace(/(\/\* hidden-start \*\/)(.|\n)*?(\/\* hidden-end \*\/)/g,""),"removeHiddenCode");var zt=/^[a-zA-Z_$][a-zA-Z_$0-9]*$/,je=r(e=>zt.test(e),"shouldDotAccess");function He(e,o,i){let p=`${e}`;return o&&(p+="?.",je(o)?p+=o:p+=`['${o}']`),i&&(p+="?.",je(i)?p+=i:p+=`['${i}']`),p}r(He,"accessorSingle");function qt(e,o,i){return(i??[]).map(s=>He(e,o,s))}r(qt,"accessorMultiple");var g=r((e,o,i,p=' + " " + ')=>Array.isArray(i)?p?qt(e,o,i).join(p):He(e,o,i[0]):He(e,o,i),"accessor"),H=r((e,o,i)=>{let p=e;return o&&(p+=`.${o}`),i&&(Array.isArray(i)?p+=`.${i[0]}`:p+=`.${i}`),p},"dotAccessor");var se=r(e=>{let o=e.reduce((p,[s,m,d])=>(p[m]||(p[m]=[]),p[m].includes(s)||(d?p[m].push([s,!0]):p[m].push(s)),p),{});return Object.entries(o).map(([p,s])=>{let m=s.find(h=>Array.isArray(h)&&h[1]),d=s.filter(h=>typeof h=="string"),u=m?`${m[0]}`:"",l=d.length?`{ ${d.join(", ")} }`:"";return`import ${u}${u&&l?", ":""}${l} from "${p}";`})},"printImports");var Qt=/^id$/i,ye=r(e=>Qt.test(e),"isIDKey");var be=r(e=>{var o;return e.relationInfer&&(o=e.relationInfer)!=null&&o.accessor?Array.isArray(e.relationInfer.accessor)?`optionLabel: "${e.relationInfer.accessor[0]}",`:e.relationInfer.accessor!=="title"?`optionLabel: "${e.relationInfer.accessor}",`:"":""},"getOptionLabel");var ie=r(e=>{},"noOp");var G=r((e,o="")=>{if(Number.isInteger(Number(e)))return o.charAt(0).toLowerCase()+o.slice(1)+e;let p=e.replace(/^\d+/,"").replace(/[^a-zA-Z0-9]/g,"-"),s=he(p).replace(/ /g,"");return`${s.charAt(0).toLowerCase()+s.slice(1)}${o.charAt(0).toUpperCase()+o.slice(1)}`},"getVariableName");var B=r((e,o,i)=>{var R,v,x,T;if(!(o&&i&&e)||!Object.keys(o).length)return"";let p=e?o[e]:{},s=[],m=i.find(N=>p[N]),d=p==null?void 0:p[m||"default"];if(!d)return"";let{gqlQuery:u,gqlMutation:l,...h}=d;Object.keys(h).forEach(N=>{s.push(`${N}: ${JSON.stringify(h[N])}`)}),u&&s.push(`gqlQuery: gql\`${(v=(R=u==null?void 0:u.loc)==null?void 0:R.source)==null?void 0:v.body}\``),l&&s.push(`gqlMutation: gql\`${(T=(x=l==null?void 0:l.loc)==null?void 0:x.source)==null?void 0:T.body}\``);let F=s.join(",");return F.length?`meta:{${F}}`:""},"getMetaProps"),ne=r((e,o,i)=>{if(o&&i&&e){let p=e?o[e]:{},m=[...i,"default"].reduce((d,u)=>d??(p==null?void 0:p[u]),void 0);if(m)return m}},"pickMeta");var ke=r(e=>e===void 0?e:typeof e=="string"?`"${e}"`:e,"idQuoteWrapper");var re=r((e,o)=>{for(let i in e)if(o.includes(i)||typeof e[i]=="object"&&e[i]!==null&&re(e[i],o))return!0;return!1},"deepHasKey");var tt=r(e=>{let o=r((i,p,s,m=o,d)=>{let u=e.map(h=>h(i,p,s,m,d));return Ve(u)},"fieldInferencer");return o},"composeInferencers");var nt=r(e=>r((i,p,s,m,d,u)=>e.reduce((l,h)=>h(l,p,s,m,d,u),i),"fieldTransformer"),"composeTransformers");var rt=r((e,o,i,p,s)=>{let m=Array.isArray(o),d=Array.isArray(o)&&o.every(u=>typeof u=="string"||typeof u=="number");if(m){if(!d){let l=p(e,o[0],i,p,s);return l?{...l,key:e,multiple:!0,priority:1}:!1}let u=p(e,o[0],i,p,s)||{type:"string"};return{key:e,multiple:!0,priority:1,type:u==null?void 0:u.type}}return!1},"arrayInfer");var ot=r((e,o)=>typeof o=="boolean"?{key:e,type:"boolean"}:!1,"booleanInfer");import at from"dayjs";var _t=/(_at|_on|At|On|AT|ON)(\[\])?$/,Ut=["/",":","-","."],st=r((e,o)=>{let i=_t.test(e)&&at(o).isValid(),p=typeof o=="string"&&at(o).isValid();return typeof o=="string"&&Ut.some(m=>o.includes(m))&&(i||p)?{key:e,type:"date",priority:1}:!1},"dateInfer");var Wt=/^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,it=r((e,o)=>typeof o=="string"&&Wt.test(o)?{key:e,type:"email",priority:1}:!1,"emailInfer");var Zt=/\.(gif|jpe?g|tiff?|png|webp|bmp|svg)$/i,ct=r((e,o)=>typeof o=="string"&&Zt.test(o)?{key:e,type:"image",priority:2}:!1,"imageInfer");var pt=r((e,o)=>typeof o>"u"||o===null?null:!1,"nullishInfer");var ut=r((e,o)=>{let i=typeof o=="string"&&o.length>0,p=!Number.isNaN(Number(o));return i&&p||typeof o=="number"?{key:e,type:"number"}:!1},"numberInfer");var mt=/id$/i,lt=r((e,o,i,p,s)=>{let m=o!==null,d=!Array.isArray(o);if(m&&d&&typeof o=="object"){let l=Object.keys(o).length===1&&mt.test(Object.keys(o)[0]),h=Object.keys(o).some(v=>mt.test(v));if(l)return{key:e,type:"relation",relation:!0,accessor:"id",priority:1};let F=Re(e,o);if((F?F.length>0:!1)&&F){let v=F&&Array.isArray(F)?F[0]:F,x=p(v,o[v],o,p,s);if(x){let T=Array.isArray(F)?F.map(N=>x.accessor?`${N}.${Array.isArray(x.accessor)?x.accessor[0]:x.accessor}`:N):x.accessor?Array.isArray(x.accessor)?`${F}.${x.accessor[0]}`:`${F}.${x.accessor}`:F;return(x==null?void 0:x.type)==="text"&&(s==="create"||s==="edit")&&h?{key:e,type:"relation",relation:!0,accessor:"id",priority:1}:{...x,fieldable:!0,key:e,accessor:T,priority:1}}}return{key:e,fieldable:!1,type:"object",priority:1}}return!1},"objectInfer");var dt=r((e,o)=>typeof o=="string"&&o.length>100?{key:e,type:"richtext",priority:1}:!1,"richtextInfer");var ft=r((e,o)=>typeof o=="string"?{key:e,type:"text"}:!1,"textInfer");var Yt=/^(https?|ftp):\/\/(-\.)?([^\s/?\.#-]+\.?)+(\/[^\s]*)?$/i,yt=r((e,o)=>typeof o=="string"&&Yt.test(o)?{key:e,type:"url",priority:1}:!1,"urlInfer");var gt=[rt,ot,st,it,ct,pt,ut,lt,Ye,dt,ft,yt];var ht=r((e,o,i,p)=>e.map(m=>{if(!m.relation&&(m.type==="text"||m.type==="richtext"||m.type==="number")&&!m.canRelation){let d=/^[a-z0-9-]+$/,u=r(v=>d.test(`${v}`),"isValidUUID"),l=m.key.toLowerCase()!=="id";return!(!m.accessor||typeof m.accessor=="string")||!l?m:(m.multiple?p[m.key]:[p[m.key]]).every(v=>u(m.accessor?v[m.accessor]:v))?{...m,canRelation:!0}:m}return m}),"basicToRelation");var Jt=/(image|photo|avatar|cover|thumbnail|icon)/i,xt=r(e=>e.map(i=>i.type==="url"&&Jt.test(i.key)?{...i,type:"image"}:i),"imageByKey");var It=r((e,o)=>e.map(p=>{let s=De(p,o);return s?{...p,relation:!0,type:"relation",resource:s}:p}),"relationByResource");var $t=r((e,o,i,p,s,m)=>e.map(u=>{if(u.relation&&u.type==="relation"&&!u.resource){let l=u.accessor?p[u.key][u.accessor]:p[u.key],h=s(u.key,l,p,s,m);if(h&&h.type!=="relation")return{...u,fieldable:!0,relation:!1,type:h.type,canRelation:!0}}return u}),"relationToFieldable");var bt=[xt,It,$t,ht];import ee from"react";import*as Xt from"@refinedev/core";import*as en from"graphql-tag";import{LivePreview as tn,LiveProvider as nn}from"@aliemir/react-live";var kt=[["react","React",ee],["@refinedev/core","RefineCore",Xt],["graphql-tag","GraphqlTag",en]],Ke=ee.createContext({}),ze=r(({fetchError:e,code:o,additionalScope:i,errorComponent:p})=>{let s=(o&&Ge(Ee(o,[...kt,...i??[]].reduce((u,[l,h,F,R])=>R?u:{...u,[l]:h},{}))))??"",m=ee.useMemo(()=>({React:ee,...ee,...[...kt,...i??[]].reduce((u,[l,h,F])=>({...u,[h]:F}),{})}),[i]),d=ee.useMemo(()=>r(()=>{let{error:l}=ee.useContext(Ke);return p?ee.createElement(p,{error:l?`<p>An error occured while rendering the generated component.You can check the generated code from the below "Show Code" button and fix the error manually.</p>
                                    <p>If you think this is a bug, please report the issue at <a target="_blank" rel="noopener noreferrer" href="https://github.com/refinedev/refine/issues">https://github.com/refinedev/refine/issues</a></p>
                                    <p>Exception:</p>
                                    <code>${l}</code>`:typeof e=="string"?e:e?`<p>Something went wrong while fetching the resource data.</p>
                                    <p>To learn more about the Inferencer, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`:void 0}):null},"LiveErrorComponent"),[p,e]);return ee.createElement(nn,{Context:Ke,code:s,scope:m,noInline:!0},!e&&ee.createElement(tn,{Context:Ke}),ee.createElement(d,null))},"LiveComponent");import y from"react";import rn,{defaultProps as on}from"prism-react-renderer";import an from "prism-react-renderer/themes/vsDark/index.js";var ue=r(({code:e,loading:o})=>{let i=y.useMemo(()=>Ne(e??""),[e]),[p,s]=y.useState(!1),[m,d]=y.useState(!1),[u,l]=y.useState(!1),[h,F]=y.useState(!1),[R,v]=y.useState(!1);return y.useEffect(()=>{if(!o){let x=setTimeout(()=>{s(!0)},300);return()=>{clearTimeout(x)}}return()=>{}},[o]),y.useEffect(()=>{if(typeof window<"u"){let x=window.matchMedia("(max-width: 449px)");x.matches?l(!1):l(!0);let T=r(()=>{x.matches?l(!1):l(!0)},"handleResize");return window.addEventListener("resize",T),()=>{window.removeEventListener("resize",T)}}return()=>{}},[]),y.useEffect(()=>{if(typeof window<"u"){let x=window.matchMedia("(max-width: 1280px)");x.matches?F(!0):F(!1);let T=r(()=>{x.matches?F(!0):F(!1)},"handleResize");return window.addEventListener("resize",T),()=>{window.removeEventListener("resize",T)}}return()=>{}},[]),i&&!o?y.createElement(y.Fragment,null,u&&y.createElement("div",{className:"refine-inferencer--code-viewer",style:{position:"sticky",bottom:"24px",paddingTop:"24px",left:0,right:0,width:"100%",zIndex:10,display:"flex",justifyContent:"center",transition:"all 0.2s ease",opacity:p&&!m?1:0,transform:p&&!m?"translateY(0)":"translateY(100px)"}},y.createElement("div",{style:{width:"calc(100% - calc(64px * 2))",maxWidth:"1080px",padding:"20px",backgroundColor:"#1A1A1A",boxShadow:"0px 4px 16px -4px rgba(0, 0, 0, 0.5), 0px 8px 32px -8px rgba(0, 0, 0, 0.35)",borderRadius:"16px",display:"flex",alignItems:"center",justifyContent:"space-between",flexDirection:h?"column":"row",gap:"12px"}},y.createElement("div",{style:{display:"flex",alignItems:"flex-start",gap:"8px"}},y.createElement("div",null,y.createElement(cn,null)),y.createElement("div",{style:{fontSize:"14px",lineHeight:"20px",color:"#ffffff"}},y.createElement("p",{style:{padding:0,margin:0}},"Most of the page code is auto-generated by the"," ",y.createElement("span",{style:{textDecoration:"underline"}},"Inferencer")," ","feature, based on your backend data structure."),y.createElement("p",{style:{padding:0,margin:0}},"While this is an excellent way to experiment with refine,"," ",y.createElement("span",{style:{fontWeight:600}},"it's not intended to be used on production.")))),y.createElement("div",null,y.createElement("button",{onPointerEnter:()=>v(!0),onPointerLeave:()=>v(!1),onClick:()=>d(!0),style:{appearance:"none",border:"none",padding:"10px 16px",borderRadius:"4px",display:"flex",alignItems:"center",justifyContent:"center",background:"#0080FF",color:"#ffffff",fontSize:"14px",lineHeight:"20px",fontWeight:600,gap:"8px",cursor:"pointer",transition:"all 0.2s ease",transform:R?"scale(1.025)":void 0,filter:R?"brightness(1.1)":void 0}},y.createElement(vt,{style:{flexShrink:0}}),y.createElement("span",null,"Show the auto-generated code"))))),y.createElement(sn,{visible:m,onClose:()=>d(!1),code:i})):null},"SharedCodeViewer"),sn=r(({visible:e,onClose:o,code:i=""})=>{let p=y.useRef(null),[s,m]=y.useState(!1),[d,u]=y.useState(!1),[l,h]=y.useState(!1),[F,R]=y.useState(!1);y.useEffect(()=>{if(typeof document<"u"){let f=r(k=>{p.current&&!p.current.contains(k.target)&&o()},"onOutsideClick");return document.addEventListener("pointerdown",f),()=>{document.removeEventListener("pointerdown",f)}}return()=>{}},[o]);let v=r(()=>{typeof navigator<"u"&&(navigator.clipboard.writeText(i),m(!0),setTimeout(()=>{m(!1)},1e3))},"onCopy"),x=y.createElement("div",{style:{display:"flex",justifyContent:"space-between",alignItems:"center"}},y.createElement("div",{style:{fontWeight:700,fontSize:"20px",lineHeight:"32px",color:"#0D0D0D"}},"Auto-generated code by Inferencer"),y.createElement("button",{onClick:o,onPointerEnter:()=>h(!0),onPointerLeave:()=>h(!1),style:{flexShrink:0,appearance:"none",border:"none",background:"none",padding:0,margin:0,outline:"none",borderRadius:"50px",width:"32px",height:"32px",cursor:"pointer",transition:"all 0.15s ease",transform:l?"scale(1.05)":void 0,filter:l?"brightness(0.8)":void 0}},y.createElement(pn,null))),T=y.createElement("div",{style:{fontSize:"13px",borderRadius:"8px",flex:"1",overflow:"scroll",background:"#1E1E1E"}},y.createElement(rn,{...on,theme:an,code:i,language:"tsx"},({className:f,style:k,tokens:C,getLineProps:K,getTokenProps:M})=>y.createElement("pre",{className:f,style:{...k,padding:"14px 14px 14px 14px",margin:"0",width:"100%",boxSizing:"border-box"}},C.map((c,S)=>y.createElement("div",{key:S,...K({line:c,key:S})},c.map((a,t)=>y.createElement("span",{key:t,...M({token:a,key:t})})))))));return y.createElement("div",{className:"refine-inferencer--code-viewer-modal",style:{position:"fixed",top:0,left:0,right:0,bottom:0,zIndex:9999,backgroundColor:"rgba(0, 0, 0, 0.5)",transition:"all 0.2s ease",opacity:e?1:0,pointerEvents:e?"all":"none",display:"flex",justifyContent:"center",alignItems:"center"}},y.createElement("div",{ref:p,style:{transform:e?"scale(1) translateY(0px)":"scale(0) translateY(-200px)",transition:"all 0.25s cubic-bezier(.35,1.29,.81,1.08)",transitionDelay:"0.25",width:"calc(100% - calc(32px * 2))",height:"calc(100% - calc(32px * 2))",backgroundColor:"#fff",maxWidth:"640px",maxHeight:"720px",borderRadius:"8px",padding:"16px"}},y.createElement("div",{style:{display:"flex",flexDirection:"column",height:"100%",width:"100%",gap:"16px"}},x,T,y.createElement("div",{style:{display:"flex",justifyContent:"flex-start",alignItems:"flex-end",gap:"16px"}},y.createElement("button",{onPointerEnter:()=>u(!0),onPointerLeave:()=>u(!1),onClick:v,style:{appearance:"none",height:"40px",border:"none",padding:"10px 16px",borderRadius:"4px",display:"flex",alignItems:"center",justifyContent:"center",background:"#0080FF",color:"#ffffff",fontSize:"14px",lineHeight:"20px",fontWeight:600,gap:"8px",cursor:"pointer",position:"relative",overflow:"hidden",transition:"filter 0.2s ease",transform:d?"scale(1.025)":"scale(1)",filter:d?"brightness(1.1)":void 0}},y.createElement(Ft,{style:{flexShrink:0,marginTop:"-2px",marginBottom:"-2px"}}),y.createElement("span",null,"Copy Generated Code"),y.createElement("div",{style:{position:"absolute",width:"100%",height:"100%",top:0,left:0,display:"flex",alignItems:"center",justifyContent:"center",background:"#0080FF",transition:"all 0.2s ease",transform:s?"translateY(0)":"translateY(40px)"}},y.createElement(Ft,{style:{flexShrink:0,marginTop:"-2px",marginBottom:"-2px"}}),y.createElement("span",null,"Copied!"))),y.createElement("a",{onPointerEnter:()=>R(!0),onPointerLeave:()=>R(!1),href:"https://refine.dev/docs/packages/documentation/inferencer",target:"_blank",rel:"noreferrer",style:{appearance:"none",textDecoration:"none",border:"none",padding:"10px 16px",borderRadius:"4px",display:"flex",alignItems:"center",justifyContent:"center",background:"rgba(0, 128, 255, 0.1)",color:"#0080FF",fontSize:"14px",lineHeight:"20px",fontWeight:600,gap:"8px",cursor:"pointer",transition:"all 0.2s ease",transform:F?"scale(1.025)":void 0,filter:F?"brightness(1.1)":void 0}},y.createElement(vt,{style:{flexShrink:0}}),y.createElement("span",null,"Learn more about inferencer"))))))},"CodeModal"),cn=r(e=>y.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:20,height:20,fill:"none",...e},y.createElement("path",{fill:"#0080FF",fillRule:"evenodd",d:"M10 20C4.477 20 0 15.523 0 10S4.477 0 10 0s10 4.477 10 10-4.477 10-10 10Zm0-15a1.25 1.25 0 1 0 0 2.5A1.25 1.25 0 0 0 10 5Zm0 10c.69 0 1.25-.56 1.25-1.25V10a1.25 1.25 0 1 0-2.5 0v3.75c0 .69.56 1.25 1.25 1.25Z",clipRule:"evenodd"})),"InfoIcon"),vt=r(e=>y.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:16,height:16,fill:"none",...e},y.createElement("path",{fill:"currentColor",d:"M5 2a1 1 0 0 1 0 2H4v8h8v-1a1 1 0 1 1 2 0v1a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h1Z"}),y.createElement("path",{fill:"currentColor",d:"M9 2a1 1 0 0 0 0 2h1.586L6.293 8.293a1 1 0 0 0 1.414 1.414L12 5.414V7a1 1 0 1 0 2 0V3a1 1 0 0 0-1-1H9Z"})),"OpenIcon"),pn=r(e=>y.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:32,height:32,fill:"none",...e},y.createElement("path",{fill:"#A6A6A6",fillRule:"evenodd",d:"M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16Zm-2.586-21.414a2 2 0 1 0-2.828 2.828L13.172 16l-2.586 2.586a2 2 0 1 0 2.828 2.828L16 18.828l2.586 2.586a2 2 0 1 0 2.828-2.828L18.828 16l2.586-2.586a2 2 0 1 0-2.828-2.828L16 13.172l-2.586-2.586Z",clipRule:"evenodd"})),"CloseIcon"),Ft=r(e=>y.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:20,height:20,viewBox:"0 0 24 24",fill:"none",...e},y.createElement("path",{fill:"currentColor",fillRule:"evenodd",d:"M8 5a3 3 0 0 0 3 3h2a3 3 0 0 0 3-3h1a2 2 0 0 1 2 2v11a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2h1Zm0 7a1 1 0 0 1 1-1h6a1 1 0 1 1 0 2H9a1 1 0 0 1-1-1Zm1 3a1 1 0 1 0 0 2h4a1 1 0 1 0 0-2H9Z",clipRule:"evenodd"}),y.createElement("path",{fill:"currentColor",d:"M13 4a1 1 0 1 1 0 2h-2a1 1 0 1 1 0-2h2Z"})),"ClipboardIcon");import ge from"react";import{useDataProvider as un,useResource as mn}from"@refinedev/core";var Ct=r((e,o,i,p)=>{let{resource:s,id:m,resources:d}=mn(o),u=i??m,l=un(),[h,F]=ge.useState(void 0),[R,v]=ge.useState(void 0),[x,T]=ge.useState(void 0),[N,f]=ge.useState(!0),[k,C]=ge.useState(!1),K=ge.useCallback(async M=>{var a;let c=$e(s)??Me(s==null?void 0:s.name,void 0,d),S=l(c);C(!0),F(void 0);try{if((e==="list"||e==="create")&&s){let t=await S.getList({resource:s==null?void 0:s.name,meta:ne((s==null?void 0:s.identifier)??(s==null?void 0:s.name),p,["getList"])}),$=(a=t.data)==null?void 0:a[0];$||F(`<p>No records/data found for resource "${s==null?void 0:s.name}".</p>
                            <p>Please check your data provider and resource.</p>
                            <p>For more info, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`),v($),T(t.data),setTimeout(()=>{C(!1)},500)}if((e==="edit"||e==="show")&&M&&s){let $=(await S.getOne({resource:s==null?void 0:s.name,id:M,meta:ne((s==null?void 0:s.identifier)??(s==null?void 0:s.name),p,["getOne"])})).data;$||F(`<p>No records/data found for resource "${s==null?void 0:s.name}".</p>
                            <p>Please check your data provider and resource.</p>
                            <p>For more info, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`),v($),setTimeout(()=>{C(!1)},500)}}catch(t){console.warn("An error occured while fetching the resource data. Please check the error message below:",t),F(`<p>Something went wrong while fetching the resource data.</p>
                    <p>Please check your data provider and API for resource "${s==null?void 0:s.name}".</p>
                    <p>For more info, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`),setTimeout(()=>{C(!1)},500)}},[e,l,s,d]);return ge.useEffect(()=>{f(!1),!k&&!R&&K(u)},[K,u]),{data:R,datas:x,loading:k,initial:N,error:h}},"useInferFetch");import Fe from"react";import{useDataProvider as ln}from"@refinedev/core";import wt from"lodash-es/get.js";var Tt=r(({record:e,fields:o,infer:i,meta:p})=>{let s=ln(),[m,d]=Fe.useState([]),[u,l]=Fe.useState(!0),[h,F]=Fe.useState(!1),R=Fe.useCallback(async v=>{console.groupCollapsed("@refinedev/inferencer is trying to detect relations");let x=[];F(!0);try{let T=v.map(async f=>{var k,C,K,M;if(f&&(f.relation||f.canRelation)&&e){if(f.relationInfer)return f;let c=$e(f.resource),S=s(c),a=f.multiple,t=Array.isArray(f.accessor)?void 0:f.multiple?e[f.key].map($=>f.accessor?wt($,f.accessor):$)[0]:f.accessor?wt(e[f.key],f.accessor):e[f.key];if(t&&f.resource)try{let $={};if(a&&S.getMany){let{data:D}=await S.getMany({resource:f.resource.name,ids:[t],meta:ne(((k=f.resource)==null?void 0:k.identifier)??((C=f.resource)==null?void 0:C.name),p,["getMany"])});$=D==null?void 0:D[0]}else{let{data:D}=await S.getOne({resource:f.resource.name,id:t,meta:ne(((K=f.resource)==null?void 0:K.identifier)??((M=f.resource)==null?void 0:M.name),p,a?["getMany","getOne"]:["getOne"])});$=D}x.push({status:"success",resource:f.resource.name,field:f.key});let z=i("__",$,{},i);return{...f,relationInfer:z}}catch{return x.push({status:"error",resource:f.resource.name,field:f.key}),{...f,relationInfer:null}}if(t){let $,z;try{let n={};if(a&&S.getMany){let{data:w}=await S.getMany({resource:ae(q(f.key)),ids:[t],meta:ne(ae(q(f.key)),p,["getMany"])});n=w==null?void 0:w[0]}else{let{data:w}=await S.getOne({resource:ae(q(f.key)),id:t,meta:ne(ae(q(f.key)),p,a?["getMany","getOne"]:["getOne"])});n=w}x.push({status:"success",resource:ae(q(f.key)),field:f.key}),$=n,z=!0}catch{x.push({status:"error",resource:ae(q(f.key)),field:f.key});let w={};try{if(a&&S.getMany){let{data:A}=await S.getMany({resource:J(q(f.key)),meta:ne(J(q(f.key)),p,["getMany"]),ids:[t]});w=A==null?void 0:A[0]}else{let{data:A}=await S.getOne({resource:J(q(f.key)),meta:ne(J(q(f.key)),p,a?["getMany","getOne"]:["getOne"]),id:t});w=A}x.push({status:"success",resource:J(q(f.key)),field:f.key}),$=w,z=!1}catch{return x.push({status:"error",resource:J(q(f.key)),field:f.key}),{...f,relationInfer:null}}}let D=i("__",$,{},i),_=q(f.key);return{...f,relation:!0,type:"relation",resource:{name:z?ae(_):J(_)},fieldable:!1,canRelation:void 0,relationInfer:D}}return{...f,relationInfer:null}}return f}),N=await Promise.all(T);d(N.filter(f=>f)),setTimeout(()=>{F(!1)},500)}catch{setTimeout(()=>{F(!1)},500)}setTimeout(()=>{console.log(`Tried to detect relations with ${x.length} attempts and succeeded with ${x.filter(T=>T.status==="success").length} attempts.`),console.groupEnd(),console.info("@refinedev/inferencer may send multiple requests to your API for nonexistent resources when trying to detect relations. To learn more about how the inferencer works, visit https://s.refine.dev/how-inferencer-works")},500)},[s,e]);return Fe.useEffect(()=>{l(!1),!h&&o&&o.length>0&&m.length===0&&R(o)},[R,h,o,R]),{fields:m,loading:h,initial:u}},"useRelationFetch");var me=r(({type:e,additionalScope:o=[],customElements:i=[],fieldTransformers:p=[],renderer:s,loadingComponent:m,errorComponent:d,codeViewerComponent:u})=>{let l=tt([...gt,...i]),h=nt([...bt,...p]),F=r(({resourceName:v,fieldTransformer:x,hideCodeViewerInProduction:T,meta:N,id:f})=>{var ve,Ce;let{resource:k,resources:C}=qe(v),{i18nProvider:K}=dn(fn),{resource:M}=qe(),{data:c,datas:S,loading:a,initial:t,error:$}=Ct(e,v??(k==null?void 0:k.name),f,N),z=r((E,P,Q)=>{let Z=l(E,P,Q,l,e);if(Z&&k){let Y=h([Z],C,k,Q,l,e),j=x?Y.flatMap(O=>{let W=x(O);return W?[W]:[]}):Y;return j==null?void 0:j[0]}},"inferSingleField"),D=r(E=>Object.keys(E).map(Q=>{let Z=E[Q];return z(Q,Z,E)}).filter(Boolean),"inferSingleRecord"),_=r(E=>{let P=E.map(O=>D(O)),Q=E.flatMap(O=>Object.keys(O)).filter((O,W,xe)=>xe.indexOf(O)===W),Z={},Y=Q.map(O=>{let W=P.map(ce=>ce.find(oe=>oe.key===O));return W.reduce((ce,oe,we)=>{if(!oe)return ce;let Ie=W.filter(pe=>(pe==null?void 0:pe.key)===oe.key&&(pe==null?void 0:pe.type)===oe.type).length;return Ie>ce.count?(Z[O]=E[we][O],{count:Ie,field:oe}):ce},{count:0,field:void 0}).field});return{commonRecord:Z,inferredFields:Y}},"inferMultipleRecords"),[n,w]=te.useMemo(()=>{if(S&&(e==="list"||e==="create")){let E=_(S);return[E.inferredFields,E.commonRecord]}if(c){let E=Object.keys(c).map(P=>{let Q=c[P];return l(P,Q,c,l,e)}).filter(Boolean);if(k){let P=h(E,C,k,c,l,e);return[x?P.flatMap(Z=>{let Y=x(Z);return Y?[Y]:[]}):P,c]}return[[],c]}return[[],void 0]},[c,S,C,k,x]),{fields:A,loading:L}=Tt({record:w,fields:n,infer:l,meta:N}),V=te.useMemo(()=>{let E=[];return A.forEach((P,Q,Z)=>{if(P.resource){if(E.findIndex(j=>{var O,W;return((O=j.resource)==null?void 0:O.name)===((W=P.resource)==null?void 0:W.name)})>-1)return;let Y=Z.filter((j,O)=>{var W,xe,ce,oe,we,Ie;if(O!==Q){let pe=P.resource,Mt=j.resource,Vt=((W=j.resource)==null?void 0:W.identifier)||((xe=P.resource)==null?void 0:xe.identifier)?((ce=j.resource)==null?void 0:ce.identifier)===((oe=P.resource)==null?void 0:oe.identifier):((we=j.resource)==null?void 0:we.name)===((Ie=P.resource)==null?void 0:Ie.name);return pe&&Mt&&Vt}return!1});if(Y.length>0)if(e==="create"||e==="edit"){let j;[P,...Y].find(O=>{O.fieldable!==!0&&j===void 0&&(j=O)}),j?E.push(j):E.push(P)}else{let j;[P,...Y].find(O=>{O.fieldable!==!1&&j===void 0&&(j=O)}),j?E.push(j):E.push(P)}else E.push(P)}else E.push(P)}),E},[A,e]),U=te.useMemo(()=>!a&&!L&&!t&&k?s({resource:k,resources:C,fields:V,infer:l,meta:N,isCustomPage:k.name!==(M==null?void 0:M.name),id:f,i18n:!!K}):"",[k,C,V,a,L]),Pe=T;return te.createElement(te.Fragment,null,m&&(a||L)&&te.createElement(m,null),!a&&!L&&te.createElement(te.Fragment,null,te.createElement(ze,{fetchError:!a&&$?$:!a&&!t&&!c,code:Oe(U,X(((ve=k==null?void 0:k.meta)==null?void 0:ve.label)??((Ce=k==null?void 0:k.options)==null?void 0:Ce.label)??(k==null?void 0:k.label)??(k==null?void 0:k.name)??"Resource",e)),errorComponent:d,additionalScope:o}),typeof u<"u"&&!Pe?te.createElement(u,{code:Be(U),loading:a||L}):null))},"Inferencer");return r(({name:v,resource:x,fieldTransformer:T,meta:N,hideCodeViewerInProduction:f,id:k})=>{let{resource:C}=qe(x??v),K=`${(C==null?void 0:C.identifier)??(C==null?void 0:C.name)}-${e}-${k}`;return te.createElement(F,{hideCodeViewerInProduction:f,fieldTransformer:T,resourceName:x??v,meta:N??{},key:K,id:k})},"InferencerComponent")},"createInferencer");import Se from"react";import{Alert as yn,Center as gn}from"@mantine/core";import{IconAlertCircle as hn}from"@tabler/icons-react";var le=r(({error:e})=>e?Se.createElement(gn,{style:{minHeight:300}},Se.createElement(yn,{title:"Error",color:"red",icon:Se.createElement(hn,null)},Se.createElement("div",{dangerouslySetInnerHTML:{__html:e??""}}))):null,"ErrorComponent");import xn from"react";import{LoadingOverlay as In}from"@mantine/core";var de=r(()=>xn.createElement(In,{visible:!0}),"LoadingComponent");var St=r(({resource:e,fields:o,meta:i,isCustomPage:p,id:s,i18n:m})=>{let d=X(e.label??e.name,"show"),u="record",l=[["useShow","@refinedev/core"],["Show","@refinedev/mantine"],["Title","@mantine/core"]];m&&l.push(["useTranslate","@refinedev/core"]),re(i||{},["gqlQuery","gqlMutation"])&&l.push(["gql","graphql-tag",!0]);let R=o.filter(t=>(t==null?void 0:t.relation)&&!(t!=null&&t.fieldable)&&(t==null?void 0:t.resource)).filter(Boolean).map(t=>{var $,z,D,_;if(t!=null&&t.relation&&!t.fieldable&&t.resource){if(t.multiple){l.push(["useMany","@refinedev/core"]);let n=g(u,t.key);return t.accessor&&(n=`${g(u,t.key)}?.map((item: any) => ${g("item",void 0,t.accessor)})`),`
                const { data: ${G(t.key,"Data")}, isLoading: ${G(t.key,"IsLoading")} } =
                useMany({
                    resource: "${t.resource.name}",
                    ids: ${n} || [],
                    queryOptions: {
                        enabled: !!${u} && !!${n}?.length,
                    },
                    ${B((($=t==null?void 0:t.resource)==null?void 0:$.identifier)??((z=t==null?void 0:t.resource)==null?void 0:z.name),i,["getMany"])}
                });
                `}return l.push(["useOne","@refinedev/core"]),`
                const { data: ${G(t.key,"Data")}, isLoading: ${G(t.key,"IsLoading")} } =
                useOne({
                    resource: "${t.resource.name}",
                    id: ${g(u,t.key,t.accessor,!1)} || "",
                    queryOptions: {
                        enabled: !!${u},
                    },
                    ${B(((D=t==null?void 0:t.resource)==null?void 0:D.identifier)??((_=t==null?void 0:t.resource)==null?void 0:_.name),i,["getOne"])}
                });
            `}}).filter(Boolean),v=r(t=>{if(t.relation&&t.resource){let $=G(t.key,"Data"),z=G(t.key,"IsLoading");if(t.multiple){let D=`${g(u,t.key)}?.length`;return l.push(["TagField","@refinedev/mantine"],["Group","@mantine/core"]),I`
                <Title my="xs" order={5}>${b({resource:e,field:t,i18n:m,noQuotes:!0})}</Title>
                {${z} && ${D} ? <>Loading...</> : (
                    <>
                    ${(()=>{var _,n;if(t.relationInfer){if((_=t.relationInfer)!=null&&_.accessor){if(Array.isArray(t.relationInfer.accessor))return console.log("@refinedev/inferencer: Inferencer failed to render this field",{key:t.key,relation:t.relationInfer}),'<span title="Inferencer failed to render this field. (Unsupported nesting)">Cannot Render</span>';let w=J((n=t.resource)==null?void 0:n.name),A=g(w,void 0,t.relationInfer.accessor);return`
                                    {record?.${t.key}?.length ? <Group spacing="xs">
                                        {${$}?.data?.map((${w}: any) => <TagField key={${A}} value={${A}} />)}
                                    </Group> : <></>}
                                    `}return console.log("@refinedev/inferencer: Inferencer failed to render this field",{key:t.key,relation:t.relationInfer}),'<span title="Inferencer failed to render this field (Cannot find key)">Cannot Render</span>'}return console.log("@refinedev/inferencer: Inferencer failed to render this field",{key:t.key}),'<span title="Inferencer failed to render this field (Cannot find relation)">Cannot Render</span>'})()}
                    </>
                )}
                `}return t.fieldable?I`
                <Title my="xs" order={5}>${b({resource:e,field:t,i18n:m,noQuotes:!0})}</Title>
                <TextField value={${g(u,t.key,t.accessor)}} />
                `:I`
                <Title my="xs" order={5}>${b({resource:e,field:t,i18n:m,noQuotes:!0})}</Title>
                {${z} ? <>Loading...</> : (
                    <>
                    ${(()=>{var D,_,n;return t.relationInfer?(D=t.relationInfer)!=null&&D.accessor?Array.isArray(t.relationInfer.accessor)?`{${g(`${$}?.data`,void 0,t.relationInfer.accessor,' + " " + ')}}`:`{${$}?.data?.${t.relationInfer.accessor}}`:((_=t==null?void 0:t.relationInfer)==null?void 0:_.type)==="object"&&!((n=t==null?void 0:t.relationInfer)!=null&&n.accessor)?(console.log("@refinedev/inferencer: Inferencer failed to render this field",{key:t.key,relation:t.relationInfer}),'<span title="Inferencer failed to render this field (Cannot find key)">Cannot Render</span>'):`{${$}?.data}`:`{${$}?.data?.id}`})()}
                    </>
                )}
                
                `}},"renderRelationFields"),x=r(t=>{if(t.type==="text"){if(l.push(["TextField","@refinedev/mantine"]),t.multiple){l.push(["TagField","@refinedev/mantine"],["Group","@mantine/core"]);let $=g("item",void 0,t.accessor);return I`
                <Title my="xs" order={5}>${b({resource:e,field:t,i18n:m,noQuotes:!0})}</Title>
                <Group spacing="xs">
                    {${g(u,t.key)}?.map((item: any) => (
                        <TagField value={${$}} key={${$}} />
                    ))}
                </Group>
            `}return I`
                <Title my="xs" order={5}>${b({resource:e,field:t,i18n:m,noQuotes:!0})}</Title>
                <TextField value={${g(u,t.key,t.accessor)}} />
            `}},"textFields"),T=r(t=>{if(t.type==="image"){if(l.push(["Image","@mantine/core"]),t.multiple){l.push(["Group","@mantine/core"]);let $=g("item",void 0,t.accessor);return I`
                <Title my="xs" order={5}>${b({resource:e,field:t,i18n:m,noQuotes:!0})}</Title>
                <Group spacing="xs">
                    {${g(u,t.key)}?.map((item: any) => (
                        <Image sx={{ maxWidth: 200 }} src={${$}} key={${$}} />
                    ))}
                </Group>
            `}return I`
                <Title my="xs" order={5}>${b({resource:e,field:t,i18n:m,noQuotes:!0})}</Title>
                <Image sx={{ maxWidth: 200 }} src={${g(u,t.key,t.accessor," + ")}} />
                `}},"imageFields"),N=r(t=>{if(t.type==="email"){if(l.push(["EmailField","@refinedev/mantine"]),t.multiple){l.push(["TagField","@refinedev/mantine"],["Group","@mantine/core"]);let $=g("item",void 0,t.accessor);return I`
                <Title my="xs" order={5}>${b({resource:e,field:t,i18n:m,noQuotes:!0})}</Title>
                <Group spacing="xs">
                    {${g(u,t.key)}?.map((item: any) => (
                        <TagField value={${$}} key={${$}} />
                    ))}
                </Group>
            `}return I`
                <Title my="xs" order={5}>${b({resource:e,field:t,i18n:m,noQuotes:!0})}</Title>
                <EmailField value={${g(u,t.key,t.accessor," + ")}} />
            `}},"emailFields"),f=r(t=>{if(t.type==="url"){if(l.push(["UrlField","@refinedev/mantine"]),t.multiple){l.push(["TagField","@refinedev/mantine"],["Group","@mantine/core"]);let $=g("item",void 0,t.accessor);return I`
                <Title my="xs" order={5}>${b({resource:e,field:t,i18n:m,noQuotes:!0})}</Title>
                <Group spacing="xs">
                    {${g(u,t.key)}?.map((item: any) => (
                        <TagField value={${$}} key={${$}} />
                    ))}
                </Group>
            `}return I`
                <Title my="xs" order={5}>${b({resource:e,field:t,i18n:m,noQuotes:!0})}</Title>
                <UrlField value={${g(u,t.key,t.accessor," + ")}} />
            `}},"urlFields"),k=r(t=>{if(t.type==="boolean"){if(l.push(["BooleanField","@refinedev/mantine"]),t.multiple){l.push(["TagField","@refinedev/mantine"],["Group","@mantine/core"]);let $=g("item",void 0,t.accessor);return I`
                <Title my="xs" order={5}>${b({resource:e,field:t,i18n:m,noQuotes:!0})}</Title>
                <Group spacing="xs">
                    {${g(u,t.key)}?.map((item: any, index: number) => (
                        <TagField value={${$}} key={index} />
                    ))}
                </Group>
            `}return I`
                <Title my="xs" order={5}>${b({resource:e,field:t,i18n:m,noQuotes:!0})}</Title>
                <BooleanField value={${g(u,t.key,t.accessor," && ")}} />
            `}},"booleanFields"),C=r(t=>{if(t.type==="date"){if(l.push(["DateField","@refinedev/mantine"]),t.multiple){l.push(["Group","@mantine/core"]);let $=g("item",void 0,t.accessor);return I`
                <Title my="xs" order={5}>${b({resource:e,field:t,i18n:m,noQuotes:!0})}</Title>
                <Group spacing="xs">
                    {${g(u,t.key)}?.map((item: any) => (
                        <DateField value={${$}} key={${$}} />
                    ))}
                </Group>
            `}return I`
                <Title my="xs" order={5}>${b({resource:e,field:t,i18n:m,noQuotes:!0})}</Title>
                <DateField value={${g(u,t.key,t.accessor," + ' ' + ")}} />
            `}},"dateFields"),K=r(t=>{if(t.type==="richtext")return l.push(["MarkdownField","@refinedev/mantine"]),I`
                <Title mt="xs" order={5}>${b({resource:e,field:t,i18n:m,noQuotes:!0})}</Title>
                <MarkdownField value={${g(u,t.key,t.accessor,' + " " + ')}} />
            `},"richtextFields"),M=r(t=>{if(t.type==="number"){if(l.push(["NumberField","@refinedev/mantine"]),t.multiple){l.push(["TagField","@refinedev/mantine"],["Group","@mantine/core"]);let $=g("item",void 0,t.accessor);return I`
                <Title my="xs" order={5}>${b({resource:e,field:t,i18n:m,noQuotes:!0})}</Title>
                <Group spacing="xs">
                    {${g(u,t.key)}?.map((item: any) => (
                        <TagField value={${$}} key={${$}} />
                    ))}
                </Group>
            `}return I`
                <Title my="xs" order={5}>${b({resource:e,field:t,i18n:m,noQuotes:!0})}</Title>
                <NumberField value={${g(u,t.key,t.accessor,' + " " + ')} ?? ""} />
            `}},"numberFields"),c=r(t=>{if(t)return I`
                ${t}
            `},"wrapper"),S=o.map(t=>{switch(t==null?void 0:t.type){case"text":return c(x(t));case"number":return c(M(t));case"richtext":return c(K(t));case"email":return c(N(t));case"image":return c(T(t));case"date":return c(C(t));case"boolean":return c(k(t));case"url":return c(f(t));case"relation":return c(v(t));default:return}});ie(l);let a=m&&"const translate = useTranslate();";return I`
    ${se(l)}
    
    export const ${d} = () => {
        ${a}
        const { query } = useShow(${p?`{ 
                    resource: "${e.name}", 
                    id: ${ke(s)},
                    ${B((e==null?void 0:e.identifier)??(e==null?void 0:e.name),i,["getOne"])}
                }`:B((e==null?void 0:e.identifier)??(e==null?void 0:e.name),i,["getOne"])?`{ ${B((e==null?void 0:e.identifier)??(e==null?void 0:e.name),i,["getOne"])} }`:""});
        const { data, isLoading } = query;
    
        const ${u} = data?.data;
    
        ${R}

        return (
            <Show isLoading={isLoading}>
                ${S.join("")}
            </Show>
        );
    };
    `},"renderer"),Qe=me({type:"show",additionalScope:[["@refinedev/mantine","RefineMantine",{Show:$n,TagField:bn,TextField:kn,EmailField:Fn,UrlField:vn,BooleanField:Cn,DateField:wn,MarkdownField:Tn,NumberField:Sn}],["@mantine/core","MantineCore",{Title:An,Group:Pn,Image:Rn}]],codeViewerComponent:ue,loadingComponent:de,errorComponent:le,renderer:St});import{List as Mn,EditButton as Vn,ShowButton as Nn,DeleteButton as Ln,TagField as Gn,EmailField as En,UrlField as Dn,BooleanField as On,DateField as Bn,MarkdownField as jn}from"@refinedev/mantine";import{useTable as Hn}from"@refinedev/react-table";import{ScrollArea as Kn,Table as zn,Pagination as qn,Group as Qn,Image as _n}from"@mantine/core";import{flexRender as Un}from"@tanstack/react-table";var fe=r(e=>Array.isArray(e.accessor)||e.multiple?`accessorKey: "${e.key}"`:e.accessor?`accessorKey: "${H(e.key,void 0,e.accessor)}"`:`accessorKey: "${e.key}"`,"getAccessorKey"),At=r(({resource:e,fields:o,meta:i,isCustomPage:p,i18n:s})=>{let m=X(e.label??e.name,"list"),d="tableData?.data",u=[["useTable","@refinedev/react-table"],["ColumnDef","@tanstack/react-table"],["flexRender","@tanstack/react-table"],["ScrollArea","@mantine/core"],["List","@refinedev/mantine"],["Table","@mantine/core"],["Pagination","@mantine/core"],["Group","@mantine/core"],["EditButton","@refinedev/mantine"],["ShowButton","@refinedev/mantine"],["DeleteButton","@refinedev/mantine"]];s&&u.push(["useTranslate","@refinedev/core"]),re(i||{},["gqlQuery","gqlMutation"])&&u.push(["gql","graphql-tag",!0]);let h=o.filter(n=>(n==null?void 0:n.relation)&&!(n!=null&&n.fieldable)&&(n==null?void 0:n.resource)),F=h.filter(Boolean).map(n=>{var w,A;if(n!=null&&n.relation&&!n.fieldable&&n.resource){u.push(["GetManyResponse","@refinedev/core"]),u.push(["useMany","@refinedev/core"]);let L="";return n.multiple?L=`[].concat(...(${d}?.map((item) => ${g("item",n.key,n.accessor,!1)}) ?? []))`:L=`${d}?.map((item) => ${g("item",n.key,n.accessor,!1)}) ?? []`,`
                const { data: ${G(n.key,"Data")} } =
                useMany({
                    resource: "${n.resource.name}",
                    ids: ${L},
                    queryOptions: {
                        enabled: !!${d},
                    },
                    ${B(((w=n==null?void 0:n.resource)==null?void 0:w.identifier)??((A=n==null?void 0:n.resource)==null?void 0:A.name),i,["getMany"])}
                });
                `}}).filter(Boolean),R=h==null?void 0:h.map(n=>{if(n!=null&&n.resource)return G(n.key,"Data")}).filter(Boolean),v=r(n=>{var w,A,L,V,U;if(n.relation&&n.resource){let Pe=`${G(n.key,"Data")}?.data`;if(Array.isArray(n.accessor))return;let ve=`id: "${n.key}"`,Ce=`header: ${b({resource:e,field:n,i18n:s,noBraces:!0})}`,E=fe(n),P="";if(n.multiple){u.push(["TagField","@refinedev/mantine"]);let Q="item";if(n!=null&&n.relationInfer&&(Q=g("item",void 0,n.relationInfer.accessor)),n!=null&&n.relationInfer&&((w=n==null?void 0:n.relationInfer)==null?void 0:w.type)==="object"&&!((A=n==null?void 0:n.relationInfer)!=null&&A.accessor))return console.log("@refinedev/inferencer: Inferencer failed to render this field",{key:n.key,relation:n.relationInfer}),`cell: function render({ getValue }) {
                        return (
                            <span title="Inferencer failed to render this field (Cannot find key)">Cannot Render</span>
                        )
                    }`;P=`cell: function render({ getValue, table }) {
                    const meta = table.options.meta as {
                        ${G(n.key,"Data")}: GetManyResponse;
                    };

                    const ${G(n.key)} = getValue<any[]>()?.map((item) => {
                        return meta.${G(n.key,"Data")}?.data?.find(
                            (resourceItems) => resourceItems.id === ${g("item",void 0,n.accessor)}
                        );
                    })

                    return (
                        <Group spacing="xs">
                            {${G(n.key)}?.map((item, index) => (
                                <TagField key={index} value={${Q}} />
                            ))}
                        </Group>
                    )
                }
            `}else if(n!=null&&n.relationInfer){let Q=((L=n==null?void 0:n.relationInfer)==null?void 0:L.type)==="object"&&!((V=n==null?void 0:n.relationInfer)!=null&&V.accessor);Q&&console.log("@refinedev/inferencer: Inferencer failed to render this field",{key:n.key,relation:n.relationInfer}),P=`cell: function render({ getValue, table }) {
                        const meta = table.options.meta as {
                            ${G(n.key,"Data")}: GetManyResponse;
                        };

                        const ${G(n.key)} = meta.${Pe}?.find(
                            (item) => item.id == getValue<any>(),
                        );

                        return ${Q?'<span title="Inferencer failed to render this field (Cannot find key)">Cannot Render</span>':`${g(G(n.key),void 0,(U=n==null?void 0:n.relationInfer)==null?void 0:U.accessor)} ?? "Loading..."`};
                    },`}else P="";return`
                {
                    ${ve},
                    ${Ce},
                    ${E},
                    ${P}
                }
            `}},"renderRelationFields"),x=r(n=>{if(n.type==="image"){u.push(["Image","@mantine/core"]);let w=`id: "${n.key}"`,A=fe(n),L=`header: ${b({resource:e,field:n,i18n:s,noBraces:!0})}`,V=I`
                cell: function render({ getValue }) {
                    ${n!=null&&n.accessor?"try {":""}
                        return <Image sx={{ maxWidth: "100px" }} src={${g("getValue<any>()",void 0,Array.isArray(n.accessor)?n.accessor:void 0," + ")}} />
                    ${n!=null&&n.accessor?" } catch (error) { return null; }":""}
                   
                }
            `;if(n.multiple){let U=g("item",void 0,n.accessor," + ");V=`
                    cell: function render({ getValue }) {
                        ${n!=null&&n.accessor?"try {":""}
                            return (
                                <Group spacing="xs">
                                    {getValue<any[]>()?.map((item, index) => (
                                        <Image src={${U}} key={index} sx={{ maxWidth: "100px" }} />
                                    ))}
                                </Group>
                            )
                        ${n!=null&&n.accessor?" } catch (error) { return null; }":""}
                    }
                `}return`
                {
                    ${w},
                    ${A},
                    ${L},
                    ${V}
                }
            `}},"imageFields"),T=r(n=>{if(n.type==="email"){u.push(["EmailField","@refinedev/mantine"]);let w=`id: "${n.key}"`,A=fe(n),L=`header: ${b({resource:e,field:n,i18n:s,noBraces:!0})}`,V=I`
                cell: function render({ getValue }) {
                    return <EmailField value={${g("getValue<any>()",void 0,Array.isArray(n.accessor)?n.accessor:void 0,' + " " + ')}} />
                }
            `;return n.multiple&&(u.push(["TagField","@refinedev/mantine"]),V=`
                    cell: function render({ getValue }) {
                        return (
                            <Group spacing="xs">
                                {getValue<any>()?.map((item, index) => (
                                    <TagField value={${g("item",void 0,n.accessor," + ")}} key={index} />
                                ))}
                            </Group>
                        )
                    }
                `),`
                {
                    ${w},
                    ${A},
                    ${L},
                    ${V}
                }
            `}},"emailFields"),N=r(n=>{if(n.type==="url"){u.push(["UrlField","@refinedev/mantine"]);let w=`id: "${n.key}"`,A=fe(n),L=`header: ${b({resource:e,field:n,i18n:s,noBraces:!0})}`,V=I`
                cell: function render({ getValue }) {
                    return <UrlField value={${g("getValue<any>()",void 0,Array.isArray(n.accessor)?n.accessor:void 0," + ")}} />
                }
            `;return n.multiple&&(u.push(["TagField","@refinedev/mantine"]),V=`
                    cell: function render({ getValue }) {
                        return (
                            <Group spacing="xs">
                                {getValue<any[]>()?.map((item, index) => (
                                    <TagField value={${g("item",void 0,n.accessor," + ")}} key={index} />
                                ))}
                            </Group>
                        )
                    }
                `),`
                {
                    ${w},
                    ${A},
                    ${L},
                    ${V}
                }
            `}},"urlFields"),f=r(n=>{if((n==null?void 0:n.type)==="boolean"){u.push(["BooleanField","@refinedev/mantine"]);let w=`id: "${n.key}"`,A=fe(n),L=`header: ${b({resource:e,field:n,i18n:s,noBraces:!0})}`,V=I`
                cell: function render({ getValue }) {
                    return <BooleanField value={${g("getValue<any>()",void 0,Array.isArray(n.accessor)?n.accessor:void 0," + ")}} />
                }
            `;return n.multiple&&(V=`
                    cell: function render({ getValue }) {
                        return (
                            <Group spacing="xs">
                                {getValue<any[]>()?.map((item, index) => (
                                    <BooleanField value={${g("item",void 0,n.accessor," + ")}} key={index} />
                                ))}
                            </Group>
                        )
                    }
                `),`
                {
                    ${w},
                    ${A},
                    ${L},
                    ${V}
                }
            `}},"booleanFields"),k=r(n=>{if(n.type==="date"){u.push(["DateField","@refinedev/mantine"]);let w=`id: "${n.key}"`,A=fe(n),L=`header: ${b({resource:e,field:n,i18n:s,noBraces:!0})}`,V=I`
                cell: function render({ getValue }) {
                    return <DateField value={${g("getValue<any>()",void 0,Array.isArray(n.accessor)?n.accessor:void 0,' + " " + ')}} />
                }
            `;return n.multiple&&(V=`
                    cell: function render({ getValue }) {
                        return (
                            <Group spacing="xs">
                                {getValue<any[]>()?.map((item, index) => (
                                    <DateField value={${g("item",void 0,n.accessor," + ")}} key={index} />
                                ))}
                            </Group>
                        )
                    }
                `),`
                {
                    ${w},
                    ${A},
                    ${L},
                    ${V}
                }
            `}},"dateFields"),C=r(n=>{if((n==null?void 0:n.type)==="richtext"){u.push(["MarkdownField","@refinedev/mantine"]);let w=`id: "${n.key}"`,A=fe(n),L=`header: ${b({resource:e,field:n,i18n:s,noBraces:!0})}`,V=I`
                cell: function render({ getValue }) {
                    return <MarkdownField value={(${g("getValue<string>()",void 0,Array.isArray(n.accessor)?n.accessor:void 0)})?.slice(0, 80) + "..." } />
                }
            `;return n.multiple&&(V=`
                    cell: function render({ getValue }) {
                        return (
                            <Group spacing="xs">
                                {getValue<string[]>()?.map((item, index) => (
                                    <MarkdownField value={${g("item",void 0,n.accessor," + ")}} key={index} />
                                ))}
                            </Group>
                        )
                    }
                `),`
                {
                    ${w},
                    ${A},
                    ${L},
                    ${V}
                }
            `}},"richtextFields"),K=r(n=>{if(n&&(n.type==="text"||n.type==="number")){let w=`id: "${n.key}"`,A=fe(n),L=`header: ${b({resource:e,field:n,i18n:s,noBraces:!0})}`,V="";return n.multiple&&(u.push(["TagField","@refinedev/mantine"]),V=`
                    cell: function render({ getValue }) {
                        return (
                            <Group spacing="xs">
                                {getValue<any[]>()?.map((item, index) => (
                                    <TagField value={${g("item",void 0,n.accessor,' + " " + ')}} key={index} />
                                ))}
                            </Group>
                        )
                    }
                `),!n.multiple&&Array.isArray(n.accessor)&&(V=`
                    cell: function render({ getValue }) {
                        return (
                            <>{${g("getValue()",n.key,n.accessor)}}</>
                        );
                    }
                `),`
                {
                    ${w},
                    ${A},
                    ${L},
                    ${V}
                }
            `}},"basicFields"),{canEdit:M,canShow:c,canDelete:S,meta:a}=e??{},t=S||(a==null?void 0:a.canDelete);M&&u.push(["EditButton","@refinedev/mantine"]),c&&u.push(["ShowButton","@refinedev/mantine"]),t&&u.push(["DeleteButton","@refinedev/mantine"]);let z=M||c||t?I`
    {
        id: "actions",
        accessorKey: "id",
        header: ${s?'translate("table.actions")':'"Actions"'},
        cell: function render({ getValue }) {
            return (
                <Group spacing="xs" noWrap>
                    ${c?I`
                    <ShowButton
                        hideText
                        recordItemId={getValue() as string}
                    />
                    `:""}
                    ${M?I`<EditButton
                        hideText
                        recordItemId={getValue() as string}
                    />`:""}
                    ${t?I`
                    <DeleteButton
                        hideText
                        recordItemId={getValue() as string}
                    />
                    `:""}
                </Group>
            );
        },
    },
        `:"",D=o.map(n=>{switch(n==null?void 0:n.type){case"text":case"number":return K(n);case"richtext":return C(n);case"email":return T(n);case"image":return x(n);case"date":return k(n);case"boolean":return f(n);case"url":return N(n);case"relation":return v(n);default:return}});ie(u);let _=s&&"const translate = useTranslate();";return I`
    import React from "react";
    ${se(u)}
    
    export const ${m} = () => {
        ${_}
        const columns = React.useMemo<ColumnDef<any>[]>(() => [
            ${[...D,z].filter(Boolean).join(",")}
        ], [${s?"translate":""}]);

        const {
            getHeaderGroups,
            getRowModel,
            setOptions,
            refineCore: {
                setCurrent,
                pageCount,
                current,
                tableQueryResult: { data: tableData },
            },
        } = useTable({
            columns,
            ${p?`
            refineCoreProps: {
                resource: "${e.name}",
                ${B((e==null?void 0:e.identifier)??(e==null?void 0:e.name),i,["getList"])}
            }
            `:B((e==null?void 0:e.identifier)??(e==null?void 0:e.name),i,["getList"])?`refineCoreProps: { ${B((e==null?void 0:e.identifier)??(e==null?void 0:e.name),i,["getList"])} },`:""}
        });

        ${F}

        setOptions((prev) => ({
            ...prev,
            meta: {
                ...prev.meta,
                ${R.join(", ")}
            },
        }));

        return (
            <List>
                <ScrollArea>
                    <Table highlightOnHover>
                        <thead>
                            {getHeaderGroups().map((headerGroup) => (
                                <tr key={headerGroup.id}>
                                    {headerGroup.headers.map((header) => {
                                        return (
                                            <th key={header.id}>
                                                {!header.isPlaceholder && (
                                                    flexRender(
                                                        header.column
                                                            .columnDef
                                                            .header,
                                                        header.getContext(),
                                                    )
                                                )}
                                            </th>
                                        );
                                    })}
                                </tr>
                            ))}
                        </thead>
                        <tbody>
                            {getRowModel().rows.map((row) => {
                                return (
                                    <tr key={row.id}>
                                        {row.getVisibleCells().map((cell) => {
                                            return (
                                                <td key={cell.id}>
                                                    {flexRender(
                                                        cell.column.columnDef.cell,
                                                        cell.getContext(),
                                                    )}
                                                </td>
                                            );
                                        })}
                                    </tr>
                                );
                            })}
                        </tbody>
                    </Table>
                </ScrollArea>    
                <br />
                <Pagination
                    position="right"
                    total={pageCount}
                    page={current}
                    onChange={setCurrent}
                />
            </List>
        );
    };
    `},"renderer"),_e=me({type:"list",additionalScope:[["@refinedev/mantine","RefineMantine",{List:Mn,EditButton:Vn,ShowButton:Nn,DeleteButton:Ln,TagField:Gn,EmailField:En,UrlField:Dn,BooleanField:On,DateField:Bn,MarkdownField:jn}],["@refinedev/react-table","RefineReactTable",{useTable:Hn}],["@mantine/core","MantineCore",{ScrollArea:Kn,Table:zn,Pagination:qn,Group:Qn,Image:_n}],["@tanstack/react-table","TanstackReactTable",{flexRender:Un}]],codeViewerComponent:ue,loadingComponent:de,errorComponent:le,renderer:At});import{Create as Wn,useForm as Zn,useSelect as Yn}from"@refinedev/mantine";import{MultiSelect as Jn,Select as Xn,TextInput as er,Checkbox as tr,Textarea as nr,NumberInput as rr}from"@mantine/core";var Pt=r(({resource:e,fields:o,meta:i,isCustomPage:p,i18n:s})=>{let m=X(e.label??e.name,"create"),d=[["Create","@refinedev/mantine"],["useForm","@refinedev/mantine"]],u={};s&&d.push(["useTranslate","@refinedev/core"]),re(i||{},["gqlQuery","gqlMutation"])&&d.push(["gql","graphql-tag",!0]);let F=o.filter(c=>(c==null?void 0:c.relation)&&!(c!=null&&c.fieldable)&&(c==null?void 0:c.resource)).filter(Boolean).map(c=>{var S,a;if(c!=null&&c.relation&&!c.fieldable&&c.resource)return d.push(["useSelect","@refinedev/mantine"]),`
                const { selectProps: ${G(c.key,"SelectProps")} } =
                useSelect({
                    resource: "${c.resource.name}",
                    ${be(c)}
                    ${B(((S=c==null?void 0:c.resource)==null?void 0:S.identifier)??((a=c==null?void 0:c.resource)==null?void 0:a.name),i,["getList"])}
                });
            `}).filter(Boolean),R=r(c=>{if(c.relation&&c.resource){u={...u,[c.key]:c.multiple?[]:c.accessor?{[typeof c.accessor=="string"?c.accessor:c.accessor[0]]:""}:""};let S=G(c.key,"SelectProps");return c.multiple?(d.push(["MultiSelect","@mantine/core"]),I`
                    <MultiSelect mt="sm" label=${b({resource:e,field:c,i18n:s})} {...getInputProps("${H(c.key,void 0)}")} {...${S}} filterDataOnExactSearchMatch={undefined} />
                `):(d.push(["Select","@mantine/core"]),I`
                <Select mt="sm" label=${b({resource:e,field:c,i18n:s})} {...getInputProps("${H(c.key,void 0,c.accessor)}")} {...${S}} />
            `)}},"renderRelationFields"),v=r(c=>{if(c.type==="text"||c.type==="email"||c.type==="date"||c.type==="url")return ye(c.key)||(d.push(["TextInput","@mantine/core"]),u={...u,[c.key]:c.multiple?[]:""},c.multiple)?void 0:I`
                <TextInput mt="sm" label=${b({resource:e,field:c,i18n:s})} {...getInputProps("${H(c.key,void 0,c.accessor)}")} />
            `},"textFields"),x=r(c=>{if(c.type==="image")return I`
            {/* 
                Dropzone component is not included in "@refinedev/mantine" package.
                To use a <Dropzone> component, you can follow the official documentation for Mantine.
                
                Docs: https://mantine.dev/others/dropzone/
            */}
            `},"imageFields"),T=r(c=>{if(c.type==="boolean")return d.push(["Checkbox","@mantine/core"]),u={...u,[c.key]:c.multiple?[]:""},c.multiple?void 0:I`
                <Checkbox mt="sm" label=${b({resource:e,field:c,i18n:s})} {...getInputProps("${H(c.key,void 0,c.accessor)}", { type: 'checkbox' })} />
            `},"booleanFields"),N=r(c=>{if(c.type==="date")return`
                {/* 
                    DatePicker component is not included in "@refinedev/mantine" package.
                    To use a <DatePicker> component, you can follow the official documentation for Mantine.
                    
                    Docs: https://mantine.dev/dates/date-picker/
                */}
                ${v(c)??""}
            `},"dateFields"),f=r(c=>{if(c.type==="richtext")return d.push(["Textarea","@mantine/core"]),u={...u,[c.key]:c.multiple?[]:""},c.multiple?void 0:I`
                <Textarea mt="sm" label=${b({resource:e,field:c,i18n:s})} autosize {...getInputProps("${H(c.key,void 0,c.accessor)}")} />
            `},"richtextFields"),k=r(c=>{if(c.type==="number")return ye(c.key)||(d.push(["NumberInput","@mantine/core"]),u={...u,[c.key]:c.multiple?[]:""},c.multiple)?void 0:I`
                <NumberInput mt="sm" label=${b({resource:e,field:c,i18n:s})} {...getInputProps("${H(c.key,void 0,c.accessor)}")}/>
            `},"numberFields"),C=r(c=>{if(c)return I`
                ${c}
        `},"wrapper"),K=o.map(c=>{switch(c==null?void 0:c.type){case"url":case"text":case"email":return C(v(c));case"number":return C(k(c));case"richtext":return C(f(c));case"image":return C(x(c));case"date":return C(N(c));case"boolean":return C(T(c));case"relation":return C(R(c));default:return}});ie(d);let M=s&&"const translate = useTranslate();";return I`
    ${se(d)}
    
    export const ${m} = () => {
        ${M}
        const { getInputProps, saveButtonProps, setFieldValue, refineCore: { formLoading } } = useForm({
            initialValues: ${JSON.stringify(u)},
            ${p?`refineCoreProps: {
                        resource: "${e.name}",
                        action: "create",
                        ${B(e.identifier??e.name,i,["create","getOne"])}
                    }`:B(e.identifier??e.name,i,["create","getOne"])?`refineCoreProps: { ${B(e.identifier??e.name,i,["create","getOne"])} }`:""}
        });
    
        ${F}

        return (
            <Create isLoading={formLoading} saveButtonProps={saveButtonProps}>
                ${K.join("")}
            </Create>
        );
    };
    `},"renderer"),Ue=me({type:"create",additionalScope:[["@refinedev/mantine","RefineMantine",{Create:Wn,useForm:Zn,useSelect:Yn}],["@mantine/core","MantineCore",{MultiSelect:Jn,Select:Xn,TextInput:er,Checkbox:tr,Textarea:nr,NumberInput:rr}]],codeViewerComponent:ue,loadingComponent:de,errorComponent:le,renderer:Pt});import{Edit as or,useForm as ar,useSelect as sr}from"@refinedev/mantine";import{MultiSelect as ir,Select as cr,TextInput as pr,Group as ur,Checkbox as mr,Textarea as lr,NumberInput as dr}from"@mantine/core";var Rt=r(({resource:e,fields:o,meta:i,isCustomPage:p,id:s,i18n:m})=>{let d=X(e.label??e.name,"edit"),u=G(e.label??e.name,"Data"),l=[["Edit","@refinedev/mantine"],["useForm","@refinedev/mantine"]],h={};m&&l.push(["useTranslate","@refinedev/core"]),re(i||{},["gqlQuery","gqlMutation"])&&l.push(["gql","graphql-tag",!0]);let v=o.filter(a=>(a==null?void 0:a.relation)&&!(a!=null&&a.fieldable)&&(a==null?void 0:a.resource)).filter(Boolean).map(a=>{var t,$;if(a!=null&&a.relation&&!a.fieldable&&a.resource){l.push(["useSelect","@refinedev/mantine"]);let z=g(u,a.key,a.accessor,!1);a.multiple&&a.accessor&&(z=`${g(u,a.key)}?.map((item: any) => ${g("item",void 0,a.accessor)})`);let D="";return a.multiple&&a.accessor&&(D=`React.useEffect(() => {
                        setFieldValue("${a.key}", ${z});
                    }, [${u}]);`),`
                const { selectProps: ${G(a.key,"SelectProps")} } =
                useSelect({
                    resource: "${a.resource.name}",
                    defaultValue: ${z},
                    ${be(a)}
                    ${B(((t=a==null?void 0:a.resource)==null?void 0:t.identifier)??(($=a==null?void 0:a.resource)==null?void 0:$.name),i,["getList"])}
                });

                ${D}
            `}}).filter(Boolean),x=r(a=>{if(a.relation&&a.resource){h={...h,[a.key]:a.multiple?[]:a.accessor?{[typeof a.accessor=="string"?a.accessor:a.accessor[0]]:""}:""};let t=G(a.key,"SelectProps");return a.multiple?(l.push(["MultiSelect","@mantine/core"]),I`
                    <MultiSelect mt="sm" label=${b({resource:e,field:a,i18n:m})} {...getInputProps("${H(a.key,void 0)}")} {...${t}} filterDataOnExactSearchMatch={undefined} />
                `):(l.push(["Select","@mantine/core"]),I`
                <Select mt="sm" label=${b({resource:e,field:a,i18n:m})} {...getInputProps("${H(a.key,void 0,a.accessor)}")} {...${t}} />
            `)}},"renderRelationFields"),T=r(a=>{if(a.type==="text"||a.type==="email"||a.type==="date"||a.type==="url"){if(l.push(["TextInput","@mantine/core"]),h={...h,[a.key]:a.multiple?[]:""},a.multiple){l.push(["Group","@mantine/core"]);let t=H(a.key,"${index}",a.accessor);return`
                <Group spacing="xs">
                    {${g(u,a.key)}?.map((item: any, index: number) => (
                        <TextInput mt="sm" key={index} label=${b({resource:e,field:a,i18n:m})} {...getInputProps(\`${t}\`)} />
                    ))}
                </Group>
                `}return I`
                <TextInput mt="sm" ${ye(a.key)?"disabled":""} label=${b({resource:e,field:a,i18n:m})} {...getInputProps("${H(a.key,void 0,a.accessor)}")} />
            `}},"textFields"),N=r(a=>{if(a.type==="image")return I`
            {/* 
                Dropzone component is not included in "@refinedev/mantine" package.
                To use a <Dropzone> component, you can follow the official documentation for Mantine.
                
                Docs: https://mantine.dev/others/dropzone/
            */}
            `},"imageFields"),f=r(a=>{if(a.type==="boolean"){if(l.push(["Checkbox","@mantine/core"]),h={...h,[a.key]:a.multiple?[]:""},a.multiple){l.push(["Group","@mantine/core"]);let t=H(a.key,"${index}",a.accessor);return`
                <Group spacing="xs">
                    {${g(u,a.key)}?.map((item: any, index: number) => (
                        <Checkbox mt="sm" key={index} label=${b({resource:e,field:a,i18n:m})} {...getInputProps(\`${t}\`, { type: 'checkbox' })} />
                    ))}
                </Group>
                `}return I`
                <Checkbox mt="sm" label=${b({resource:e,field:a,i18n:m})} {...getInputProps("${H(a.key,void 0,a.accessor)}", { type: 'checkbox' })} />
            `}},"booleanFields"),k=r(a=>{if(a.type==="date")return`
                {/* 
                    DatePicker component is not included in "@refinedev/mantine" package.
                    To use a <DatePicker> component, you can follow the official documentation for Mantine.
                    
                    Docs: https://mantine.dev/dates/date-picker/
                */}
                ${T(a)}
            `},"dateFields"),C=r(a=>{if(a.type==="richtext"){if(l.push(["Textarea","@mantine/core"]),h={...h,[a.key]:a.multiple?[]:""},a.multiple){l.push(["Group","@mantine/core"]);let t=H(a.key,"${index}",a.accessor);return`
                <Group spacing="xs">
                    {${g(u,a.key)}?.map((item: any, index: number) => (
                        <Textarea mt="sm" key={index} label=${b({resource:e,field:a,i18n:m})} {...getInputProps(\`${t}\`)} />
                    ))}
                </Group>
                `}return I`
                <Textarea mt="sm" label=${b({resource:e,field:a,i18n:m})} autosize {...getInputProps("${H(a.key,void 0,a.accessor)}")} />
            `}},"richtextFields"),K=r(a=>{if(a.type==="number"){if(l.push(["NumberInput","@mantine/core"]),h={...h,[a.key]:a.multiple?[]:""},a.multiple){l.push(["Group","@mantine/core"]);let t=H(a.key,"${index}",a.accessor);return`
                <Group spacing="xs">
                    {${g(u,a.key)}?.map((item: any, index: number) => (
                        <NumberInput mt="sm" key={index} label=${b({resource:e,field:a,i18n:m})} {...getInputProps(\`${t}\`)} />
                    ))}
                </Group>
                `}return I`
                <NumberInput mt="sm" ${ye(a.key)?"disabled":""} label=${b({resource:e,field:a,i18n:m})} {...getInputProps("${H(a.key,void 0,a.accessor)}")}/>
            `}},"numberFields"),M=r(a=>{if(a)return I`
                ${a}
        `},"wrapper"),c=o.map(a=>{switch(a==null?void 0:a.type){case"url":case"text":case"email":return M(T(a));case"number":return M(K(a));case"richtext":return M(C(a));case"image":return M(N(a));case"date":return M(k(a));case"boolean":return M(f(a));case"relation":return M(x(a));default:return}});ie(l);let S=m&&"const translate = useTranslate();";return I`
    ${se(l)}
    
    export const ${d} = () => {
        ${S}
        const { getInputProps, saveButtonProps, setFieldValue, refineCore: { query } } = useForm({
            initialValues: ${JSON.stringify(h)},
            ${p?`refineCoreProps: {
                        resource: "${e.name}",
                        id: ${ke(s)},
                        action: "edit",
                        ${B((e==null?void 0:e.identifier)??(e==null?void 0:e.name),i,["update","getOne"])}  
                    }`:B((e==null?void 0:e.identifier)??(e==null?void 0:e.name),i,["update","getOne"])?`refineCoreProps: { ${B((e==null?void 0:e.identifier)??(e==null?void 0:e.name),i,["update","getOne"])} }
                      `:""}
        });
    
        const ${u} = query?.data?.data;
    
        ${v}

        return (
            <Edit saveButtonProps={saveButtonProps}>
                ${c.join("")}
            </Edit>
        );
    };
    `},"renderer"),We=me({type:"edit",additionalScope:[["@refinedev/mantine","RefineMantine",{Edit:or,useForm:ar,useSelect:sr}],["@mantine/core","MantineCore",{MultiSelect:ir,Select:cr,TextInput:pr,Group:ur,Checkbox:mr,Textarea:lr,NumberInput:dr}]],codeViewerComponent:ue,loadingComponent:de,errorComponent:le,renderer:Rt});var Ki=r(({action:e,id:o,...i})=>{let{action:p,id:s}=fr();switch(e??p){case"show":return Ae.createElement(Qe,{...i,id:o??s});case"create":return Ae.createElement(Ue,{...i,id:o??s});case"edit":return Ae.createElement(We,{...i,id:o??s});default:return Ae.createElement(_e,{...i,id:o??s})}},"MantineInferencer");export{Ue as MantineCreateInferencer,Pt as MantineCreateRenderer,We as MantineEditInferencer,Rt as MantineEditRenderer,Ki as MantineInferencer,_e as MantineListInferencer,At as MantineListRenderer,Qe as MantineShowInferencer,St as MantineShowRenderer};
//# sourceMappingURL=mantine.mjs.map