"use client"
var Rr=Object.defineProperty;var o=(e,n)=>Rr(e,"name",{value:n,configurable:!0});import Te from"react";import{useResource as sn}from"@refinedev/core";import{Show as xt,TagField as vt,TextFieldComponent as $t,EmailField as It,UrlField as bt,BooleanField as kt,DateField as Ct,MarkdownField as Ft,NumberField as wt}from"@refinedev/mui";import At from"@mui/material/Typography";import Tt from"@mui/material/Stack";import ae,{useContext as lt}from"react";import{useResource as je,TranslationContext as mt}from"@refinedev/core";var Mr=/(image|photo|avatar|url|logo|cover|thumbnail|icon)/i,Er=/^(\w|\d|_|-|)*?(name|label){1}$/i,Se=o((e,n)=>{let c=["name","label","title","count","content","username","nickname","login","firstName","lastName","url"],i=Object.keys(n).filter(f=>Er.test(f));c.push(...i),Mr.test(e)&&c.unshift("url");let u=c.find(f=>f in n&&!!n[f]);if(u)return u==="firstName"&&"lastName"in n?["firstName","lastName"]:u},"getFieldableKeys");import{pickNotDeprecated as Br}from"@refinedev/core";function Pe(e,n,c){if(n)return n;let p=c==null?void 0:c.find(u=>u.name===e),i=Br(p==null?void 0:p.meta,p==null?void 0:p.options);return i!=null&&i.dataProviderName?i.dataProviderName:"default"}o(Pe,"pickDataProvider");var be=o(e=>{var n;return(n=e==null?void 0:e.options)==null?void 0:n.dataProviderName},"dataProviderFromResource");var Le=o(e=>{let n=[...e].filter(Boolean).sort((c,p)=>(p.priority||0)-(c.priority||0))[0];return n||null},"pickInferredField");import Vr from"prettier/standalone";import Dr from"prettier/parser-typescript";var Ne=o(e=>{try{return Vr.format(e,{parser:"typescript",plugins:[Dr],arrowParens:"always",trailingComma:"all",semi:!0,tabWidth:4,printWidth:80})}catch(n){return console.warn("Formatting error in inferencer",n),e}},"prettierFormat");var Qe=o(e=>e.replace(/ {2,}/g," ").replace(/\n{2,}/g,`
`),"prettySpaces");var Re=/(-id|-ids|_id|_ids|Id|Ids|ID|IDs)(\[\])?$/,Ue=o((e,n)=>{let c=Re.test(e),p=typeof n=="string"||typeof n=="number",i=Array.isArray(n)&&n.every(u=>typeof u=="string"||typeof u=="number");return c&&p||c&&i?{key:e,relation:!0,multiple:i,type:"relation",priority:1}:!1},"relationInfer");var _=o(e=>e.replace(Re,""),"removeRelationSuffix");var $e=o(e=>_(e).replace(/([a-z])([A-Z])/g,"$1 $2").replace(/_/g," ").replace(/-/g," ").split(" ").map(f=>f.charAt(0).toUpperCase()+f.slice(1)).join(" "),"prettyString");var I=o(e=>{let{resource:n,field:c,i18n:p}=e;if(p){let u=`translate("${n.name}.fields.${c.key}")`;return e.noBraces?`${u}`:`{${u}}`}let i=$e(c.key);return e.noQuotes?i:`"${i}"`},"translatePrettyString");import Ze from"pluralize";var pe=o((e="")=>Ze.isSingular(e)?e:Ze.singular(e),"toSingular");import Ye from"pluralize";var ue=o((e="")=>Ye.isPlural(e)?e:Ye.plural(e),"toPlural");var Me=o(e=>e.replace(/export\s+(const|let|var|type|interface|function|class)\s+(\w+)\s*(=|:)\s*/g,"$1 $2 = ").split(`
`).filter(i=>!i.trim().startsWith("export default")).join(`
`),"replaceExports");var Je=/import(?:(?:(?:[ \n\t]+([^ *\n\t\{\},]+)[ \n\t]*(?:,|[ \n\t]+))?([ \n\t]*\{(?:[ \n\t]*[^ \n\t"'\{\}]+[ \n\t]*,?)+\})?[ \n\t]*)|[ \n\t]*\*[ \n\t]*as[ \n\t]+([^ \n\t\{\}]+)[ \n\t]+)from[ \n\t]*(?:['"])([^'"\n]+)(?:['"])(?:;?)/g,Or=/import[ \n\t](?:['"])([^'"\n]+)(?:['"])(?:;?)/g,qr=/((?:\w|\s|_)*)( as )((?:\w|\s|_)*)( |,)?/g,Ee=o((e,n={})=>{let c=e.matchAll(Je),p=new Set;for(let i of c){let[,u,f,l,m]=i;if(m in n){let v=n[m];if(m==="react")continue;u&&p.add(`const { default: ${u} } = ${v};`),f&&p.add(`const${f.replace(qr,"$1: $3$4")} = ${v};`),l&&p.add(`const ${l} = ${v};`)}}return Qe(`
    ${Array.from(p).join(`
`)}
    ${e.replace(Je,"").replace(Or,"")}
    `)},"replaceImports");import we from"pluralize";var Be=o((e,n)=>e?n.find(p=>{let i=_(e.key);return p.name===i||p.name===(we.isPlural(i)?i:we.plural(i))||p.name===(we.isSingular(i)?i:we.singular(i))}):void 0,"resourceFromInferred");import Wr from"pluralize";var ne=o((e,n,c="Inferred")=>{let p=e.replace(/[^a-zA-Z0-9]/g," "),i=Wr.singular(p),f=$e(i).replace(/ /g,"")||c,l=n.charAt(0).toUpperCase()+n.slice(1);return/^[a-zA-Z]/.test(f)?`${f}${l}`:`${l}${f}`},"componentName");var Hr=o(e=>e?Array.isArray(e)?e.join(""):typeof e=="string"?e:typeof e=="object"||typeof e=="function"?e.toString():typeof e=="number"?String(e):typeof e=="boolean"&&e?"true":e:"","handleExpression"),b=o((e,...n)=>e.reduce((p,i,u)=>`${p}${i}${Hr(n[u])}`,"").trim(),"jsx");var Ve=o((e,n)=>`
    ${e??""}
    
    render(typeof ${n} !== "undefined" ? <${n} /> : <></>);
    `,"prepareLiveCode");var De=o(e=>e==null?void 0:e.replace(/(\/\* hidden-start \*\/)(.|\n)*?(\/\* hidden-end \*\/)/g,""),"removeHiddenCode");var jr=/^[a-zA-Z_$][a-zA-Z_$0-9]*$/,Oe=o(e=>jr.test(e),"shouldDotAccess");function qe(e,n,c){let p=`${e}`;return n&&(p+="?.",Oe(n)?p+=n:p+=`['${n}']`),c&&(p+="?.",Oe(c)?p+=c:p+=`['${c}']`),p}o(qe,"accessorSingle");function Gr(e,n,c){return(c??[]).map(i=>qe(e,n,i))}o(Gr,"accessorMultiple");var d=o((e,n,c,p=' + " " + ')=>Array.isArray(c)?p?Gr(e,n,c).join(p):qe(e,n,c[0]):qe(e,n,c),"accessor"),J=o((e,n,c)=>{let p=e;return n&&(p+=`.${n}`),c&&(Array.isArray(c)?p+=`.${c[0]}`:p+=`.${c}`),p},"dotAccessor");var le=o(e=>{let n=e.reduce((p,[i,u,f])=>(p[u]||(p[u]=[]),p[u].includes(i)||(f?p[u].push([i,!0]):p[u].push(i)),p),{});return Object.entries(n).map(([p,i])=>{let u=i.find(v=>Array.isArray(v)&&v[1]),f=i.filter(v=>typeof v=="string"),l=u?`${u[0]}`:"",m=f.length?`{ ${f.join(", ")} }`:"";return`import ${l}${l&&m?", ":""}${m} from "${p}";`})},"printImports");var _r=/^id$/i,fe=o(e=>_r.test(e),"isIDKey");var me=o(e=>{},"noOp");var q=o((e,n="")=>{if(Number.isInteger(Number(e)))return n.charAt(0).toLowerCase()+n.slice(1)+e;let p=e.replace(/^\d+/,"").replace(/[^a-zA-Z0-9]/g,"-"),i=$e(p).replace(/ /g,"");return`${i.charAt(0).toLowerCase()+i.slice(1)}${n.charAt(0).toUpperCase()+n.slice(1)}`},"getVariableName");var W=o((e,n,c)=>{var A,k,g,C;if(!(n&&c&&e)||!Object.keys(n).length)return"";let p=e?n[e]:{},i=[],u=c.find(N=>p[N]),f=p==null?void 0:p[u||"default"];if(!f)return"";let{gqlQuery:l,gqlMutation:m,...v}=f;Object.keys(v).forEach(N=>{i.push(`${N}: ${JSON.stringify(v[N])}`)}),l&&i.push(`gqlQuery: gql\`${(k=(A=l==null?void 0:l.loc)==null?void 0:A.source)==null?void 0:k.body}\``),m&&i.push(`gqlMutation: gql\`${(C=(g=m==null?void 0:m.loc)==null?void 0:g.source)==null?void 0:C.body}\``);let $=i.join(",");return $.length?`meta:{${$}}`:""},"getMetaProps"),ie=o((e,n,c)=>{if(n&&c&&e){let p=e?n[e]:{},u=[...c,"default"].reduce((f,l)=>f??(p==null?void 0:p[l]),void 0);if(u)return u}},"pickMeta");var ke=o(e=>e===void 0?e:typeof e=="string"?`"${e}"`:e,"idQuoteWrapper");var ce=o((e,n)=>{for(let c in e)if(n.includes(c)||typeof e[c]=="object"&&e[c]!==null&&ce(e[c],n))return!0;return!1},"deepHasKey");var Xe=o(e=>{let n=o((c,p,i,u=n,f)=>{let l=e.map(v=>v(c,p,i,u,f));return Le(l)},"fieldInferencer");return n},"composeInferencers");var er=o(e=>o((c,p,i,u,f,l)=>e.reduce((m,v)=>v(m,p,i,u,f,l),c),"fieldTransformer"),"composeTransformers");var rr=o((e,n,c,p,i)=>{let u=Array.isArray(n),f=Array.isArray(n)&&n.every(l=>typeof l=="string"||typeof l=="number");if(u){if(!f){let m=p(e,n[0],c,p,i);return m?{...m,key:e,multiple:!0,priority:1}:!1}let l=p(e,n[0],c,p,i)||{type:"string"};return{key:e,multiple:!0,priority:1,type:l==null?void 0:l.type}}return!1},"arrayInfer");var tr=o((e,n)=>typeof n=="boolean"?{key:e,type:"boolean"}:!1,"booleanInfer");import nr from"dayjs";var zr=/(_at|_on|At|On|AT|ON)(\[\])?$/,Kr=["/",":","-","."],or=o((e,n)=>{let c=zr.test(e)&&nr(n).isValid(),p=typeof n=="string"&&nr(n).isValid();return typeof n=="string"&&Kr.some(u=>n.includes(u))&&(c||p)?{key:e,type:"date",priority:1}:!1},"dateInfer");var Qr=/^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,ar=o((e,n)=>typeof n=="string"&&Qr.test(n)?{key:e,type:"email",priority:1}:!1,"emailInfer");var Ur=/\.(gif|jpe?g|tiff?|png|webp|bmp|svg)$/i,sr=o((e,n)=>typeof n=="string"&&Ur.test(n)?{key:e,type:"image",priority:2}:!1,"imageInfer");var ir=o((e,n)=>typeof n>"u"||n===null?null:!1,"nullishInfer");var cr=o((e,n)=>{let c=typeof n=="string"&&n.length>0,p=!Number.isNaN(Number(n));return c&&p||typeof n=="number"?{key:e,type:"number"}:!1},"numberInfer");var pr=/id$/i,ur=o((e,n,c,p,i)=>{let u=n!==null,f=!Array.isArray(n);if(u&&f&&typeof n=="object"){let m=Object.keys(n).length===1&&pr.test(Object.keys(n)[0]),v=Object.keys(n).some(k=>pr.test(k));if(m)return{key:e,type:"relation",relation:!0,accessor:"id",priority:1};let $=Se(e,n);if(($?$.length>0:!1)&&$){let k=$&&Array.isArray($)?$[0]:$,g=p(k,n[k],n,p,i);if(g){let C=Array.isArray($)?$.map(N=>g.accessor?`${N}.${Array.isArray(g.accessor)?g.accessor[0]:g.accessor}`:N):g.accessor?Array.isArray(g.accessor)?`${$}.${g.accessor[0]}`:`${$}.${g.accessor}`:$;return(g==null?void 0:g.type)==="text"&&(i==="create"||i==="edit")&&v?{key:e,type:"relation",relation:!0,accessor:"id",priority:1}:{...g,fieldable:!0,key:e,accessor:C,priority:1}}}return{key:e,fieldable:!1,type:"object",priority:1}}return!1},"objectInfer");var lr=o((e,n)=>typeof n=="string"&&n.length>100?{key:e,type:"richtext",priority:1}:!1,"richtextInfer");var mr=o((e,n)=>typeof n=="string"?{key:e,type:"text"}:!1,"textInfer");var Zr=/^(https?|ftp):\/\/(-\.)?([^\s/?\.#-]+\.?)+(\/[^\s]*)?$/i,dr=o((e,n)=>typeof n=="string"&&Zr.test(n)?{key:e,type:"url",priority:1}:!1,"urlInfer");var fr=[rr,tr,or,ar,sr,ir,cr,ur,Ue,lr,mr,dr];var yr=o((e,n,c,p)=>e.map(u=>{if(!u.relation&&(u.type==="text"||u.type==="richtext"||u.type==="number")&&!u.canRelation){let f=/^[a-z0-9-]+$/,l=o(k=>f.test(`${k}`),"isValidUUID"),m=u.key.toLowerCase()!=="id";return!(!u.accessor||typeof u.accessor=="string")||!m?u:(u.multiple?p[u.key]:[p[u.key]]).every(k=>l(u.accessor?k[u.accessor]:k))?{...u,canRelation:!0}:u}return u}),"basicToRelation");var Yr=/(image|photo|avatar|cover|thumbnail|icon)/i,gr=o(e=>e.map(c=>c.type==="url"&&Yr.test(c.key)?{...c,type:"image"}:c),"imageByKey");var hr=o((e,n)=>e.map(p=>{let i=Be(p,n);return i?{...p,relation:!0,type:"relation",resource:i}:p}),"relationByResource");var xr=o((e,n,c,p,i,u)=>e.map(l=>{if(l.relation&&l.type==="relation"&&!l.resource){let m=l.accessor?p[l.key][l.accessor]:p[l.key],v=i(l.key,m,p,i,u);if(v&&v.type!=="relation")return{...l,fieldable:!0,relation:!1,type:v.type,canRelation:!0}}return l}),"relationToFieldable");var vr=[gr,hr,xr,yr];import oe from"react";import*as Jr from"@refinedev/core";import*as Xr from"graphql-tag";import{LivePreview as et,LiveProvider as rt}from"@aliemir/react-live";var $r=[["react","React",oe],["@refinedev/core","RefineCore",Jr],["graphql-tag","GraphqlTag",Xr]],We=oe.createContext({}),He=o(({fetchError:e,code:n,additionalScope:c,errorComponent:p})=>{let i=(n&&Me(Ee(n,[...$r,...c??[]].reduce((l,[m,v,$,A])=>A?l:{...l,[m]:v},{}))))??"",u=oe.useMemo(()=>({React:oe,...oe,...[...$r,...c??[]].reduce((l,[m,v,$])=>({...l,[v]:$}),{})}),[c]),f=oe.useMemo(()=>o(()=>{let{error:m}=oe.useContext(We);return p?oe.createElement(p,{error:m?`<p>An error occured while rendering the generated component.You can check the generated code from the below "Show Code" button and fix the error manually.</p>
                                    <p>If you think this is a bug, please report the issue at <a target="_blank" rel="noopener noreferrer" href="https://github.com/refinedev/refine/issues">https://github.com/refinedev/refine/issues</a></p>
                                    <p>Exception:</p>
                                    <code>${m}</code>`:typeof e=="string"?e:e?`<p>Something went wrong while fetching the resource data.</p>
                                    <p>To learn more about the Inferencer, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`:void 0}):null},"LiveErrorComponent"),[p,e]);return oe.createElement(rt,{Context:We,code:i,scope:u,noInline:!0},!e&&oe.createElement(et,{Context:We}),oe.createElement(f,null))},"LiveComponent");import y from"react";import tt,{defaultProps as nt}from"prism-react-renderer";import ot from "prism-react-renderer/themes/vsDark/index.js";var ye=o(({code:e,loading:n})=>{let c=y.useMemo(()=>Ne(e??""),[e]),[p,i]=y.useState(!1),[u,f]=y.useState(!1),[l,m]=y.useState(!1),[v,$]=y.useState(!1),[A,k]=y.useState(!1);return y.useEffect(()=>{if(!n){let g=setTimeout(()=>{i(!0)},300);return()=>{clearTimeout(g)}}return()=>{}},[n]),y.useEffect(()=>{if(typeof window<"u"){let g=window.matchMedia("(max-width: 449px)");g.matches?m(!1):m(!0);let C=o(()=>{g.matches?m(!1):m(!0)},"handleResize");return window.addEventListener("resize",C),()=>{window.removeEventListener("resize",C)}}return()=>{}},[]),y.useEffect(()=>{if(typeof window<"u"){let g=window.matchMedia("(max-width: 1280px)");g.matches?$(!0):$(!1);let C=o(()=>{g.matches?$(!0):$(!1)},"handleResize");return window.addEventListener("resize",C),()=>{window.removeEventListener("resize",C)}}return()=>{}},[]),c&&!n?y.createElement(y.Fragment,null,l&&y.createElement("div",{className:"refine-inferencer--code-viewer",style:{position:"sticky",bottom:"24px",paddingTop:"24px",left:0,right:0,width:"100%",zIndex:10,display:"flex",justifyContent:"center",transition:"all 0.2s ease",opacity:p&&!u?1:0,transform:p&&!u?"translateY(0)":"translateY(100px)"}},y.createElement("div",{style:{width:"calc(100% - calc(64px * 2))",maxWidth:"1080px",padding:"20px",backgroundColor:"#1A1A1A",boxShadow:"0px 4px 16px -4px rgba(0, 0, 0, 0.5), 0px 8px 32px -8px rgba(0, 0, 0, 0.35)",borderRadius:"16px",display:"flex",alignItems:"center",justifyContent:"space-between",flexDirection:v?"column":"row",gap:"12px"}},y.createElement("div",{style:{display:"flex",alignItems:"flex-start",gap:"8px"}},y.createElement("div",null,y.createElement(st,null)),y.createElement("div",{style:{fontSize:"14px",lineHeight:"20px",color:"#ffffff"}},y.createElement("p",{style:{padding:0,margin:0}},"Most of the page code is auto-generated by the"," ",y.createElement("span",{style:{textDecoration:"underline"}},"Inferencer")," ","feature, based on your backend data structure."),y.createElement("p",{style:{padding:0,margin:0}},"While this is an excellent way to experiment with refine,"," ",y.createElement("span",{style:{fontWeight:600}},"it's not intended to be used on production.")))),y.createElement("div",null,y.createElement("button",{onPointerEnter:()=>k(!0),onPointerLeave:()=>k(!1),onClick:()=>f(!0),style:{appearance:"none",border:"none",padding:"10px 16px",borderRadius:"4px",display:"flex",alignItems:"center",justifyContent:"center",background:"#0080FF",color:"#ffffff",fontSize:"14px",lineHeight:"20px",fontWeight:600,gap:"8px",cursor:"pointer",transition:"all 0.2s ease",transform:A?"scale(1.025)":void 0,filter:A?"brightness(1.1)":void 0}},y.createElement(br,{style:{flexShrink:0}}),y.createElement("span",null,"Show the auto-generated code"))))),y.createElement(at,{visible:u,onClose:()=>f(!1),code:c})):null},"SharedCodeViewer"),at=o(({visible:e,onClose:n,code:c=""})=>{let p=y.useRef(null),[i,u]=y.useState(!1),[f,l]=y.useState(!1),[m,v]=y.useState(!1),[$,A]=y.useState(!1);y.useEffect(()=>{if(typeof document<"u"){let a=o(x=>{p.current&&!p.current.contains(x.target)&&n()},"onOutsideClick");return document.addEventListener("pointerdown",a),()=>{document.removeEventListener("pointerdown",a)}}return()=>{}},[n]);let k=o(()=>{typeof navigator<"u"&&(navigator.clipboard.writeText(c),u(!0),setTimeout(()=>{u(!1)},1e3))},"onCopy"),g=y.createElement("div",{style:{display:"flex",justifyContent:"space-between",alignItems:"center"}},y.createElement("div",{style:{fontWeight:700,fontSize:"20px",lineHeight:"32px",color:"#0D0D0D"}},"Auto-generated code by Inferencer"),y.createElement("button",{onClick:n,onPointerEnter:()=>v(!0),onPointerLeave:()=>v(!1),style:{flexShrink:0,appearance:"none",border:"none",background:"none",padding:0,margin:0,outline:"none",borderRadius:"50px",width:"32px",height:"32px",cursor:"pointer",transition:"all 0.15s ease",transform:m?"scale(1.05)":void 0,filter:m?"brightness(0.8)":void 0}},y.createElement(it,null))),C=y.createElement("div",{style:{fontSize:"13px",borderRadius:"8px",flex:"1",overflow:"scroll",background:"#1E1E1E"}},y.createElement(tt,{...nt,theme:ot,code:c,language:"tsx"},({className:a,style:x,tokens:s,getLineProps:S,getTokenProps:F})=>y.createElement("pre",{className:a,style:{...x,padding:"14px 14px 14px 14px",margin:"0",width:"100%",boxSizing:"border-box"}},s.map((P,T)=>y.createElement("div",{key:T,...S({line:P,key:T})},P.map((t,h)=>y.createElement("span",{key:h,...F({token:t,key:h})})))))));return y.createElement("div",{className:"refine-inferencer--code-viewer-modal",style:{position:"fixed",top:0,left:0,right:0,bottom:0,zIndex:9999,backgroundColor:"rgba(0, 0, 0, 0.5)",transition:"all 0.2s ease",opacity:e?1:0,pointerEvents:e?"all":"none",display:"flex",justifyContent:"center",alignItems:"center"}},y.createElement("div",{ref:p,style:{transform:e?"scale(1) translateY(0px)":"scale(0) translateY(-200px)",transition:"all 0.25s cubic-bezier(.35,1.29,.81,1.08)",transitionDelay:"0.25",width:"calc(100% - calc(32px * 2))",height:"calc(100% - calc(32px * 2))",backgroundColor:"#fff",maxWidth:"640px",maxHeight:"720px",borderRadius:"8px",padding:"16px"}},y.createElement("div",{style:{display:"flex",flexDirection:"column",height:"100%",width:"100%",gap:"16px"}},g,C,y.createElement("div",{style:{display:"flex",justifyContent:"flex-start",alignItems:"flex-end",gap:"16px"}},y.createElement("button",{onPointerEnter:()=>l(!0),onPointerLeave:()=>l(!1),onClick:k,style:{appearance:"none",height:"40px",border:"none",padding:"10px 16px",borderRadius:"4px",display:"flex",alignItems:"center",justifyContent:"center",background:"#0080FF",color:"#ffffff",fontSize:"14px",lineHeight:"20px",fontWeight:600,gap:"8px",cursor:"pointer",position:"relative",overflow:"hidden",transition:"filter 0.2s ease",transform:f?"scale(1.025)":"scale(1)",filter:f?"brightness(1.1)":void 0}},y.createElement(Ir,{style:{flexShrink:0,marginTop:"-2px",marginBottom:"-2px"}}),y.createElement("span",null,"Copy Generated Code"),y.createElement("div",{style:{position:"absolute",width:"100%",height:"100%",top:0,left:0,display:"flex",alignItems:"center",justifyContent:"center",background:"#0080FF",transition:"all 0.2s ease",transform:i?"translateY(0)":"translateY(40px)"}},y.createElement(Ir,{style:{flexShrink:0,marginTop:"-2px",marginBottom:"-2px"}}),y.createElement("span",null,"Copied!"))),y.createElement("a",{onPointerEnter:()=>A(!0),onPointerLeave:()=>A(!1),href:"https://refine.dev/docs/packages/documentation/inferencer",target:"_blank",rel:"noreferrer",style:{appearance:"none",textDecoration:"none",border:"none",padding:"10px 16px",borderRadius:"4px",display:"flex",alignItems:"center",justifyContent:"center",background:"rgba(0, 128, 255, 0.1)",color:"#0080FF",fontSize:"14px",lineHeight:"20px",fontWeight:600,gap:"8px",cursor:"pointer",transition:"all 0.2s ease",transform:$?"scale(1.025)":void 0,filter:$?"brightness(1.1)":void 0}},y.createElement(br,{style:{flexShrink:0}}),y.createElement("span",null,"Learn more about inferencer"))))))},"CodeModal"),st=o(e=>y.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:20,height:20,fill:"none",...e},y.createElement("path",{fill:"#0080FF",fillRule:"evenodd",d:"M10 20C4.477 20 0 15.523 0 10S4.477 0 10 0s10 4.477 10 10-4.477 10-10 10Zm0-15a1.25 1.25 0 1 0 0 2.5A1.25 1.25 0 0 0 10 5Zm0 10c.69 0 1.25-.56 1.25-1.25V10a1.25 1.25 0 1 0-2.5 0v3.75c0 .69.56 1.25 1.25 1.25Z",clipRule:"evenodd"})),"InfoIcon"),br=o(e=>y.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:16,height:16,fill:"none",...e},y.createElement("path",{fill:"currentColor",d:"M5 2a1 1 0 0 1 0 2H4v8h8v-1a1 1 0 1 1 2 0v1a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h1Z"}),y.createElement("path",{fill:"currentColor",d:"M9 2a1 1 0 0 0 0 2h1.586L6.293 8.293a1 1 0 0 0 1.414 1.414L12 5.414V7a1 1 0 1 0 2 0V3a1 1 0 0 0-1-1H9Z"})),"OpenIcon"),it=o(e=>y.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:32,height:32,fill:"none",...e},y.createElement("path",{fill:"#A6A6A6",fillRule:"evenodd",d:"M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16Zm-2.586-21.414a2 2 0 1 0-2.828 2.828L13.172 16l-2.586 2.586a2 2 0 1 0 2.828 2.828L16 18.828l2.586 2.586a2 2 0 1 0 2.828-2.828L18.828 16l2.586-2.586a2 2 0 1 0-2.828-2.828L16 13.172l-2.586-2.586Z",clipRule:"evenodd"})),"CloseIcon"),Ir=o(e=>y.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:20,height:20,viewBox:"0 0 24 24",fill:"none",...e},y.createElement("path",{fill:"currentColor",fillRule:"evenodd",d:"M8 5a3 3 0 0 0 3 3h2a3 3 0 0 0 3-3h1a2 2 0 0 1 2 2v11a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2h1Zm0 7a1 1 0 0 1 1-1h6a1 1 0 1 1 0 2H9a1 1 0 0 1-1-1Zm1 3a1 1 0 1 0 0 2h4a1 1 0 1 0 0-2H9Z",clipRule:"evenodd"}),y.createElement("path",{fill:"currentColor",d:"M13 4a1 1 0 1 1 0 2h-2a1 1 0 1 1 0-2h2Z"})),"ClipboardIcon");import ve from"react";import{useDataProvider as ct,useResource as pt}from"@refinedev/core";var kr=o((e,n,c,p)=>{let{resource:i,id:u,resources:f}=pt(n),l=c??u,m=ct(),[v,$]=ve.useState(void 0),[A,k]=ve.useState(void 0),[g,C]=ve.useState(void 0),[N,a]=ve.useState(!0),[x,s]=ve.useState(!1),S=ve.useCallback(async F=>{var t;let P=be(i)??Pe(i==null?void 0:i.name,void 0,f),T=m(P);s(!0),$(void 0);try{if((e==="list"||e==="create")&&i){let h=await T.getList({resource:i==null?void 0:i.name,meta:ie((i==null?void 0:i.identifier)??(i==null?void 0:i.name),p,["getList"])}),w=(t=h.data)==null?void 0:t[0];w||$(`<p>No records/data found for resource "${i==null?void 0:i.name}".</p>
                            <p>Please check your data provider and resource.</p>
                            <p>For more info, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`),k(w),C(h.data),setTimeout(()=>{s(!1)},500)}if((e==="edit"||e==="show")&&F&&i){let w=(await T.getOne({resource:i==null?void 0:i.name,id:F,meta:ie((i==null?void 0:i.identifier)??(i==null?void 0:i.name),p,["getOne"])})).data;w||$(`<p>No records/data found for resource "${i==null?void 0:i.name}".</p>
                            <p>Please check your data provider and resource.</p>
                            <p>For more info, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`),k(w),setTimeout(()=>{s(!1)},500)}}catch(h){console.warn("An error occured while fetching the resource data. Please check the error message below:",h),$(`<p>Something went wrong while fetching the resource data.</p>
                    <p>Please check your data provider and API for resource "${i==null?void 0:i.name}".</p>
                    <p>For more info, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`),setTimeout(()=>{s(!1)},500)}},[e,m,i,f]);return ve.useEffect(()=>{a(!1),!x&&!A&&S(l)},[S,l]),{data:A,datas:g,loading:x,initial:N,error:v}},"useInferFetch");import Ce from"react";import{useDataProvider as ut}from"@refinedev/core";import Cr from"lodash-es/get.js";var Fr=o(({record:e,fields:n,infer:c,meta:p})=>{let i=ut(),[u,f]=Ce.useState([]),[l,m]=Ce.useState(!0),[v,$]=Ce.useState(!1),A=Ce.useCallback(async k=>{console.groupCollapsed("@refinedev/inferencer is trying to detect relations");let g=[];$(!0);try{let C=k.map(async a=>{var x,s,S,F;if(a&&(a.relation||a.canRelation)&&e){if(a.relationInfer)return a;let P=be(a.resource),T=i(P),t=a.multiple,h=Array.isArray(a.accessor)?void 0:a.multiple?e[a.key].map(w=>a.accessor?Cr(w,a.accessor):w)[0]:a.accessor?Cr(e[a.key],a.accessor):e[a.key];if(h&&a.resource)try{let w={};if(t&&T.getMany){let{data:j}=await T.getMany({resource:a.resource.name,ids:[h],meta:ie(((x=a.resource)==null?void 0:x.identifier)??((s=a.resource)==null?void 0:s.name),p,["getMany"])});w=j==null?void 0:j[0]}else{let{data:j}=await T.getOne({resource:a.resource.name,id:h,meta:ie(((S=a.resource)==null?void 0:S.identifier)??((F=a.resource)==null?void 0:F.name),p,t?["getMany","getOne"]:["getOne"])});w=j}g.push({status:"success",resource:a.resource.name,field:a.key});let H=c("__",w,{},c);return{...a,relationInfer:H}}catch{return g.push({status:"error",resource:a.resource.name,field:a.key}),{...a,relationInfer:null}}if(h){let w,H;try{let Q={};if(t&&T.getMany){let{data:X}=await T.getMany({resource:ue(_(a.key)),ids:[h],meta:ie(ue(_(a.key)),p,["getMany"])});Q=X==null?void 0:X[0]}else{let{data:X}=await T.getOne({resource:ue(_(a.key)),id:h,meta:ie(ue(_(a.key)),p,t?["getMany","getOne"]:["getOne"])});Q=X}g.push({status:"success",resource:ue(_(a.key)),field:a.key}),w=Q,H=!0}catch{g.push({status:"error",resource:ue(_(a.key)),field:a.key});let X={};try{if(t&&T.getMany){let{data:ee}=await T.getMany({resource:pe(_(a.key)),meta:ie(pe(_(a.key)),p,["getMany"]),ids:[h]});X=ee==null?void 0:ee[0]}else{let{data:ee}=await T.getOne({resource:pe(_(a.key)),meta:ie(pe(_(a.key)),p,t?["getMany","getOne"]:["getOne"]),id:h});X=ee}g.push({status:"success",resource:pe(_(a.key)),field:a.key}),w=X,H=!1}catch{return g.push({status:"error",resource:pe(_(a.key)),field:a.key}),{...a,relationInfer:null}}}let j=c("__",w,{},c),z=_(a.key);return{...a,relation:!0,type:"relation",resource:{name:H?ue(z):pe(z)},fieldable:!1,canRelation:void 0,relationInfer:j}}return{...a,relationInfer:null}}return a}),N=await Promise.all(C);f(N.filter(a=>a)),setTimeout(()=>{$(!1)},500)}catch{setTimeout(()=>{$(!1)},500)}setTimeout(()=>{console.log(`Tried to detect relations with ${g.length} attempts and succeeded with ${g.filter(C=>C.status==="success").length} attempts.`),console.groupEnd(),console.info("@refinedev/inferencer may send multiple requests to your API for nonexistent resources when trying to detect relations. To learn more about how the inferencer works, visit https://s.refine.dev/how-inferencer-works")},500)},[i,e]);return Ce.useEffect(()=>{m(!1),!v&&n&&n.length>0&&u.length===0&&A(n)},[A,v,n,A]),{fields:u,loading:v,initial:l}},"useRelationFetch");var ge=o(({type:e,additionalScope:n=[],customElements:c=[],fieldTransformers:p=[],renderer:i,loadingComponent:u,errorComponent:f,codeViewerComponent:l})=>{let m=Xe([...fr,...c]),v=er([...vr,...p]),$=o(({resourceName:k,fieldTransformer:g,hideCodeViewerInProduction:C,meta:N,id:a})=>{var L,U;let{resource:x,resources:s}=je(k),{i18nProvider:S}=lt(mt),{resource:F}=je(),{data:P,datas:T,loading:t,initial:h,error:w}=kr(e,k??(x==null?void 0:x.name),a,N),H=o((R,M,Z)=>{let K=m(R,M,Z,m,e);if(K&&x){let Y=v([K],s,x,Z,m,e),B=g?Y.flatMap(E=>{let G=g(E);return G?[G]:[]}):Y;return B==null?void 0:B[0]}},"inferSingleField"),j=o(R=>Object.keys(R).map(Z=>{let K=R[Z];return H(Z,K,R)}).filter(Boolean),"inferSingleRecord"),z=o(R=>{let M=R.map(E=>j(E)),Z=R.flatMap(E=>Object.keys(E)).filter((E,G,se)=>se.indexOf(E)===G),K={},Y=Z.map(E=>{let G=M.map(re=>re.find(te=>te.key===E));return G.reduce((re,te,Fe)=>{if(!te)return re;let Ie=G.filter(de=>(de==null?void 0:de.key)===te.key&&(de==null?void 0:de.type)===te.type).length;return Ie>re.count?(K[E]=R[Fe][E],{count:Ie,field:te}):re},{count:0,field:void 0}).field});return{commonRecord:K,inferredFields:Y}},"inferMultipleRecords"),[Q,X]=ae.useMemo(()=>{if(T&&(e==="list"||e==="create")){let R=z(T);return[R.inferredFields,R.commonRecord]}if(P){let R=Object.keys(P).map(M=>{let Z=P[M];return m(M,Z,P,m,e)}).filter(Boolean);if(x){let M=v(R,s,x,P,m,e);return[g?M.flatMap(K=>{let Y=g(K);return Y?[Y]:[]}):M,P]}return[[],P]}return[[],void 0]},[P,T,s,x,g]),{fields:ee,loading:r}=Fr({record:X,fields:Q,infer:m,meta:N}),V=ae.useMemo(()=>{let R=[];return ee.forEach((M,Z,K)=>{if(M.resource){if(R.findIndex(B=>{var E,G;return((E=B.resource)==null?void 0:E.name)===((G=M.resource)==null?void 0:G.name)})>-1)return;let Y=K.filter((B,E)=>{var G,se,re,te,Fe,Ie;if(E!==Z){let de=M.resource,Lr=B.resource,Nr=((G=B.resource)==null?void 0:G.identifier)||((se=M.resource)==null?void 0:se.identifier)?((re=B.resource)==null?void 0:re.identifier)===((te=M.resource)==null?void 0:te.identifier):((Fe=B.resource)==null?void 0:Fe.name)===((Ie=M.resource)==null?void 0:Ie.name);return de&&Lr&&Nr}return!1});if(Y.length>0)if(e==="create"||e==="edit"){let B;[M,...Y].find(E=>{E.fieldable!==!0&&B===void 0&&(B=E)}),B?R.push(B):R.push(M)}else{let B;[M,...Y].find(E=>{E.fieldable!==!1&&B===void 0&&(B=E)}),B?R.push(B):R.push(M)}else R.push(M)}else R.push(M)}),R},[ee,e]),D=ae.useMemo(()=>!t&&!r&&!h&&x?i({resource:x,resources:s,fields:V,infer:m,meta:N,isCustomPage:x.name!==(F==null?void 0:F.name),id:a,i18n:!!S}):"",[x,s,V,t,r]),O=C;return ae.createElement(ae.Fragment,null,u&&(t||r)&&ae.createElement(u,null),!t&&!r&&ae.createElement(ae.Fragment,null,ae.createElement(He,{fetchError:!t&&w?w:!t&&!h&&!P,code:Ve(D,ne(((L=x==null?void 0:x.meta)==null?void 0:L.label)??((U=x==null?void 0:x.options)==null?void 0:U.label)??(x==null?void 0:x.label)??(x==null?void 0:x.name)??"Resource",e)),errorComponent:f,additionalScope:n}),typeof l<"u"&&!O?ae.createElement(l,{code:De(D),loading:t||r}):null))},"Inferencer");return o(({name:k,resource:g,fieldTransformer:C,meta:N,hideCodeViewerInProduction:a,id:x})=>{let{resource:s}=je(g??k),S=`${(s==null?void 0:s.identifier)??(s==null?void 0:s.name)}-${e}-${x}`;return ae.createElement($,{hideCodeViewerInProduction:a,fieldTransformer:C,resourceName:g??k,meta:N??{},key:S,id:x})},"InferencerComponent")},"createInferencer");import Ae from"react";import dt from"@mui/material/Alert";import ft from"@mui/material/AlertTitle";import yt from"@mui/material/Box";var he=o(({error:e})=>e?Ae.createElement(yt,{style:{display:"flex",justifyContent:"center",alignItems:"center",minHeight:"200px"}},Ae.createElement(dt,{severity:"error"},Ae.createElement(ft,null,"Error"),Ae.createElement("div",{dangerouslySetInnerHTML:{__html:e??""}}))):null,"ErrorComponent");import wr from"react";import gt from"@mui/material/Box";import ht from"@mui/material/CircularProgress";var xe=o(()=>wr.createElement(gt,{style:{display:"flex",justifyContent:"center",alignItems:"center",minHeight:"300px"}},wr.createElement(ht,{size:"large"})),"LoadingComponent");var Ar=o(({resource:e,fields:n,meta:c,isCustomPage:p,id:i,i18n:u})=>{let f=ne(e.label??e.name,"show"),l="record",m=[["useShow","@refinedev/core"],["Show","@refinedev/mui"],["Typography","@mui/material"],["Stack","@mui/material"]];u&&m.push(["useTranslate","@refinedev/core"]),ce(c||{},["gqlQuery","gqlMutation"])&&m.push(["gql","graphql-tag",!0]);let A=n.filter(t=>(t==null?void 0:t.relation)&&!(t!=null&&t.fieldable)&&(t==null?void 0:t.resource)).filter(Boolean).map(t=>{var h,w,H,j;if(t!=null&&t.relation&&!t.fieldable&&t.resource){if(t.multiple){m.push(["useMany","@refinedev/core"]);let z=d(l,t.key);return t.accessor&&(z=`${d(l,t.key)}?.map((item: any) => ${d("item",void 0,t.accessor)})`),`
                const { data: ${q(t.key,"Data")}, isLoading: ${q(t.key,"IsLoading")} } =
                useMany({
                    resource: "${t.resource.name}",
                    ids: ${z} || [],
                    queryOptions: {
                        enabled: !!${l} && !!${z}?.length,
                    },
                    ${W(((h=t==null?void 0:t.resource)==null?void 0:h.identifier)??((w=t==null?void 0:t.resource)==null?void 0:w.name),c,["getMany"])}
                });
                `}return m.push(["useOne","@refinedev/core"]),`
                const { data: ${q(t.key,"Data")}, isLoading: ${q(t.key,"IsLoading")} } =
                useOne({
                    resource: "${t.resource.name}",
                    id: ${d(l,t.key,t.accessor,!1)} || "",
                    queryOptions: {
                        enabled: !!${l},
                    },
                    ${W(((H=t==null?void 0:t.resource)==null?void 0:H.identifier)??((j=t==null?void 0:t.resource)==null?void 0:j.name),c,["getOne"])}
                });
            `}}).filter(Boolean),k=o(t=>{if(t.relation&&t.resource){let h=q(t.key,"Data"),w=q(t.key,"IsLoading");if(t.multiple){let H=`${d(l,t.key)}?.length`;return m.push(["TagField","@refinedev/mui"]),b`
                <Typography variant="body1" fontWeight="bold">
                    ${I({resource:e,field:t,i18n:u,noQuotes:!0})}
                </Typography>
                {${w} && ${H} ? (
                    <>
                        Loading...
                    </>
                    ) : (
                    <>
                    ${(()=>{var j;if(t.relationInfer){if((j=t.relationInfer)!=null&&j.accessor){if(Array.isArray(t.relationInfer.accessor))return console.log("@refinedev/inferencer: Inferencer failed to render this field",{key:t.key,relation:t.relationInfer}),'<span title="Inferencer failed to render this field. (Unsupported nesting)">Cannot Render</span>';let z=q(t.key),Q=d(z,void 0,t.relationInfer.accessor);return`
                                        {record?.${t.key}?.length ? <Stack direction="row" spacing={1}>
                                            {${h}?.data?.map((${z}: any) => (
                                                <TagField key={${Q}} value={${Q}} />
                                            ))}
                                        </Stack> : <></>}
                                    `}return console.log("@refinedev/inferencer: Inferencer failed to render this field",{key:t.key,relation:t.relationInfer}),'<span title="Inferencer failed to render this field. (Cannot find key)">Cannot Render</span>'}return console.log("@refinedev/inferencer: Inferencer failed to render this field",{key:t.key}),'<span title="Inferencer failed to render this field (Cannot find relation)">Cannot Render</span>'})()}
                    </>
                )}
                `}return t.fieldable?b`
                <Typography variant="body1" fontWeight="bold">
                    ${I({resource:e,field:t,i18n:u,noQuotes:!0})}
                </Typography>
                <TextField value={${d(l,t.key,t.accessor)}} />
                `:b`
                <Typography variant="body1" fontWeight="bold">
                    ${I({resource:e,field:t,i18n:u,noQuotes:!0})}
                </Typography>

                {${w} ? (
                    <>Loading...</>
                ) : (
                    <>
                    ${(()=>{var H,j,z;if(t.relationInfer){if((H=t.relationInfer)!=null&&H.accessor)return Array.isArray(t.relationInfer.accessor)?`{${d(`${h}?.data`,void 0,t.relationInfer.accessor,' + " " + ')}}`:`{${h}?.data?.${t.relationInfer.accessor}}`;let Q=((j=t==null?void 0:t.relationInfer)==null?void 0:j.type)==="object"&&!((z=t==null?void 0:t.relationInfer)!=null&&z.accessor);return Q&&console.log("@refinedev/inferencer: Inferencer failed to render this field",{key:t.key,relation:t.relationInfer}),Q?'<span title="Inferencer failed to render this field. (Cannot find key)">Cannot Render</span>':`{${h}?.data}`}return`{${h}?.data?.id}`})()}
                    </>
                )}
                `}},"renderRelationFields"),g=o(t=>{if(t.type==="text"){if(m.push(["TextFieldComponent as TextField","@refinedev/mui"]),t.multiple){m.push(["TagField","@refinedev/mui"]);let h=d("item",void 0,t.accessor);return b`
                <Typography variant="body1" fontWeight="bold">
                    ${I({resource:e,field:t,i18n:u,noQuotes:!0})}
                </Typography>
                <Stack direction="row" spacing={1}>
                {${d(l,t.key)}?.map((item: any) => (
                    <TagField value={${h}} key={${h}} />
                ))}
                </Stack>
            `}return b`
                <Typography variant="body1" fontWeight="bold">
                    ${I({resource:e,field:t,i18n:u,noQuotes:!0})}
                </Typography>
                <TextField value={${d(l,t.key,t.accessor)}} />
            `}},"textFields"),C=o(t=>{if(t.type==="image"){if(t.multiple){let h=d("item",void 0,t.accessor);return b`
                <Typography variant="body1" fontWeight="bold">
                    ${I({resource:e,field:t,i18n:u,noQuotes:!0})}
                </Typography>
                <Stack direction="row" spacing={1}>
                {${d(l,t.key)}?.map((item: any) => (
                    <img style={{ maxWidth: 200, width: "100%", height: 200 }} src={${h}} key={${h}} />
                ))}
                </Stack>
            `}return b`
                <Typography variant="body1" fontWeight="bold">
                    ${I({resource:e,field:t,i18n:u,noQuotes:!0})}
                </Typography>
                <img style={{ maxWidth: 200, width: "100%", height: 200 }} src={${d(l,t.key,t.accessor," + ")}} />
                `}},"imageFields"),N=o(t=>{if(t.type==="email"){if(m.push(["EmailField","@refinedev/mui"]),t.multiple){m.push(["TagField","@refinedev/mui"]);let h=d("item",void 0,t.accessor);return b`
                <Typography variant="body1" fontWeight="bold">
                    ${I({resource:e,field:t,i18n:u,noQuotes:!0})}
                </Typography>
                <Stack direction="row" spacing={1}>
                {${d(l,t.key)}?.map((item: any) => (
                    <TagField value={${h}} key={${h}} />
                ))}
                </Stack>
            `}return b`
                <Typography variant="body1" fontWeight="bold">
                    ${I({resource:e,field:t,i18n:u,noQuotes:!0})}
                </Typography>
                <EmailField value={${d(l,t.key,t.accessor," + ")}} />
            `}},"emailFields"),a=o(t=>{if(t.type==="url"){if(m.push(["UrlField","@refinedev/mui"]),t.multiple){m.push(["TagField","@refinedev/mui"]);let h=d("item",void 0,t.accessor);return b`
                <Typography variant="body1" fontWeight="bold">
                    ${I({resource:e,field:t,i18n:u,noQuotes:!0})}
                </Typography>
                <Stack direction="row" spacing={1}>
                {${d(l,t.key)}?.map((item: any) => (
                    <TagField value={${h}} key={${h}} />
                ))}
                </Stack>
            `}return b`
                <Typography variant="body1" fontWeight="bold">
                    ${I({resource:e,field:t,i18n:u,noQuotes:!0})}
                </Typography>
                <UrlField value={${d(l,t.key,t.accessor," + ")}} />
            `}},"urlFields"),x=o(t=>{if(t.type==="boolean"){if(m.push(["BooleanField","@refinedev/mui"]),t.multiple){m.push(["TagField","@refinedev/mui"]);let h=d("item",void 0,t.accessor);return b`
                <Typography variant="body1" fontWeight="bold">
                    ${I({resource:e,field:t,i18n:u,noQuotes:!0})}
                </Typography>
                <Stack direction="row" spacing={1}>
                {${d(l,t.key)}?.map((item: any, index: number) => (
                    <TagField value={${h}} key={index} />
                ))}
                </Stack>
            `}return b`
                <Typography variant="body1" fontWeight="bold">
                    ${I({resource:e,field:t,i18n:u,noQuotes:!0})}
                </Typography>
                <BooleanField value={${d(l,t.key,t.accessor," && ")}} />
            `}},"booleanFields"),s=o(t=>{if(t.type==="date"){if(m.push(["DateField","@refinedev/mui"]),t.multiple){let h=d("item",void 0,t.accessor);return b`
                <Typography variant="body1" fontWeight="bold">
                    ${I({resource:e,field:t,i18n:u,noQuotes:!0})}
                </Typography>
                <Stack direction="row" spacing={1}>
                {${d(l,t.key)}?.map((item: any) => (
                    <DateField value={${h}} key={${h}} />
                ))}
                </Stack>
            `}return b`
                <Typography variant="body1" fontWeight="bold">
                    ${I({resource:e,field:t,i18n:u,noQuotes:!0})}
                </Typography>
                <DateField value={${d(l,t.key,t.accessor," + ' ' + ")}} />
            `}},"dateFields"),S=o(t=>{if(t.type==="richtext")return m.push(["MarkdownField","@refinedev/mui"]),b`
                <Typography variant="body1" fontWeight="bold">
                    ${I({resource:e,field:t,i18n:u,noQuotes:!0})}
                </Typography>
                <MarkdownField value={${d(l,t.key,t.accessor,' + " " + ')}} />
            `},"richtextFields"),F=o(t=>{if(t.type==="number"){if(m.push(["NumberField","@refinedev/mui"]),t.multiple){m.push(["TagField","@refinedev/mui"]);let h=d("item",void 0,t.accessor);return b`
                <Typography variant="body1" fontWeight="bold">
                    ${I({resource:e,field:t,i18n:u,noQuotes:!0})}
                </Typography>
                <Stack direction="row" spacing={1}>
                {${d(l,t.key)}?.map((item: any) => (
                    <TagField value={${h}} key={${h}} />
                ))}
                </Stack>
            `}return b`
                <Typography variant="body1" fontWeight="bold">
                    ${I({resource:e,field:t,i18n:u,noQuotes:!0})}
                </Typography>
                <NumberField value={${d(l,t.key,t.accessor,' + " " + ')} ?? ""} />
            `}},"numberFields"),P=n.map(t=>{switch(t==null?void 0:t.type){case"text":return g(t);case"number":return F(t);case"richtext":return S(t);case"email":return N(t);case"image":return C(t);case"date":return s(t);case"boolean":return x(t);case"url":return a(t);case"relation":return k(t);default:return}});me(m);let T=u&&"const translate = useTranslate();";return b`
    ${le(m)}

    export const ${f} = () => {
        ${T}
        const { query } = useShow(${p?`{ 
                    resource: "${e.name}", 
                    id: ${ke(i)},
                    ${W((e==null?void 0:e.identifier)??(e==null?void 0:e.name),c,["getOne"])}
                }`:W((e==null?void 0:e.identifier)??(e==null?void 0:e.name),c,["getOne"])?`{ ${W((e==null?void 0:e.identifier)??(e==null?void 0:e.name),c,["getOne"])} }`:""});
        const { data, isLoading } = query;
    
        const ${l} = data?.data;
    
        ${A}

        return (
            <Show isLoading={isLoading}>
                <Stack gap={1}>
                    ${P.join("")}
                </Stack>
            </Show>
        );
    };
    `},"renderer"),Ge=ge({type:"show",additionalScope:[["@refinedev/mui","RefineMui",{Show:xt,TagField:vt,TextFieldComponent:$t,EmailField:It,UrlField:bt,BooleanField:kt,DateField:Ct,MarkdownField:Ft,NumberField:wt}],["@mui/material","MuiMaterial",{Typography:At,Stack:Tt}]],codeViewerComponent:ye,loadingComponent:xe,errorComponent:he,renderer:Ar});import{DateField as St,DeleteButton as Pt,EditButton as Lt,EmailField as Nt,List as Rt,MarkdownField as Mt,SaveButton as Et,ShowButton as Bt,TagField as Vt,UrlField as Dt,useDataGrid as Ot}from"@refinedev/mui";import qt from"@mui/material/Checkbox";import{DataGrid as Wt}from"@mui/x-data-grid";var Tr=o(({resource:e,fields:n,meta:c,isCustomPage:p,i18n:i})=>{var ee;let u=ne(e.label??e.name,"list"),f="dataGridProps?.rows",l=[["React","react",!0],["useDataGrid","@refinedev/mui"],["DataGrid","@mui/x-data-grid"],["GridColDef","@mui/x-data-grid"],["EditButton","@refinedev/mui"],["ShowButton","@refinedev/mui"],["DeleteButton","@refinedev/mui"],["List","@refinedev/mui"]];i&&l.push(["useTranslate","@refinedev/core"]),ce(c||{},["gqlQuery","gqlMutation"])&&l.push(["gql","graphql-tag",!0]);let v=n.filter(r=>(r==null?void 0:r.relation)&&!(r!=null&&r.fieldable)&&(r==null?void 0:r.resource)),$=v.filter(Boolean).map(r=>{var V,D;if(r!=null&&r.relation&&!r.fieldable&&r.resource){l.push(["useMany","@refinedev/core"]);let O="";return r.multiple?O=`[].concat(...(${f}?.map((item: any) => ${d("item",r.key,r.accessor,!1)}) ?? []))`:O=`${f}?.map((item: any) => ${d("item",r.key,r.accessor,!1)}) ?? []`,`
                const { data: ${q(r.key,"Data")}, isLoading: ${q(r.key,"IsLoading")} } =
                useMany({
                    resource: "${r.resource.name}",
                    ids: ${O},
                    queryOptions: {
                        enabled: !!${f},
                    },
                    ${W(((V=r==null?void 0:r.resource)==null?void 0:V.identifier)??((D=r==null?void 0:r.resource)==null?void 0:D.name),c,["getMany"])}
                });
                `}}).filter(Boolean),A=v==null?void 0:v.map(r=>{if(r!=null&&r.resource)return`${q(r.key,"Data")}?.data`}).filter(Boolean),k=o(r=>{var V,D,O,L,U,R;if(r.relation&&r.resource){let M=`${q(r.key,"Data")}?.data`,Z=q(r.key,"IsLoading");if(Array.isArray(r.accessor))return;let K=`${Z} ? <>Loading...</> : `,Y=`field: "${r.key}"`,B=r.accessor&&!r.multiple&&!Array.isArray(r.accessor)?`valueGetter: (_, row) => {
            const value = ${d("row",r.key,r.accessor,!1)};

            return value;
        },`:"",E=`headerName: ${I({resource:e,field:r,i18n:i,noBraces:!0})}`,G="";if(r.multiple){l.push(["TagField","@refinedev/mui"]);let se="item";if(r!=null&&r.relationInfer){let re=`${M}?.find((resourceItems) => resourceItems.id === ${d("item",void 0,r.accessor)})`;se=d(re,void 0,(V=r==null?void 0:r.relationInfer)==null?void 0:V.accessor)}if(r!=null&&r.relationInfer&&((D=r==null?void 0:r.relationInfer)==null?void 0:D.type)==="object"&&!((O=r==null?void 0:r.relationInfer)!=null&&O.accessor))return console.log("@refinedev/inferencer: Inferencer failed to render this field",{key:r.key,relation:r.relationInfer}),`renderCell: function render({ getValue }) {
                        return (
                            <span title="Inferencer failed to render this field (Cannot find key)">Cannot Render</span>
                        )
                    }`;G=`
                renderCell: function render({ value }) {
                    return ${K} (
                        <>
                            {${d("value",void 0)}?.map((item: any, index: number) => (
                                <TagField key={index} value={${se}} />
                            ))}
                        </>
                    )
                }
                `}else if(r!=null&&r.relationInfer){let se=`${M}?.find((item) => item.id === value)`,re=d(se,void 0,(L=r==null?void 0:r.relationInfer)==null?void 0:L.accessor);((U=r==null?void 0:r.relationInfer)==null?void 0:U.type)==="object"&&!((R=r==null?void 0:r.relationInfer)!=null&&R.accessor)?(console.log("@refinedev/inferencer: Inferencer failed to render this field",{key:r.key,relation:r.relationInfer}),G=`
                        renderCell: function render({ value }) {
                            return <span title="Inferencer failed to render this field (Cannot find key)">Cannot Render</span>;
                        }
                        `):G=`
                    renderCell: function render({ value }) {
                        return ${K} ${re};
                    }
                    `}else G="";return`
                {
                    ${Y},
                    flex: 1,
                    ${E},${B}
                    minWidth: 300,${G}
                }
            `}},"renderRelationFields"),g=o(r=>{if(r.type==="image"){let V=`field: "${r.key}"`,D=`headerName: ${I({resource:e,field:r,i18n:i,noBraces:!0})}`,O=r.accessor&&!r.multiple&&!Array.isArray(r.accessor)?`valueGetter: (_, row) => {
            const value = ${d("row",r.key,r.accessor,!1)};

            return value;
        },`:"",L=`
                renderCell: function render({ value }) {
                    return (
                        <img src={${d("value",void 0,Array.isArray(r.accessor)?r.accessor:void 0," + ")}} style={{ height: "50px", maxWidth: "100px" }} />
                    )
                }
            `;return r.multiple&&(L=`
                    renderCell: function render({ value }) {
                        return (
                            <>
                            {value?.map((item: any, index: number) => (
                                <img src={${d("item",void 0,r.accessor," + ")}} key={index} style={{ height: "50px", maxWidth: "100px" }} />
                            ))}
                            </>
                        )
                    }
                `),`
                {
                    ${V},
                    flex: 1,
                    ${D},${O}
                    minWidth: 100,${L}
                }
            `}},"imageFields"),C=o(r=>{if(r.type==="email"){l.push(["EmailField","@refinedev/mui"]);let V=`field: "${r.key}"`,D=`headerName: ${I({resource:e,field:r,i18n:i,noBraces:!0})}`,O=r.accessor&&!r.multiple&&!Array.isArray(r.accessor)?`valueGetter: (_, row) => {
            const value = ${d("row",r.key,r.accessor,!1)};

            return value;
        },`:"",L=`
            renderCell: function render({ value }) {
                return (
                    <EmailField value={${d("value",void 0,Array.isArray(r.accessor)?r.accessor:void 0," + ")}} />
                )
            }
        `;return r.multiple&&(l.push(["TagField","@refinedev/mui"]),L=`
                renderCell: function render({ value }) {
                    return (
                        <>
                        {value?.map((item: any, index: number) => (
                            <TagField value={${d("item",void 0,r.accessor," + ")}} key={index} />
                        ))}
                        </>
                    )
                }
            `),`
            {
                ${V},
                flex: 1,
                ${D},${O}
                minWidth: 250,${L}
            }
        `}},"emailFields"),N=o(r=>{if(r.type==="url"){l.push(["UrlField","@refinedev/mui"]);let V=`field: "${r.key}"`,D=`headerName: ${I({resource:e,field:r,i18n:i,noBraces:!0})}`,O=r.accessor&&!r.multiple&&!Array.isArray(r.accessor)?`valueGetter: (_, row) => {
            const value = ${d("row",r.key,r.accessor,!1)};

            return value;
        },`:"",L=`
                renderCell: function render({ value }) {
                    return (
                        <UrlField value={${d("value",void 0,Array.isArray(r.accessor)?r.accessor:void 0," + ")}} />
                    )
                }
            `;return r.multiple&&(l.push(["TagField","@refinedev/mui"]),L=`
                    renderCell: function render({ value }) {
                        return (
                            <>
                            {value?.map((item: any, index: any) => (
                                <TagField value={${d("item",void 0,r.accessor," + ")}} key={index} />
                            ))}
                            </>
                        )
                    }
                `),`
                {
                    ${V},
                    flex: 1,
                    ${D},${O}
                    minWidth: 250,${L}
                }
            `}},"urlFields"),a=o(r=>{if(r!=null&&r.type){l.push(["Checkbox","@mui/material"]);let V=`field: "${r.key}"`,D=`headerName: ${I({resource:e,field:r,i18n:i,noBraces:!0})}`,O=r.accessor&&!r.multiple&&!Array.isArray(r.accessor)?`valueGetter: (_, row)=> {
            const value = ${d("row",r.key,r.accessor,!1)};

            return value;
        },`:"",L=`
                renderCell: function render({ value }) {
                    return (
                        <Checkbox checked={!!${d("value",void 0,Array.isArray(r.accessor)?r.accessor:void 0," && ")}} />
                    );
                }
            `;return r.multiple&&(L=`
                    renderCell: function render({ value }) {
                        return (
                            <>
                            {value?.map((item: any, index: number) => (
                                <Checkbox checked={!!${d("item",void 0,r.accessor," && ")}} key={index} />
                            ))}
                            </>
                        )
                    }
                `),`
                {
                    ${V},
                    ${D},${O}
                    minWidth: 100,${L}
                }
            `}},"booleanFields"),x=o(r=>{if(r.type==="date"){l.push(["DateField","@refinedev/mui"]);let V=`field: "${r.key}"`,D=`headerName: ${I({resource:e,field:r,i18n:i,noBraces:!0})}`,O=r.accessor&&!r.multiple&&!Array.isArray(r.accessor)?`valueGetter: (_, row) => {
            const value = ${d("row",r.key,r.accessor,!1)};

            return value;
        },`:"",L=`
                renderCell: function render({ value }) {
                    return <DateField value={value} />;
                }
            `;return r.multiple&&(L=`
                    renderCell: function render({ value }) {
                        return (
                            <>
                            {value?.map((item: any, index: number) => (
                                <DateField value={${d("item",void 0,r.accessor,' + " " + ')}} key={index} />
                            ))}
                            </>
                        )
                    }
                `),`
                {
                    ${V},
                    flex: 1,
                    ${D},${O}
                    minWidth: 250,${L}
                }
            `}},"dateFields"),s=o(r=>{if((r==null?void 0:r.type)==="richtext"){l.push(["MarkdownField","@refinedev/mui"]);let V=`field: "${r.key}"`,D=`headerName: ${I({resource:e,field:r,i18n:i,noBraces:!0})}`,O=r.accessor&&!r.multiple&&!Array.isArray(r.accessor)?`valueGetter: (_, row) => {
            const value = ${d("row",r.key,r.accessor,!1)};

            return value;
        },`:"",L=`
                renderCell: function render({ value }) {
                    return <MarkdownField value={(value ?? "").slice(0, 80) + "..."} />;
                }
            `;return r.multiple&&(L=`
                    renderCell: function render({ value }) {
                        return (
                            <>
                            {value?.map((item: any, index: number) => (
                                <MarkdownField value={(${d("item",void 0,r.accessor,' + " " + ')}).slice(0, 80) + "..."} key={index} />
                            ))}
                            </>
                        )
                    }
                `),`
                {
                    ${V},
                    flex: 1,
                    ${D},${O}
                    minWidth: 250,${L}
                }
            `}},"richtextFields"),S=o(r=>{if(r&&(r.type==="text"||r.type==="number")){let V=`field: "${r.key}"`,D=`headerName: ${I({resource:e,field:r,i18n:i,noBraces:!0})}`,O=r.accessor&&!r.multiple&&!Array.isArray(r.accessor)?`valueGetter: (_, row) => {
            const value = ${d("row",r.key,r.accessor,!1)};

            return value;
        },`:"",L="";if(r.multiple){l.push(["TagField","@refinedev/mui"]);let U=d("item",void 0,r.accessor,' + " " + ');L=`
                renderCell: function render({ row }) {
                    return (
                        <>
                            {(${d("row",r.key)})?.map((item: any) => (
                                <TagField value={${U}} key={${U}} />
                            ))}
                        </>
                    )
                }
                `}return!r.multiple&&Array.isArray(r.accessor)&&(L=`
                renderCell: function render({ row }) {
                    return (
                        <>{${d("row",r.key,r.accessor)}}</>
                    );
                }
                `),`
            {
                ${V}, ${fe(r.key)?"":`
                flex: 1,`}
                ${D},${O}${r.type==="number"?"type: 'number',":""}
                minWidth: ${fe(r.key)?50:200},${L}
            }
            `}},"basicFields"),F=((ee=n==null?void 0:n[0])==null?void 0:ee.key)??"id",P=n!=null&&n.find(r=>(r==null?void 0:r.key)==="id")?"":`getRowId={(row) => row?.${F}}`,{canEdit:T,canShow:t,canDelete:h,meta:w}=e??{},H=h||(w==null?void 0:w.canDelete);T&&l.push(["EditButton","@refinedev/mui"]),t&&l.push(["ShowButton","@refinedev/mui"]),H&&l.push(["DeleteButton","@refinedev/mui"]);let z=T||t||H?b`
            {
                field: "actions",
                headerName: ${i?'translate("table.actions")':'"Actions"'},
                sortable: false,
                renderCell: function render({ row }) {
                    return (
                        <>
                            ${T?b`<EditButton hideText recordItemId={row.id} />`:""}
                            ${t?b`<ShowButton hideText recordItemId={row.id} />`:""}
                            ${H?b`<DeleteButton hideText recordItemId={row.id} />`:""}
                        </>
                    );
                },
                align: "center",
                headerAlign: "center",
                minWidth: 80,
            },
    `:"",Q=n.map(r=>{switch(r==null?void 0:r.type){case"text":case"number":return S(r);case"richtext":return s(r);case"email":return C(r);case"image":return g(r);case"date":return x(r);case"boolean":return a(r);case"url":return N(r);case"relation":return k(r);default:return}});me(l);let X=i&&"const translate = useTranslate();";return b`
    ${le(l)}
    
    export const ${u} = () => {
        ${X}
        const { dataGridProps } = useDataGrid(
            ${p?`{ resource: "${e.name}",
                        ${W((e==null?void 0:e.identifier)??(e==null?void 0:e.name),c,["getList"])}
                        }`:W((e==null?void 0:e.identifier)??(e==null?void 0:e.name),c,["getList"])?`{ ${W((e==null?void 0:e.identifier)??(e==null?void 0:e.name),c,["getList"])} },`:""} 
        );
    
        ${$}

        const columns = React.useMemo<GridColDef[]>(() => [
            ${[...Q,z].filter(Boolean).join(`,\r
`)}
        ], [${i?"translate, ":""}${A.join(",")}]);

        return (
            <List>
                <DataGrid {...dataGridProps} ${P} columns={columns} autoHeight />
            </List>
        );
    };
    `},"renderer"),_e=ge({type:"list",additionalScope:[["@refinedev/mui","RefineMui",{useDataGrid:Ot,EditButton:Lt,SaveButton:Et,DeleteButton:Pt,List:Rt,TagField:Vt,EmailField:Nt,UrlField:Dt,DateField:St,MarkdownField:Mt,ShowButton:Bt}],["@mui/x-data-grid","MuiXDataGrid",{DataGrid:Wt}],["@mui/material","MuiMaterial",{Checkbox:qt}]],codeViewerComponent:ye,loadingComponent:xe,errorComponent:he,renderer:Tr});import{Create as Ht,useAutocomplete as jt}from"@refinedev/mui";import{useForm as Gt}from"@refinedev/react-hook-form";import _t from"@mui/material/Box";import zt from"@mui/material/Autocomplete";import Kt from"@mui/material/TextField";import Qt from"@mui/material/Checkbox";import Ut from"@mui/material/FormControlLabel";import{Controller as Zt}from"react-hook-form";var Sr=o(({resource:e,fields:n,meta:c,isCustomPage:p,i18n:i})=>{let u=ne(e.label??e.name,"create"),f=[["Create","@refinedev/mui"],["Box","@mui/material"],["useForm","@refinedev/react-hook-form"]];i&&f.push(["useTranslate","@refinedev/core"]),ce(c||{},["gqlQuery","gqlMutation"])&&f.push(["gql","graphql-tag",!0]);let v=n.filter(a=>(a==null?void 0:a.relation)&&!(a!=null&&a.fieldable)&&(a==null?void 0:a.resource)).filter(Boolean).map(a=>{var x,s;if(a!=null&&a.relation&&!a.fieldable&&a.resource)return f.push(["useAutocomplete","@refinedev/mui"]),`
                const { autocompleteProps: ${q(a.key,"AutocompleteProps")} } =
                useAutocomplete({
                    resource: "${a.resource.name}",
                    ${W(((x=a==null?void 0:a.resource)==null?void 0:x.identifier)??((s=a==null?void 0:a.resource)==null?void 0:s.name),c,["getList"])}
                });
            `}).filter(Boolean),$=o(a=>{if(a.relation&&a.resource){f.push(["Autocomplete","@mui/material"],["Controller","react-hook-form"]);let x=q(a.key,"AutocompleteProps"),s=a.relationInfer&&a.relationInfer.accessor?typeof a.relationInfer.accessor=="string"?a.relationInfer.accessor:a.relationInfer.accessor[0]:"title",S=s.includes(".")||s.includes("[")||s.includes("]")||s.includes("-"),F=a.accessor?d("item",void 0,a.accessor,!1):"(item?.id ?? item)",P=a.accessor?d("value",void 0,a.accessor,!1):"(value?.id ?? value)",T=a.accessor?"value":a.multiple?"value?.map((item: any) => item?.id ?? item)":"value?.id ?? value";return b`
                <Controller
                    control={control}
                    name="${J(a.key,void 0)}"
                    rules={{ required: "This field is required" }}
                    // eslint-disable-next-line
                    ${a.multiple?"defaultValue={[] as any}":"defaultValue={null as any}"}
                    render={({ field }) => (
                        <Autocomplete
                            {...${x}}
                            {...field}
                            ${a.multiple?"multiple":""}
                            onChange={(_, value) => {
                                field.onChange(${T});
                            }}
                            getOptionLabel={(item) => {
                                return (
                                    ${x}?.options?.find(
                                        (p) =>
                                            p?.id?.toString() ===
                                            ${F}?.toString(),
                                    )?.${S?`["${s}"]`:s} ?? ""
                                );
                            }}
                            isOptionEqualToValue={(option, value) =>
                                value === undefined ||
                                option?.id?.toString() === ${P}?.toString()
                            }
                            renderInput={(params) => (
                                <TextField
                                    {...params}
                                    label=${I({resource:e,field:a,i18n:i})}
                                    margin="normal"
                                    variant="outlined"
                                    error={!!${d("(errors as any)",a.key,a.accessor,!1)}}
                                    helperText={${d("(errors as any)",a.key,a.accessor,!1)}?.message}
                                    required
                                />
                            )}
                        />
                    )}
                />
            `}},"renderRelationFields"),A=o(a=>{if(a.type==="text"||a.type==="url"||a.type==="email"||a.type==="number"||a.type==="date"||a.type==="richtext")return fe(a.key)||(f.push(["TextField","@mui/material"]),a.multiple)?void 0:b`
                <TextField
                    {...register("${J(a.key,void 0,a.accessor)}", {
                        required: "This field is required",
                        ${a.type==="number"?"valueAsNumber: true,":""}
                    })}
                    error={!!${d("(errors as any)",a.key,a.accessor,!1)}}
                    helperText={${d("(errors as any)",a.key,a.accessor,!1)}?.message}
                    margin="normal"
                    fullWidth
                    slotProps={{
                        inputLabel: {
                             shrink: true,
                        },
                    }}
                    ${a.type!=="date"&&a.type!=="richtext"?`type="${a.type}"`:""}
                    ${a.type==="richtext"?"multiline":""}
                    label=${I({resource:e,field:a,i18n:i})}
                    name="${J(a.key,void 0,a.accessor)}"
                />
            `},"basicInputFields"),k=o(a=>{if(a.type==="boolean")return f.push(["Checkbox","@mui/material"],["FormControlLabel","@mui/material"],["Controller","react-hook-form"]),a.multiple?void 0:b`
                <Controller
                    control={control}
                    name="${J(a.key,void 0,a.accessor)}"
                    // eslint-disable-next-line
                    defaultValue={null as any}
                    render={({ field }) => (
                        <FormControlLabel label=${I({resource:e,field:a,i18n:i})} control={
                            <Checkbox
                                {...field}
                                checked={field.value}
                                onChange={(event) => {
                                    field.onChange(event.target.checked);
                                }}
                            />
                        } />
                    )}
                />
            `},"booleanFields"),g=o(a=>{if(a.type==="date")return`
                {/*
                    DatePicker component is not included in "@refinedev/mui" package.
                    To use a <DatePicker> component, you can follow the official documentation for Material UI.

                    Docs: https://mui.com/x/react-date-pickers/date-picker/#basic-usage
                */}
                ${A(a)??""}
                `},"dateFields"),C=n.map(a=>{switch(a==null?void 0:a.type){case"text":case"number":case"email":case"url":case"richtext":return A(a);case"date":return g(a);case"boolean":return k(a);case"relation":return $(a);default:return}});me(f);let N=i&&"const translate = useTranslate();";return b`
    ${le(f)}

    export const ${u} = () => {
        ${N}
        const {
            saveButtonProps,
            refineCore: { formLoading },
            register,
            control,
            formState: { errors },
        } = useForm(
            ${p?`{
                refineCoreProps: {
                    resource: "${e.name}",
                    action: "create",
                    ${W(e.identifier??e.name,c,["create","getOne"])}
                }
            }`:W(e.identifier??e.name,c,["create","getOne"])?`{
                        refineCoreProps: { ${W(e.identifier??e.name,c,["create","getOne"])} }
                        }`:""}
        );

        ${v}

        return (
            <Create isLoading={formLoading} saveButtonProps={saveButtonProps}>
                <Box
                    component="form"
                    sx={{ display: "flex", flexDirection: "column" }}
                    autoComplete="off"
                >
                    ${C.join("")}
                </Box>
            </Create>
        );
    };
    `},"renderer"),ze=ge({type:"create",additionalScope:[["@refinedev/mui","RefineMui",{Create:Ht,useAutocomplete:jt}],["@refinedev/react-hook-form","RefineReactHookForm",{useForm:Gt}],["@mui/material","MuiMaterial",{Box:_t,Autocomplete:zt,TextField:Kt,Checkbox:Qt,FormControlLabel:Ut}],["react-hook-form","ReactHookForm",{Controller:Zt}]],codeViewerComponent:ye,loadingComponent:xe,errorComponent:he,renderer:Sr});import{Edit as Yt,useAutocomplete as Jt}from"@refinedev/mui";import{useForm as Xt}from"@refinedev/react-hook-form";import en from"@mui/material/Box";import rn from"@mui/material/Autocomplete";import tn from"@mui/material/TextField";import nn from"@mui/material/Checkbox";import on from"@mui/material/FormControlLabel";import{Controller as an}from"react-hook-form";var Pr=o(({resource:e,fields:n,meta:c,isCustomPage:p,id:i,i18n:u})=>{let f=ne(e.label??e.name,"edit"),l=q(e.label??e.name,"Data"),m=[["Edit","@refinedev/mui"],["Box","@mui/material"],["useForm","@refinedev/react-hook-form"]];u&&m.push(["useTranslate","@refinedev/core"]),ce(c||{},["gqlQuery","gqlMutation"])&&m.push(["gql","graphql-tag",!0]);let A=n.filter(s=>(s==null?void 0:s.relation)&&!(s!=null&&s.fieldable)&&(s==null?void 0:s.resource)).filter(Boolean).map(s=>{var S,F;if(s!=null&&s.relation&&!s.fieldable&&s.resource){m.push(["useAutocomplete","@refinedev/mui"]);let P=d(l,s.key,s.accessor,!1);return s.multiple&&s.accessor&&(P=`${d(l,s.key)}?.map((item: any) => ${d("item",void 0,s.accessor)})`),`
                const { autocompleteProps: ${q(s.key,"AutocompleteProps")} } =
                useAutocomplete({
                    resource: "${s.resource.name}",
                    defaultValue: ${P},
                    ${W(((S=s==null?void 0:s.resource)==null?void 0:S.identifier)??((F=s==null?void 0:s.resource)==null?void 0:F.name),c,["getList"])}
                });
            `}}).filter(Boolean),k=o(s=>{if(s.relation&&s.resource){m.push(["Autocomplete","@mui/material"],["Controller","react-hook-form"]);let S=q(s.key,"AutocompleteProps"),F=s.relationInfer&&s.relationInfer.accessor?typeof s.relationInfer.accessor=="string"?s.relationInfer.accessor:s.relationInfer.accessor[0]:"title",P=F.includes(".")||F.includes("[")||F.includes("]")||F.includes("-"),T=s.accessor?d("item",void 0,s.accessor,!1):"(item?.id ?? item)",t=s.accessor?d("value",void 0,s.accessor,!1):"(value?.id ?? value)",h=s.accessor?"value":s.multiple?"value?.map((item: any) => item?.id ?? item)":"value?.id ?? value";return b`
                <Controller
                    control={control}
                    name="${J(s.key,void 0)}"
                    rules={{ required: "This field is required" }}
                    // eslint-disable-next-line
                    ${s.multiple?"defaultValue={[] as any}":"defaultValue={null as any}"}
                    render={({ field }) => (
                        <Autocomplete
                            {...${S}}
                            {...field}
                            ${s.multiple?"multiple":""}
                            onChange={(_, value) => {
                                field.onChange(${h});
                            }}
                            getOptionLabel={(item) => {
                                return (
                                    ${S}?.options?.find(
                                        (p) =>
                                            p?.id?.toString() ===
                                            ${T}?.toString(),
                                    )?.${P?`["${F}"]`:F} ?? ""
                                );
                            }}
                            isOptionEqualToValue={(option, value) =>
                                value === undefined ||
                                option?.id?.toString() === ${t}?.toString()
                            }
                            renderInput={(params) => (
                                <TextField
                                    {...params}
                                    label=${I({resource:e,field:s,i18n:u})}
                                    margin="normal"
                                    variant="outlined"
                                    error={!!${d("(errors as any)",s.key,s.accessor,!1)}}
                                    helperText={${d("(errors as any)",s.key,s.accessor,!1)}?.message}
                                    required
                                />
                            )}
                        />
                    )}
                />
            `}},"renderRelationFields"),g=o(s=>{if(s.type==="text"||s.type==="url"||s.type==="email"||s.type==="number"||s.type==="date"||s.type==="richtext"){if(m.push(["TextField","@mui/material"]),s.multiple){m.push(["Box","@mui/material"]);let S=J(s.key,"${index}",s.accessor),F=`${d("(errors as any)",s.key,void 0,!1)}?.[index]`;return`
                    <Box sx={{display: "flex", gap: 1}}>
                        {${d(l,s.key)}?.map((item: any, index: number) => (
                            <TextField
                                key={index}
                                {...register(\`${S}\`, {
                                    required: "This field is required",
                                    ${s.type==="number"?"valueAsNumber: true,":""}
                                })}
                                error={!!${F}}
                                helperText={${F}?.message as string}
                                margin="normal"
                                fullWidth
                                slotProps={{
                                    inputLabel: {
                                         shrink: true,
                                    },
                                }}
                                ${s.type!=="date"&&s.type!=="richtext"?`type="${s.type}"`:""}
                                ${s.type==="richtext"?"multiline":""}
                                label=${I({resource:e,field:s,i18n:u})}
                                name={\`${J(s.key,void 0,s.accessor)}.\${index}\`}
                            />
                        ))}
                    </Box>
                `}return b`
                <TextField
                    {...register("${J(s.key,void 0,s.accessor)}", {
                        required: "This field is required",
                        ${s.type==="number"?"valueAsNumber: true,":""}
                    })}
                    error={!!${d("(errors as any)",s.key,s.accessor,!1)}}
                    helperText={${d("(errors as any)",s.key,s.accessor,!1)}?.message}
                    margin="normal"
                    fullWidth
                    slotProps={{
                        inputLabel: {
                            shrink: true,
                        },
                    }}
                    ${s.type!=="date"&&s.type!=="richtext"?`type="${s.type}"`:""}
                    ${s.type==="richtext"?"multiline":""}
                    label=${I({resource:e,field:s,i18n:u})}
                    name="${J(s.key,void 0,s.accessor)}"
                    ${fe(s.key)?"disabled":""}
                />
            `}},"basicInputFields"),C=o(s=>{if(s.type==="boolean"){if(m.push(["Checkbox","@mui/material"],["FormControlLabel","@mui/material"],["Controller","react-hook-form"]),s.multiple){m.push(["Box","@mui/material"]);let S=J(s.key,"${index}",s.accessor);return`
                    <Box sx={{display: "flex", gap: 1}}>
                        {${d(l,s.key)}?.map((item: any, index: number) => (
                            <Controller
                                key={index}
                                control={control}
                                name={\`${S}\`}
                                // eslint-disable-next-line
                                defaultValue={null as any}
                                render={({ field }) => (
                                    <FormControlLabel label=${I({resource:e,field:s,i18n:u})} control={
                                        <Checkbox
                                            {...field}
                                            checked={field.value}
                                            onChange={(event) => {
                                                field.onChange(event.target.checked);
                                            }}
                                        />
                                    } />
                                )}
                            />
                        ))}
                    </Box>
                `}return b`
                <Controller
                    control={control}
                    name="${J(s.key,void 0,s.accessor)}"
                    // eslint-disable-next-line
                    defaultValue={null as any}
                    render={({ field }) => (
                        <FormControlLabel label=${I({resource:e,field:s,i18n:u})} control={
                            <Checkbox
                                {...field}
                                checked={field.value}
                                onChange={(event) => {
                                    field.onChange(event.target.checked);
                                }}
                            />
                        } />
                    )}
                />
            `}},"booleanFields"),N=o(s=>{if(s.type==="date")return`
                {/*
                    DatePicker component is not included in "@refinedev/mui" package.
                    To use a <DatePicker> component, you can follow the official documentation for Material UI.

                    Docs: https://mui.com/x/react-date-pickers/date-picker/#basic-usage
                */}
                ${g(s)}
                `},"dateFields"),a=n.map(s=>{switch(s==null?void 0:s.type){case"text":case"number":case"email":case"url":case"richtext":return g(s);case"date":return N(s);case"boolean":return C(s);case"relation":return k(s);default:return}});me(m);let x=u&&"const translate = useTranslate();";return b`
    ${le(m)}

    export const ${f} = () => {
        ${x}
        const {
            saveButtonProps,
            refineCore: { query },
            register,
            control,
            formState: { errors },
        } = useForm(
            ${p?`{
                refineCoreProps: {
                    resource: "${e.name}",
                    id: ${ke(i)},
                    action: "edit",
                    ${W((e==null?void 0:e.identifier)??(e==null?void 0:e.name),c,["update","getOne"])}
                }
            }`:W((e==null?void 0:e.identifier)??(e==null?void 0:e.name),c,["update","getOne"])?`{ refineCoreProps: { ${W((e==null?void 0:e.identifier)??(e==null?void 0:e.name),c,["update","getOne"])} }
              }`:""}
        );

        const ${l} = query?.data?.data;

        ${A}

        return (
            <Edit saveButtonProps={saveButtonProps}>
                <Box
                    component="form"
                    sx={{ display: "flex", flexDirection: "column" }}
                    autoComplete="off"
                >
                    ${a.join("")}
                </Box>
            </Edit>
        );
    };
    `},"renderer"),Ke=ge({type:"edit",additionalScope:[["@refinedev/mui","RefineMui",{Edit:Yt,useAutocomplete:Jt}],["@refinedev/react-hook-form","RefineReactHookForm",{useForm:Xt}],["@mui/material","MuiMaterial",{Box:en,Autocomplete:rn,TextField:tn,Checkbox:nn,FormControlLabel:on}],["react-hook-form","ReactHookForm",{Controller:an}]],codeViewerComponent:ye,loadingComponent:xe,errorComponent:he,renderer:Pr});var Ki=o(({action:e,id:n,...c})=>{let{action:p,id:i}=sn();switch(e??p){case"show":return Te.createElement(Ge,{...c,id:n??i});case"create":return Te.createElement(ze,{...c,id:n??i});case"edit":return Te.createElement(Ke,{...c,id:n??i});default:return Te.createElement(_e,{...c,id:n??i})}},"MuiInferencer");export{ze as MuiCreateInferencer,Sr as MuiCreateRenderer,Ke as MuiEditInferencer,Pr as MuiEditRenderer,Ki as MuiInferencer,_e as MuiListInferencer,Tr as MuiListRenderer,Ge as MuiShowInferencer,Ar as MuiShowRenderer};
//# sourceMappingURL=mui.mjs.map