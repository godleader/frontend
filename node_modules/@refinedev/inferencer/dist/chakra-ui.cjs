"use client"
var ut=Object.create;var Te=Object.defineProperty;var pt=Object.getOwnPropertyDescriptor;var mt=Object.getOwnPropertyNames;var lt=Object.getPrototypeOf,dt=Object.prototype.hasOwnProperty;var o=(e,n)=>Te(e,"name",{value:n,configurable:!0});var ft=(e,n)=>{for(var i in n)Te(e,i,{get:n[i],enumerable:!0})},Ir=(e,n,i,c)=>{if(n&&typeof n=="object"||typeof n=="function")for(let s of mt(n))!dt.call(e,s)&&s!==i&&Te(e,s,{get:()=>n[s],enumerable:!(c=pt(n,s))||c.enumerable});return e};var K=(e,n,i)=>(i=e!=null?ut(lt(e)):{},Ir(n||!e||!e.__esModule?Te(i,"default",{value:e,enumerable:!0}):i,e)),gt=e=>Ir(Te({},"__esModule",{value:!0}),e);var Vt={};ft(Vt,{ChakraUICreateInferencer:()=>Ge,ChakraUICreateRenderer:()=>hr,ChakraUIEditInferencer:()=>_e,ChakraUIEditRenderer:()=>kr,ChakraUIInferencer:()=>Mt,ChakraUIListInferencer:()=>Qe,ChakraUIListRenderer:()=>yr,ChakraUIShowInferencer:()=>Ke,ChakraUIShowRenderer:()=>gr});module.exports=gt(Vt);var Me=K(require("react")),st=require("@refinedev/core");var G=require("@refinedev/chakra-ui"),Se=require("@chakra-ui/react");var Z=K(require("react")),ve=require("@refinedev/core");var yt=/(image|photo|avatar|url|logo|cover|thumbnail|icon)/i,ht=/^(\w|\d|_|-|)*?(name|label){1}$/i,Ze=o((e,n)=>{let i=["name","label","title","count","content","username","nickname","login","firstName","lastName","url"],s=Object.keys(n).filter(f=>ht.test(f));i.push(...s),yt.test(e)&&i.unshift("url");let p=i.find(f=>f in n&&!!n[f]);if(p)return p==="firstName"&&"lastName"in n?["firstName","lastName"]:p},"getFieldableKeys");var xr=require("@refinedev/core");function Ye(e,n,i){if(n)return n;let c=i==null?void 0:i.find(p=>p.name===e),s=(0,xr.pickNotDeprecated)(c==null?void 0:c.meta,c==null?void 0:c.options);return s!=null&&s.dataProviderName?s.dataProviderName:"default"}o(Ye,"pickDataProvider");var He=o(e=>{var n;return(n=e==null?void 0:e.options)==null?void 0:n.dataProviderName},"dataProviderFromResource");var Je=o(e=>{let n=[...e].filter(Boolean).sort((i,c)=>(c.priority||0)-(i.priority||0))[0];return n||null},"pickInferredField");var $r=K(require("prettier/standalone")),br=K(require("prettier/parser-typescript"));var Xe=o(e=>{try{return $r.default.format(e,{parser:"typescript",plugins:[br.default],arrowParens:"always",trailingComma:"all",semi:!0,tabWidth:4,printWidth:80})}catch(n){return console.warn("Formatting error in inferencer",n),e}},"prettierFormat");var Fr=o(e=>e.replace(/ {2,}/g," ").replace(/\n{2,}/g,`
`),"prettySpaces");var er=/(-id|-ids|_id|_ids|Id|Ids|ID|IDs)(\[\])?$/,vr=o((e,n)=>{let i=er.test(e),c=typeof n=="string"||typeof n=="number",s=Array.isArray(n)&&n.every(p=>typeof p=="string"||typeof p=="number");return i&&c||i&&s?{key:e,relation:!0,multiple:s,type:"relation",priority:1}:!1},"relationInfer");var Q=o(e=>e.replace(er,""),"removeRelationSuffix");var be=o(e=>Q(e).replace(/([a-z])([A-Z])/g,"$1 $2").replace(/_/g," ").replace(/-/g," ").split(" ").map(f=>f.charAt(0).toUpperCase()+f.slice(1)).join(" "),"prettyString");var b=o(e=>{let{resource:n,field:i,i18n:c}=e;if(c){let p=`translate("${n.name}.fields.${i.key}")`;return e.noBraces?`${p}`:`{${p}}`}let s=be(i.key);return e.noQuotes?s:`"${s}"`},"translatePrettyString");var rr=K(require("pluralize"));var X=o((e="")=>rr.default.isSingular(e)?e:rr.default.singular(e),"toSingular");var tr=K(require("pluralize"));var pe=o((e="")=>tr.default.isPlural(e)?e:tr.default.plural(e),"toPlural");var nr=o(e=>e.replace(/export\s+(const|let|var|type|interface|function|class)\s+(\w+)\s*(=|:)\s*/g,"$1 $2 = ").split(`
`).filter(s=>!s.trim().startsWith("export default")).join(`
`),"replaceExports");var Cr=/import(?:(?:(?:[ \n\t]+([^ *\n\t\{\},]+)[ \n\t]*(?:,|[ \n\t]+))?([ \n\t]*\{(?:[ \n\t]*[^ \n\t"'\{\}]+[ \n\t]*,?)+\})?[ \n\t]*)|[ \n\t]*\*[ \n\t]*as[ \n\t]+([^ \n\t\{\}]+)[ \n\t]+)from[ \n\t]*(?:['"])([^'"\n]+)(?:['"])(?:;?)/g,kt=/import[ \n\t](?:['"])([^'"\n]+)(?:['"])(?:;?)/g,It=/((?:\w|\s|_)*)( as )((?:\w|\s|_)*)( |,)?/g,or=o((e,n={})=>{let i=e.matchAll(Cr),c=new Set;for(let s of i){let[,p,f,m,l]=s;if(l in n){let k=n[l];if(l==="react")continue;p&&c.add(`const { default: ${p} } = ${k};`),f&&c.add(`const${f.replace(It,"$1: $3$4")} = ${k};`),m&&c.add(`const ${m} = ${k};`)}}return Fr(`
    ${Array.from(c).join(`
`)}
    ${e.replace(Cr,"").replace(kt,"")}
    `)},"replaceImports");var Le=K(require("pluralize"));var ar=o((e,n)=>e?n.find(c=>{let s=Q(e.key);return c.name===s||c.name===(Le.default.isPlural(s)?s:Le.default.plural(s))||c.name===(Le.default.isSingular(s)?s:Le.default.singular(s))}):void 0,"resourceFromInferred");var Sr=K(require("pluralize"));var se=o((e,n,i="Inferred")=>{let c=e.replace(/[^a-zA-Z0-9]/g," "),s=Sr.default.singular(c),f=be(s).replace(/ /g,"")||i,m=n.charAt(0).toUpperCase()+n.slice(1);return/^[a-zA-Z]/.test(f)?`${f}${m}`:`${m}${f}`},"componentName");var xt=o(e=>e?Array.isArray(e)?e.join(""):typeof e=="string"?e:typeof e=="object"||typeof e=="function"?e.toString():typeof e=="number"?String(e):typeof e=="boolean"&&e?"true":e:"","handleExpression"),$=o((e,...n)=>e.reduce((c,s,p)=>`${c}${s}${xt(n[p])}`,"").trim(),"jsx");var sr=o((e,n)=>`
    ${e??""}
    
    render(typeof ${n} !== "undefined" ? <${n} /> : <></>);
    `,"prepareLiveCode");var ir=o(e=>e==null?void 0:e.replace(/(\/\* hidden-start \*\/)(.|\n)*?(\/\* hidden-end \*\/)/g,""),"removeHiddenCode");var $t=/^[a-zA-Z_$][a-zA-Z_$0-9]*$/,cr=o(e=>$t.test(e),"shouldDotAccess");function ur(e,n,i){let c=`${e}`;return n&&(c+="?.",cr(n)?c+=n:c+=`['${n}']`),i&&(c+="?.",cr(i)?c+=i:c+=`['${i}']`),c}o(ur,"accessorSingle");function bt(e,n,i){return(i??[]).map(s=>ur(e,n,s))}o(bt,"accessorMultiple");var d=o((e,n,i,c=' + " " + ')=>Array.isArray(i)?c?bt(e,n,i).join(c):ur(e,n,i[0]):ur(e,n,i),"accessor"),_=o((e,n,i)=>{let c=e;return n&&(c+=`.${n}`),i&&(Array.isArray(i)?c+=`.${i[0]}`:c+=`.${i}`),c},"dotAccessor");var me=o(e=>{let n=e.reduce((c,[s,p,f])=>(c[p]||(c[p]=[]),c[p].includes(s)||(f?c[p].push([s,!0]):c[p].push(s)),c),{});return Object.entries(n).map(([c,s])=>{let p=s.find(k=>Array.isArray(k)&&k[1]),f=s.filter(k=>typeof k=="string"),m=p?`${p[0]}`:"",l=f.length?`{ ${f.join(", ")} }`:"";return`import ${m}${m&&l?", ":""}${l} from "${c}";`})},"printImports");var Ft=/^id$/i,Re=o(e=>Ft.test(e),"isIDKey");var Pe=o(e=>{var n;return e.relationInfer&&(n=e.relationInfer)!=null&&n.accessor?Array.isArray(e.relationInfer.accessor)?`optionLabel: "${e.relationInfer.accessor[0]}",`:e.relationInfer.accessor!=="title"?`optionLabel: "${e.relationInfer.accessor}",`:"":""},"getOptionLabel");var le=o(e=>{},"noOp");var P=o((e,n="")=>{if(Number.isInteger(Number(e)))return n.charAt(0).toLowerCase()+n.slice(1)+e;let c=e.replace(/^\d+/,"").replace(/[^a-zA-Z0-9]/g,"-"),s=be(c).replace(/ /g,"");return`${s.charAt(0).toLowerCase()+s.slice(1)}${n.charAt(0).toUpperCase()+n.slice(1)}`},"getVariableName");var z=o((e,n,i)=>{var H,v,y,w;if(!(n&&i&&e)||!Object.keys(n).length)return"";let c=e?n[e]:{},s=[],p=i.find(E=>c[E]),f=c==null?void 0:c[p||"default"];if(!f)return"";let{gqlQuery:m,gqlMutation:l,...k}=f;Object.keys(k).forEach(E=>{s.push(`${E}: ${JSON.stringify(k[E])}`)}),m&&s.push(`gqlQuery: gql\`${(v=(H=m==null?void 0:m.loc)==null?void 0:H.source)==null?void 0:v.body}\``),l&&s.push(`gqlMutation: gql\`${(w=(y=l==null?void 0:l.loc)==null?void 0:y.source)==null?void 0:w.body}\``);let x=s.join(",");return x.length?`meta:{${x}}`:""},"getMetaProps"),ie=o((e,n,i)=>{if(n&&i&&e){let c=e?n[e]:{},p=[...i,"default"].reduce((f,m)=>f??(c==null?void 0:c[m]),void 0);if(p)return p}},"pickMeta");var Ee=o(e=>e===void 0?e:typeof e=="string"?`"${e}"`:e,"idQuoteWrapper");var ce=o((e,n)=>{for(let i in e)if(n.includes(i)||typeof e[i]=="object"&&e[i]!==null&&ce(e[i],n))return!0;return!1},"deepHasKey");var wr=o(e=>{let n=o((i,c,s,p=n,f)=>{let m=e.map(k=>k(i,c,s,p,f));return Je(m)},"fieldInferencer");return n},"composeInferencers");var Ar=o(e=>o((i,c,s,p,f,m)=>e.reduce((l,k)=>k(l,c,s,p,f,m),i),"fieldTransformer"),"composeTransformers");var Tr=o((e,n,i,c,s)=>{let p=Array.isArray(n),f=Array.isArray(n)&&n.every(m=>typeof m=="string"||typeof m=="number");if(p){if(!f){let l=c(e,n[0],i,c,s);return l?{...l,key:e,multiple:!0,priority:1}:!1}let m=c(e,n[0],i,c,s)||{type:"string"};return{key:e,multiple:!0,priority:1,type:m==null?void 0:m.type}}return!1},"arrayInfer");var Hr=o((e,n)=>typeof n=="boolean"?{key:e,type:"boolean"}:!1,"booleanInfer");var pr=K(require("dayjs"));var vt=/(_at|_on|At|On|AT|ON)(\[\])?$/,Ct=["/",":","-","."],Lr=o((e,n)=>{let i=vt.test(e)&&(0,pr.default)(n).isValid(),c=typeof n=="string"&&(0,pr.default)(n).isValid();return typeof n=="string"&&Ct.some(p=>n.includes(p))&&(i||c)?{key:e,type:"date",priority:1}:!1},"dateInfer");var St=/^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,Rr=o((e,n)=>typeof n=="string"&&St.test(n)?{key:e,type:"email",priority:1}:!1,"emailInfer");var wt=/\.(gif|jpe?g|tiff?|png|webp|bmp|svg)$/i,Pr=o((e,n)=>typeof n=="string"&&wt.test(n)?{key:e,type:"image",priority:2}:!1,"imageInfer");var Er=o((e,n)=>typeof n>"u"||n===null?null:!1,"nullishInfer");var Mr=o((e,n)=>{let i=typeof n=="string"&&n.length>0,c=!Number.isNaN(Number(n));return i&&c||typeof n=="number"?{key:e,type:"number"}:!1},"numberInfer");var Vr=/id$/i,Nr=o((e,n,i,c,s)=>{let p=n!==null,f=!Array.isArray(n);if(p&&f&&typeof n=="object"){let l=Object.keys(n).length===1&&Vr.test(Object.keys(n)[0]),k=Object.keys(n).some(v=>Vr.test(v));if(l)return{key:e,type:"relation",relation:!0,accessor:"id",priority:1};let x=Ze(e,n);if((x?x.length>0:!1)&&x){let v=x&&Array.isArray(x)?x[0]:x,y=c(v,n[v],n,c,s);if(y){let w=Array.isArray(x)?x.map(E=>y.accessor?`${E}.${Array.isArray(y.accessor)?y.accessor[0]:y.accessor}`:E):y.accessor?Array.isArray(y.accessor)?`${x}.${y.accessor[0]}`:`${x}.${y.accessor}`:x;return(y==null?void 0:y.type)==="text"&&(s==="create"||s==="edit")&&k?{key:e,type:"relation",relation:!0,accessor:"id",priority:1}:{...y,fieldable:!0,key:e,accessor:w,priority:1}}}return{key:e,fieldable:!1,type:"object",priority:1}}return!1},"objectInfer");var Br=o((e,n)=>typeof n=="string"&&n.length>100?{key:e,type:"richtext",priority:1}:!1,"richtextInfer");var Dr=o((e,n)=>typeof n=="string"?{key:e,type:"text"}:!1,"textInfer");var At=/^(https?|ftp):\/\/(-\.)?([^\s/?\.#-]+\.?)+(\/[^\s]*)?$/i,Or=o((e,n)=>typeof n=="string"&&At.test(n)?{key:e,type:"url",priority:1}:!1,"urlInfer");var zr=[Tr,Hr,Lr,Rr,Pr,Er,Mr,Nr,vr,Br,Dr,Or];var jr=o((e,n,i,c)=>e.map(p=>{if(!p.relation&&(p.type==="text"||p.type==="richtext"||p.type==="number")&&!p.canRelation){let f=/^[a-z0-9-]+$/,m=o(v=>f.test(`${v}`),"isValidUUID"),l=p.key.toLowerCase()!=="id";return!(!p.accessor||typeof p.accessor=="string")||!l?p:(p.multiple?c[p.key]:[c[p.key]]).every(v=>m(p.accessor?v[p.accessor]:v))?{...p,canRelation:!0}:p}return p}),"basicToRelation");var Tt=/(image|photo|avatar|cover|thumbnail|icon)/i,qr=o(e=>e.map(i=>i.type==="url"&&Tt.test(i.key)?{...i,type:"image"}:i),"imageByKey");var Kr=o((e,n)=>e.map(c=>{let s=ar(c,n);return s?{...c,relation:!0,type:"relation",resource:s}:c}),"relationByResource");var Ur=o((e,n,i,c,s,p)=>e.map(m=>{if(m.relation&&m.type==="relation"&&!m.resource){let l=m.accessor?c[m.key][m.accessor]:c[m.key],k=s(m.key,l,c,s,p);if(k&&k.type!=="relation")return{...m,fieldable:!0,relation:!1,type:k.type,canRelation:!0}}return m}),"relationToFieldable");var Qr=[qr,Kr,Ur,jr];var ne=K(require("react")),Ht=K(require("@refinedev/core")),Lt=K(require("graphql-tag")),Oe=require("@aliemir/react-live");var Gr=[["react","React",ne.default],["@refinedev/core","RefineCore",Ht],["graphql-tag","GraphqlTag",Lt]],mr=ne.default.createContext({}),lr=o(({fetchError:e,code:n,additionalScope:i,errorComponent:c})=>{let s=(n&&nr(or(n,[...Gr,...i??[]].reduce((m,[l,k,x,H])=>H?m:{...m,[l]:k},{}))))??"",p=ne.default.useMemo(()=>({React:ne.default,...ne.default,...[...Gr,...i??[]].reduce((m,[l,k,x])=>({...m,[k]:x}),{})}),[i]),f=ne.default.useMemo(()=>o(()=>{let{error:l}=ne.default.useContext(mr);return c?ne.default.createElement(c,{error:l?`<p>An error occured while rendering the generated component.You can check the generated code from the below "Show Code" button and fix the error manually.</p>
                                    <p>If you think this is a bug, please report the issue at <a target="_blank" rel="noopener noreferrer" href="https://github.com/refinedev/refine/issues">https://github.com/refinedev/refine/issues</a></p>
                                    <p>Exception:</p>
                                    <code>${l}</code>`:typeof e=="string"?e:e?`<p>Something went wrong while fetching the resource data.</p>
                                    <p>To learn more about the Inferencer, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`:void 0}):null},"LiveErrorComponent"),[c,e]);return ne.default.createElement(Oe.LiveProvider,{Context:mr,code:s,scope:p,noInline:!0},!e&&ne.default.createElement(Oe.LivePreview,{Context:mr}),ne.default.createElement(f,null))},"LiveComponent");var g=K(require("react")),ze=K(require("prism-react-renderer")),Wr=K(require("prism-react-renderer/themes/vsDark"));var ge=o(({code:e,loading:n})=>{let i=g.default.useMemo(()=>Xe(e??""),[e]),[c,s]=g.default.useState(!1),[p,f]=g.default.useState(!1),[m,l]=g.default.useState(!1),[k,x]=g.default.useState(!1),[H,v]=g.default.useState(!1);return g.default.useEffect(()=>{if(!n){let y=setTimeout(()=>{s(!0)},300);return()=>{clearTimeout(y)}}return()=>{}},[n]),g.default.useEffect(()=>{if(typeof window<"u"){let y=window.matchMedia("(max-width: 449px)");y.matches?l(!1):l(!0);let w=o(()=>{y.matches?l(!1):l(!0)},"handleResize");return window.addEventListener("resize",w),()=>{window.removeEventListener("resize",w)}}return()=>{}},[]),g.default.useEffect(()=>{if(typeof window<"u"){let y=window.matchMedia("(max-width: 1280px)");y.matches?x(!0):x(!1);let w=o(()=>{y.matches?x(!0):x(!1)},"handleResize");return window.addEventListener("resize",w),()=>{window.removeEventListener("resize",w)}}return()=>{}},[]),i&&!n?g.default.createElement(g.default.Fragment,null,m&&g.default.createElement("div",{className:"refine-inferencer--code-viewer",style:{position:"sticky",bottom:"24px",paddingTop:"24px",left:0,right:0,width:"100%",zIndex:10,display:"flex",justifyContent:"center",transition:"all 0.2s ease",opacity:c&&!p?1:0,transform:c&&!p?"translateY(0)":"translateY(100px)"}},g.default.createElement("div",{style:{width:"calc(100% - calc(64px * 2))",maxWidth:"1080px",padding:"20px",backgroundColor:"#1A1A1A",boxShadow:"0px 4px 16px -4px rgba(0, 0, 0, 0.5), 0px 8px 32px -8px rgba(0, 0, 0, 0.35)",borderRadius:"16px",display:"flex",alignItems:"center",justifyContent:"space-between",flexDirection:k?"column":"row",gap:"12px"}},g.default.createElement("div",{style:{display:"flex",alignItems:"flex-start",gap:"8px"}},g.default.createElement("div",null,g.default.createElement(Pt,null)),g.default.createElement("div",{style:{fontSize:"14px",lineHeight:"20px",color:"#ffffff"}},g.default.createElement("p",{style:{padding:0,margin:0}},"Most of the page code is auto-generated by the"," ",g.default.createElement("span",{style:{textDecoration:"underline"}},"Inferencer")," ","feature, based on your backend data structure."),g.default.createElement("p",{style:{padding:0,margin:0}},"While this is an excellent way to experiment with refine,"," ",g.default.createElement("span",{style:{fontWeight:600}},"it's not intended to be used on production.")))),g.default.createElement("div",null,g.default.createElement("button",{onPointerEnter:()=>v(!0),onPointerLeave:()=>v(!1),onClick:()=>f(!0),style:{appearance:"none",border:"none",padding:"10px 16px",borderRadius:"4px",display:"flex",alignItems:"center",justifyContent:"center",background:"#0080FF",color:"#ffffff",fontSize:"14px",lineHeight:"20px",fontWeight:600,gap:"8px",cursor:"pointer",transition:"all 0.2s ease",transform:H?"scale(1.025)":void 0,filter:H?"brightness(1.1)":void 0}},g.default.createElement(Zr,{style:{flexShrink:0}}),g.default.createElement("span",null,"Show the auto-generated code"))))),g.default.createElement(Rt,{visible:p,onClose:()=>f(!1),code:i})):null},"SharedCodeViewer"),Rt=o(({visible:e,onClose:n,code:i=""})=>{let c=g.default.useRef(null),[s,p]=g.default.useState(!1),[f,m]=g.default.useState(!1),[l,k]=g.default.useState(!1),[x,H]=g.default.useState(!1);g.default.useEffect(()=>{if(typeof document<"u"){let a=o(I=>{c.current&&!c.current.contains(I.target)&&n()},"onOutsideClick");return document.addEventListener("pointerdown",a),()=>{document.removeEventListener("pointerdown",a)}}return()=>{}},[n]);let v=o(()=>{typeof navigator<"u"&&(navigator.clipboard.writeText(i),p(!0),setTimeout(()=>{p(!1)},1e3))},"onCopy"),y=g.default.createElement("div",{style:{display:"flex",justifyContent:"space-between",alignItems:"center"}},g.default.createElement("div",{style:{fontWeight:700,fontSize:"20px",lineHeight:"32px",color:"#0D0D0D"}},"Auto-generated code by Inferencer"),g.default.createElement("button",{onClick:n,onPointerEnter:()=>k(!0),onPointerLeave:()=>k(!1),style:{flexShrink:0,appearance:"none",border:"none",background:"none",padding:0,margin:0,outline:"none",borderRadius:"50px",width:"32px",height:"32px",cursor:"pointer",transition:"all 0.15s ease",transform:l?"scale(1.05)":void 0,filter:l?"brightness(0.8)":void 0}},g.default.createElement(Et,null))),w=g.default.createElement("div",{style:{fontSize:"13px",borderRadius:"8px",flex:"1",overflow:"scroll",background:"#1E1E1E"}},g.default.createElement(ze.default,{...ze.defaultProps,theme:Wr.default,code:i,language:"tsx"},({className:a,style:I,tokens:u,getLineProps:V,getTokenProps:M})=>g.default.createElement("pre",{className:a,style:{...I,padding:"14px 14px 14px 14px",margin:"0",width:"100%",boxSizing:"border-box"}},u.map((S,D)=>g.default.createElement("div",{key:D,...V({line:S,key:D})},S.map((N,t)=>g.default.createElement("span",{key:t,...M({token:N,key:t})})))))));return g.default.createElement("div",{className:"refine-inferencer--code-viewer-modal",style:{position:"fixed",top:0,left:0,right:0,bottom:0,zIndex:9999,backgroundColor:"rgba(0, 0, 0, 0.5)",transition:"all 0.2s ease",opacity:e?1:0,pointerEvents:e?"all":"none",display:"flex",justifyContent:"center",alignItems:"center"}},g.default.createElement("div",{ref:c,style:{transform:e?"scale(1) translateY(0px)":"scale(0) translateY(-200px)",transition:"all 0.25s cubic-bezier(.35,1.29,.81,1.08)",transitionDelay:"0.25",width:"calc(100% - calc(32px * 2))",height:"calc(100% - calc(32px * 2))",backgroundColor:"#fff",maxWidth:"640px",maxHeight:"720px",borderRadius:"8px",padding:"16px"}},g.default.createElement("div",{style:{display:"flex",flexDirection:"column",height:"100%",width:"100%",gap:"16px"}},y,w,g.default.createElement("div",{style:{display:"flex",justifyContent:"flex-start",alignItems:"flex-end",gap:"16px"}},g.default.createElement("button",{onPointerEnter:()=>m(!0),onPointerLeave:()=>m(!1),onClick:v,style:{appearance:"none",height:"40px",border:"none",padding:"10px 16px",borderRadius:"4px",display:"flex",alignItems:"center",justifyContent:"center",background:"#0080FF",color:"#ffffff",fontSize:"14px",lineHeight:"20px",fontWeight:600,gap:"8px",cursor:"pointer",position:"relative",overflow:"hidden",transition:"filter 0.2s ease",transform:f?"scale(1.025)":"scale(1)",filter:f?"brightness(1.1)":void 0}},g.default.createElement(_r,{style:{flexShrink:0,marginTop:"-2px",marginBottom:"-2px"}}),g.default.createElement("span",null,"Copy Generated Code"),g.default.createElement("div",{style:{position:"absolute",width:"100%",height:"100%",top:0,left:0,display:"flex",alignItems:"center",justifyContent:"center",background:"#0080FF",transition:"all 0.2s ease",transform:s?"translateY(0)":"translateY(40px)"}},g.default.createElement(_r,{style:{flexShrink:0,marginTop:"-2px",marginBottom:"-2px"}}),g.default.createElement("span",null,"Copied!"))),g.default.createElement("a",{onPointerEnter:()=>H(!0),onPointerLeave:()=>H(!1),href:"https://refine.dev/docs/packages/documentation/inferencer",target:"_blank",rel:"noreferrer",style:{appearance:"none",textDecoration:"none",border:"none",padding:"10px 16px",borderRadius:"4px",display:"flex",alignItems:"center",justifyContent:"center",background:"rgba(0, 128, 255, 0.1)",color:"#0080FF",fontSize:"14px",lineHeight:"20px",fontWeight:600,gap:"8px",cursor:"pointer",transition:"all 0.2s ease",transform:x?"scale(1.025)":void 0,filter:x?"brightness(1.1)":void 0}},g.default.createElement(Zr,{style:{flexShrink:0}}),g.default.createElement("span",null,"Learn more about inferencer"))))))},"CodeModal"),Pt=o(e=>g.default.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:20,height:20,fill:"none",...e},g.default.createElement("path",{fill:"#0080FF",fillRule:"evenodd",d:"M10 20C4.477 20 0 15.523 0 10S4.477 0 10 0s10 4.477 10 10-4.477 10-10 10Zm0-15a1.25 1.25 0 1 0 0 2.5A1.25 1.25 0 0 0 10 5Zm0 10c.69 0 1.25-.56 1.25-1.25V10a1.25 1.25 0 1 0-2.5 0v3.75c0 .69.56 1.25 1.25 1.25Z",clipRule:"evenodd"})),"InfoIcon"),Zr=o(e=>g.default.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:16,height:16,fill:"none",...e},g.default.createElement("path",{fill:"currentColor",d:"M5 2a1 1 0 0 1 0 2H4v8h8v-1a1 1 0 1 1 2 0v1a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h1Z"}),g.default.createElement("path",{fill:"currentColor",d:"M9 2a1 1 0 0 0 0 2h1.586L6.293 8.293a1 1 0 0 0 1.414 1.414L12 5.414V7a1 1 0 1 0 2 0V3a1 1 0 0 0-1-1H9Z"})),"OpenIcon"),Et=o(e=>g.default.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:32,height:32,fill:"none",...e},g.default.createElement("path",{fill:"#A6A6A6",fillRule:"evenodd",d:"M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16Zm-2.586-21.414a2 2 0 1 0-2.828 2.828L13.172 16l-2.586 2.586a2 2 0 1 0 2.828 2.828L16 18.828l2.586 2.586a2 2 0 1 0 2.828-2.828L18.828 16l2.586-2.586a2 2 0 1 0-2.828-2.828L16 13.172l-2.586-2.586Z",clipRule:"evenodd"})),"CloseIcon"),_r=o(e=>g.default.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:20,height:20,viewBox:"0 0 24 24",fill:"none",...e},g.default.createElement("path",{fill:"currentColor",fillRule:"evenodd",d:"M8 5a3 3 0 0 0 3 3h2a3 3 0 0 0 3-3h1a2 2 0 0 1 2 2v11a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2h1Zm0 7a1 1 0 0 1 1-1h6a1 1 0 1 1 0 2H9a1 1 0 0 1-1-1Zm1 3a1 1 0 1 0 0 2h4a1 1 0 1 0 0-2H9Z",clipRule:"evenodd"}),g.default.createElement("path",{fill:"currentColor",d:"M13 4a1 1 0 1 1 0 2h-2a1 1 0 1 1 0-2h2Z"})),"ClipboardIcon");var ye=K(require("react")),je=require("@refinedev/core");var Yr=o((e,n,i,c)=>{let{resource:s,id:p,resources:f}=(0,je.useResource)(n),m=i??p,l=(0,je.useDataProvider)(),[k,x]=ye.default.useState(void 0),[H,v]=ye.default.useState(void 0),[y,w]=ye.default.useState(void 0),[E,a]=ye.default.useState(!0),[I,u]=ye.default.useState(!1),V=ye.default.useCallback(async M=>{var N;let S=He(s)??Ye(s==null?void 0:s.name,void 0,f),D=l(S);u(!0),x(void 0);try{if((e==="list"||e==="create")&&s){let t=await D.getList({resource:s==null?void 0:s.name,meta:ie((s==null?void 0:s.identifier)??(s==null?void 0:s.name),c,["getList"])}),h=(N=t.data)==null?void 0:N[0];h||x(`<p>No records/data found for resource "${s==null?void 0:s.name}".</p>
                            <p>Please check your data provider and resource.</p>
                            <p>For more info, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`),v(h),w(t.data),setTimeout(()=>{u(!1)},500)}if((e==="edit"||e==="show")&&M&&s){let h=(await D.getOne({resource:s==null?void 0:s.name,id:M,meta:ie((s==null?void 0:s.identifier)??(s==null?void 0:s.name),c,["getOne"])})).data;h||x(`<p>No records/data found for resource "${s==null?void 0:s.name}".</p>
                            <p>Please check your data provider and resource.</p>
                            <p>For more info, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`),v(h),setTimeout(()=>{u(!1)},500)}}catch(t){console.warn("An error occured while fetching the resource data. Please check the error message below:",t),x(`<p>Something went wrong while fetching the resource data.</p>
                    <p>Please check your data provider and API for resource "${s==null?void 0:s.name}".</p>
                    <p>For more info, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`),setTimeout(()=>{u(!1)},500)}},[e,l,s,f]);return ye.default.useEffect(()=>{a(!1),!I&&!H&&V(m)},[V,m]),{data:H,datas:y,loading:I,initial:E,error:k}},"useInferFetch");var Fe=K(require("react")),Jr=require("@refinedev/core");var dr=K(require("lodash/get"));var Xr=o(({record:e,fields:n,infer:i,meta:c})=>{let s=(0,Jr.useDataProvider)(),[p,f]=Fe.default.useState([]),[m,l]=Fe.default.useState(!0),[k,x]=Fe.default.useState(!1),H=Fe.default.useCallback(async v=>{console.groupCollapsed("@refinedev/inferencer is trying to detect relations");let y=[];x(!0);try{let w=v.map(async a=>{var I,u,V,M;if(a&&(a.relation||a.canRelation)&&e){if(a.relationInfer)return a;let S=He(a.resource),D=s(S),N=a.multiple,t=Array.isArray(a.accessor)?void 0:a.multiple?e[a.key].map(h=>a.accessor?(0,dr.default)(h,a.accessor):h)[0]:a.accessor?(0,dr.default)(e[a.key],a.accessor):e[a.key];if(t&&a.resource)try{let h={};if(N&&D.getMany){let{data:U}=await D.getMany({resource:a.resource.name,ids:[t],meta:ie(((I=a.resource)==null?void 0:I.identifier)??((u=a.resource)==null?void 0:u.name),c,["getMany"])});h=U==null?void 0:U[0]}else{let{data:U}=await D.getOne({resource:a.resource.name,id:t,meta:ie(((V=a.resource)==null?void 0:V.identifier)??((M=a.resource)==null?void 0:M.name),c,N?["getMany","getOne"]:["getOne"])});h=U}y.push({status:"success",resource:a.resource.name,field:a.key});let W=i("__",h,{},i);return{...a,relationInfer:W}}catch{return y.push({status:"error",resource:a.resource.name,field:a.key}),{...a,relationInfer:null}}if(t){let h,W;try{let C={};if(N&&D.getMany){let{data:F}=await D.getMany({resource:pe(Q(a.key)),ids:[t],meta:ie(pe(Q(a.key)),c,["getMany"])});C=F==null?void 0:F[0]}else{let{data:F}=await D.getOne({resource:pe(Q(a.key)),id:t,meta:ie(pe(Q(a.key)),c,N?["getMany","getOne"]:["getOne"])});C=F}y.push({status:"success",resource:pe(Q(a.key)),field:a.key}),h=C,W=!0}catch{y.push({status:"error",resource:pe(Q(a.key)),field:a.key});let F={};try{if(N&&D.getMany){let{data:A}=await D.getMany({resource:X(Q(a.key)),meta:ie(X(Q(a.key)),c,["getMany"]),ids:[t]});F=A==null?void 0:A[0]}else{let{data:A}=await D.getOne({resource:X(Q(a.key)),meta:ie(X(Q(a.key)),c,N?["getMany","getOne"]:["getOne"]),id:t});F=A}y.push({status:"success",resource:X(Q(a.key)),field:a.key}),h=F,W=!1}catch{return y.push({status:"error",resource:X(Q(a.key)),field:a.key}),{...a,relationInfer:null}}}let U=i("__",h,{},i),r=Q(a.key);return{...a,relation:!0,type:"relation",resource:{name:W?pe(r):X(r)},fieldable:!1,canRelation:void 0,relationInfer:U}}return{...a,relationInfer:null}}return a}),E=await Promise.all(w);f(E.filter(a=>a)),setTimeout(()=>{x(!1)},500)}catch{setTimeout(()=>{x(!1)},500)}setTimeout(()=>{console.log(`Tried to detect relations with ${y.length} attempts and succeeded with ${y.filter(w=>w.status==="success").length} attempts.`),console.groupEnd(),console.info("@refinedev/inferencer may send multiple requests to your API for nonexistent resources when trying to detect relations. To learn more about how the inferencer works, visit https://s.refine.dev/how-inferencer-works")},500)},[s,e]);return Fe.default.useEffect(()=>{l(!1),!k&&n&&n.length>0&&p.length===0&&H(n)},[H,k,n,H]),{fields:p,loading:k,initial:m}},"useRelationFetch");var he=o(({type:e,additionalScope:n=[],customElements:i=[],fieldTransformers:c=[],renderer:s,loadingComponent:p,errorComponent:f,codeViewerComponent:m})=>{let l=wr([...zr,...i]),k=Ar([...Qr,...c]),x=o(({resourceName:v,fieldTransformer:y,hideCodeViewerInProduction:w,meta:E,id:a})=>{var Ne,Be;let{resource:I,resources:u}=(0,ve.useResource)(v),{i18nProvider:V}=(0,Z.useContext)(ve.TranslationContext),{resource:M}=(0,ve.useResource)(),{data:S,datas:D,loading:N,initial:t,error:h}=Yr(e,v??(I==null?void 0:I.name),a,E),W=o((R,L,ee)=>{let re=l(R,L,ee,l,e);if(re&&I){let te=k([re],u,I,ee,l,e),q=y?te.flatMap(O=>{let J=y(O);return J?[J]:[]}):te;return q==null?void 0:q[0]}},"inferSingleField"),U=o(R=>Object.keys(R).map(ee=>{let re=R[ee];return W(ee,re,R)}).filter(Boolean),"inferSingleRecord"),r=o(R=>{let L=R.map(O=>U(O)),ee=R.flatMap(O=>Object.keys(O)).filter((O,J,we)=>we.indexOf(O)===J),re={},te=ee.map(O=>{let J=L.map(de=>de.find(ue=>ue.key===O));return J.reduce((de,ue,De)=>{if(!ue)return de;let Ae=J.filter(fe=>(fe==null?void 0:fe.key)===ue.key&&(fe==null?void 0:fe.type)===ue.type).length;return Ae>de.count?(re[O]=R[De][O],{count:Ae,field:ue}):de},{count:0,field:void 0}).field});return{commonRecord:re,inferredFields:te}},"inferMultipleRecords"),[C,F]=Z.default.useMemo(()=>{if(D&&(e==="list"||e==="create")){let R=r(D);return[R.inferredFields,R.commonRecord]}if(S){let R=Object.keys(S).map(L=>{let ee=S[L];return l(L,ee,S,l,e)}).filter(Boolean);if(I){let L=k(R,u,I,S,l,e);return[y?L.flatMap(re=>{let te=y(re);return te?[te]:[]}):L,S]}return[[],S]}return[[],void 0]},[S,D,u,I,y]),{fields:A,loading:T}=Xr({record:F,fields:C,infer:l,meta:E}),Y=Z.default.useMemo(()=>{let R=[];return A.forEach((L,ee,re)=>{if(L.resource){if(R.findIndex(q=>{var O,J;return((O=q.resource)==null?void 0:O.name)===((J=L.resource)==null?void 0:J.name)})>-1)return;let te=re.filter((q,O)=>{var J,we,de,ue,De,Ae;if(O!==ee){let fe=L.resource,it=q.resource,ct=((J=q.resource)==null?void 0:J.identifier)||((we=L.resource)==null?void 0:we.identifier)?((de=q.resource)==null?void 0:de.identifier)===((ue=L.resource)==null?void 0:ue.identifier):((De=q.resource)==null?void 0:De.name)===((Ae=L.resource)==null?void 0:Ae.name);return fe&&it&&ct}return!1});if(te.length>0)if(e==="create"||e==="edit"){let q;[L,...te].find(O=>{O.fieldable!==!0&&q===void 0&&(q=O)}),q?R.push(q):R.push(L)}else{let q;[L,...te].find(O=>{O.fieldable!==!1&&q===void 0&&(q=O)}),q?R.push(q):R.push(L)}else R.push(L)}else R.push(L)}),R},[A,e]),Ve=Z.default.useMemo(()=>!N&&!T&&!t&&I?s({resource:I,resources:u,fields:Y,infer:l,meta:E,isCustomPage:I.name!==(M==null?void 0:M.name),id:a,i18n:!!V}):"",[I,u,Y,N,T]),We=w;return Z.default.createElement(Z.default.Fragment,null,p&&(N||T)&&Z.default.createElement(p,null),!N&&!T&&Z.default.createElement(Z.default.Fragment,null,Z.default.createElement(lr,{fetchError:!N&&h?h:!N&&!t&&!S,code:sr(Ve,se(((Ne=I==null?void 0:I.meta)==null?void 0:Ne.label)??((Be=I==null?void 0:I.options)==null?void 0:Be.label)??(I==null?void 0:I.label)??(I==null?void 0:I.name)??"Resource",e)),errorComponent:f,additionalScope:n}),typeof m<"u"&&!We?Z.default.createElement(m,{code:ir(Ve),loading:N||T}):null))},"Inferencer");return o(({name:v,resource:y,fieldTransformer:w,meta:E,hideCodeViewerInProduction:a,id:I})=>{let{resource:u}=(0,ve.useResource)(y??v),V=`${(u==null?void 0:u.identifier)??(u==null?void 0:u.name)}-${e}-${I}`;return Z.default.createElement(x,{hideCodeViewerInProduction:a,fieldTransformer:w,resourceName:y??v,meta:E??{},key:V,id:I})},"InferencerComponent")},"createInferencer");var Ce=K(require("react")),ke=require("@chakra-ui/react");var Ie=o(({error:e})=>e?Ce.default.createElement(ke.Center,{style:{minHeight:300}},Ce.default.createElement(ke.Alert,{status:"error",variant:"subtle",flexDirection:"column",alignItems:"center",justifyContent:"center",textAlign:"center",height:"200px",maxWidth:"700px"},Ce.default.createElement(ke.AlertIcon,{boxSize:"40px",mr:0}),Ce.default.createElement(ke.AlertDescription,{mt:4,maxWidth:"sm"},Ce.default.createElement("div",{dangerouslySetInnerHTML:{__html:e??""}})))):null,"ErrorComponent");var fr=K(require("react")),qe=require("@chakra-ui/react");var xe=o(()=>fr.default.createElement(qe.Box,{position:"relative",bg:"chakra-body-bg",minH:120},fr.default.createElement(qe.Spinner,{position:"absolute",top:"50%",left:"50%",transform:"translate(-50%, -50%)"})),"LoadingComponent");var gr=o(({resource:e,fields:n,meta:i,isCustomPage:c,id:s,i18n:p})=>{let f=se(e.label??e.name,"show"),m="record",l=[["useShow","@refinedev/core"],["Show","@refinedev/chakra-ui"],["Heading","@chakra-ui/react"]];p&&l.push(["useTranslate","@refinedev/core"]),ce(i||{},["gqlQuery","gqlMutation"])&&l.push(["gql","graphql-tag",!0]);let H=n.filter(t=>(t==null?void 0:t.relation)&&!(t!=null&&t.fieldable)&&(t==null?void 0:t.resource)).filter(Boolean).map(t=>{var h,W,U,r;if(t!=null&&t.relation&&!t.fieldable&&t.resource){if(t.multiple){l.push(["useMany","@refinedev/core"]);let C=d(m,t.key);return t.accessor&&(C=`${d(m,t.key)}?.map((item: any) => ${d("item",void 0,t.accessor)})`),`
                const { data: ${P(t.key,"Data")}, isLoading: ${P(t.key,"IsLoading")} } =
                useMany({
                    resource: "${t.resource.name}",
                    ids: ${C} || [],
                    queryOptions: {
                        enabled: !!${m} && !!${C}?.length,
                    },
                    ${z(((h=t==null?void 0:t.resource)==null?void 0:h.identifier)??((W=t==null?void 0:t.resource)==null?void 0:W.name),i,["getMany"])}
                });
                `}return l.push(["useOne","@refinedev/core"]),`
                const { data: ${P(t.key,"Data")}, isLoading: ${P(t.key,"IsLoading")} } =
                useOne({
                    resource: "${t.resource.name}",
                    id: ${d(m,t.key,t.accessor,!1)} || "",
                    queryOptions: {
                        enabled: !!${m},
                    },
                    ${z(((U=t==null?void 0:t.resource)==null?void 0:U.identifier)??((r=t==null?void 0:t.resource)==null?void 0:r.name),i,["getOne"])}
                });
            `}}).filter(Boolean),v=o(t=>{if(t.relation&&t.resource){let h=P(t.key,"Data"),W=P(t.key,"IsLoading");if(t.multiple){let U=`${d(m,t.key)}?.length`;return l.push(["TagField","@refinedev/chakra-ui"],["HStack","@chakra-ui/react"]),$`
                <Heading as="h5" size="sm" mt={4}>${b({resource:e,field:t,i18n:p,noQuotes:!0})}</Heading>
                {${W} && ${U} ? <>Loading...</> : (
                    <>
                    ${(()=>{var r;if(t.relationInfer){if((r=t.relationInfer)!=null&&r.accessor){if(Array.isArray(t.relationInfer.accessor))return console.log("@refinedev/inferencer: Inferencer failed to render this field",{key:t.key,relation:t.relationInfer}),'<span title="Inferencer failed to render this field. (Unsupported nesting)">Cannot Render</span>';let C=P(t.key),F=d(C,void 0,t.relationInfer.accessor);return`{record?.${t.key}?.length ? <HStack spacing="12px">{${h}?.data?.map((${C}: any) => <TagField key={${F}} value={${F}} />)}</HStack> : <></>}`}return console.log("@refinedev/inferencer: Inferencer failed to render this field",{key:t.key,relation:t.relationInfer}),'<span title="Inferencer failed to render this field. (Cannot find key)">Cannot Render</span>'}return console.log("@refinedev/inferencer: Inferencer failed to render this field",{key:t.key}),'<span title="Inferencer failed to render this field (Cannot find relation)">Cannot Render</span>'})()}
                    </>
                )}
                `}return t.fieldable?$`
                <Heading as="h5" size="sm" mt={4}>${b({resource:e,field:t,i18n:p,noQuotes:!0})}</Heading>
                <TextField value={${d(m,t.key,t.accessor)}} />
                `:$`
                <Heading as="h5" size="sm" mt={4}>${b({resource:e,field:t,i18n:p,noQuotes:!0})}</Heading>
                {${W} ? <>Loading...</> : (
                    <>
                    ${(()=>{var U,r,C;if(t.relationInfer){if((U=t.relationInfer)!=null&&U.accessor)return Array.isArray(t.relationInfer.accessor)?`{${d(`${h}?.data`,void 0,t.relationInfer.accessor,' + " " + ')}}`:`{${h}?.data?.${t.relationInfer.accessor}}`;let F=((r=t==null?void 0:t.relationInfer)==null?void 0:r.type)==="object"&&!((C=t==null?void 0:t.relationInfer)!=null&&C.accessor);return F&&console.log("@refinedev/inferencer: Inferencer failed to render this field",{key:t.key,relation:t.relationInfer}),F?'<span title="Inferencer failed to render this field. (Cannot find key)">Cannot Render</span>':`{${h}?.data}`}return`{${h}?.data?.id}`})()}
                    </>
                )}
                
                `}},"renderRelationFields"),y=o(t=>{if(t.type==="text"){if(l.push(["TagField","@refinedev/chakra-ui"],["TextField","@refinedev/chakra-ui"],["HStack","@chakra-ui/react"]),t.multiple){let h=d("item",void 0,t.accessor);return $`
                <Heading as="h5" size="sm" mt={4}>${b({resource:e,field:t,i18n:p,noQuotes:!0})}</Heading>
                <HStack spacing="12px">
                {${d(m,t.key)}?.map((item: any) => (
                    <TagField value={${h}} key={${h}} />
                ))}
                </HStack>
            `}return $`
                <Heading as="h5" size="sm" mt={4}>${b({resource:e,field:t,i18n:p,noQuotes:!0})}</Heading>
                <TextField value={${d(m,t.key,t.accessor)}} />
            `}},"textFields"),w=o(t=>{if(t.type==="image"){if(l.push(["Image","@chakra-ui/react"]),t.multiple){let h=d("item",void 0,t.accessor);return $`
                <Heading as="h5" size="sm" mt={4}>${b({resource:e,field:t,i18n:p,noQuotes:!0})}</Heading>
                {${d(m,t.key)}?.map((item: any) => (
                    <Image sx={{ maxWidth: 200 }} src={${h}} key={${h}} />
                ))}
            `}return $`
                <Heading as="h5" size="sm" mt={4}>${b({resource:e,field:t,i18n:p,noQuotes:!0})}</Heading>
                <Image sx={{ maxWidth: 200 }} src={${d(m,t.key,t.accessor," + ")}} />
                `}},"imageFields"),E=o(t=>{if(t.type==="email"){if(l.push(["TagField","@refinedev/chakra-ui"],["EmailField","@refinedev/chakra-ui"],["HStack","@chakra-ui/react"]),t.multiple){let h=d("item",void 0,t.accessor);return $`
                <Heading as="h5" size="sm" mt={4}>${b({resource:e,field:t,i18n:p,noQuotes:!0})}</Heading>
                <HStack spacing="12px">
                {${d(m,t.key)}?.map((item: any) => (
                    <TagField value={${h}} key={${h}} />
                ))}
                </HStack>
            `}return $`
                <Heading as="h5" size="sm" mt={4}>${b({resource:e,field:t,i18n:p,noQuotes:!0})}</Heading>
                <EmailField value={${d(m,t.key,t.accessor," + ")}} />
            `}},"emailFields"),a=o(t=>{if(t.type==="url"){if(l.push(["TagField","@refinedev/chakra-ui"],["UrlField","@refinedev/chakra-ui"],["HStack","@chakra-ui/react"]),t.multiple){let h=d("item",void 0,t.accessor);return $`
                <Heading as="h5" size="sm" mt={4}>${b({resource:e,field:t,i18n:p,noQuotes:!0})}</Heading>
                <HStack spacing="12px">
                {${d(m,t.key)}?.map((item: any) => (
                    <TagField value={${h}} key={${h}} />
                ))}
                </HStack>
            `}return $`
                <Heading as="h5" size="sm" mt={4}>${b({resource:e,field:t,i18n:p,noQuotes:!0})}</Heading>
                <UrlField value={${d(m,t.key,t.accessor," + ")}} />
            `}},"urlFields"),I=o(t=>{if(t.type==="boolean"){if(l.push(["TagField","@refinedev/chakra-ui"],["BooleanField","@refinedev/chakra-ui"],["HStack","@chakra-ui/react"]),t.multiple){let h=d("item",void 0,t.accessor);return $`
                <Heading as="h5" size="sm" mt={4}>${b({resource:e,field:t,i18n:p,noQuotes:!0})}</Heading>
                <HStack spacing="12px">
                {${d(m,t.key)}?.map((item: any) => (
                    <TagField value={${h}} key={${h}} />
                ))}
                </HStack>
            `}return $`
                <Heading as="h5" size="sm" mt={4}>${b({resource:e,field:t,i18n:p,noQuotes:!0})}</Heading>
                <BooleanField value={${d(m,t.key,t.accessor," && ")}} />
            `}},"booleanFields"),u=o(t=>{if(t.type==="date"){if(l.push(["DateField","@refinedev/chakra-ui"]),t.multiple){let h=d("item",void 0,t.accessor);return $`
                <Heading as="h5" size="sm" mt={4}>${b({resource:e,field:t,i18n:p,noQuotes:!0})}</Heading>
                {${d(m,t.key)}?.map((item: any) => (
                    <DateField value={${h}} key={${h}} />
                ))}
            `}return $`
                <Heading as="h5" size="sm" mt={4}>${b({resource:e,field:t,i18n:p,noQuotes:!0})}</Heading>
                <DateField value={${d(m,t.key,t.accessor," + ' ' + ")}} />
            `}},"dateFields"),V=o(t=>{if(t.type==="richtext")return l.push(["MarkdownField","@refinedev/chakra-ui"]),$`
                <Heading as="h5" size="sm" mt={4}>${b({resource:e,field:t,i18n:p,noQuotes:!0})}</Heading>
                <MarkdownField value={${d(m,t.key,t.accessor,' + " " + ')}} />
            `},"richtextFields"),M=o(t=>{if(t.type==="number"){if(l.push(["NumberField","@refinedev/chakra-ui"],["TagField","@refinedev/chakra-ui"],["HStack","@chakra-ui/react"]),t.multiple){let h=d("item",void 0,t.accessor);return $`
                <Heading as="h5" size="sm" mt={4}>${b({resource:e,field:t,i18n:p,noQuotes:!0})}</Heading>
                <HStack spacing="12px">
                {${d(m,t.key)}?.map((item: any) => (
                    <TagField value={${h}} key={${h}} />
                ))}
                </HStack>
            `}return $`
                <Heading as="h5" size="sm" mt={4}>${b({resource:e,field:t,i18n:p,noQuotes:!0})}</Heading>
                <NumberField value={${d(m,t.key,t.accessor,' + " " + ')} ?? ""} />
            `}},"numberFields"),S=o(t=>{if(t)return $`
                ${t}
            `},"wrapper"),D=n.map(t=>{switch(t==null?void 0:t.type){case"text":return S(y(t));case"number":return S(M(t));case"richtext":return S(V(t));case"email":return S(E(t));case"image":return S(w(t));case"date":return S(u(t));case"boolean":return S(I(t));case"url":return S(a(t));case"relation":return S(v(t));default:return}});le(l);let N=p&&"const translate = useTranslate();";return $`
    ${me(l)}
    
    export const ${f} = () => {
        ${N}
        const { query } = useShow(${c?`{ 
                    resource: "${e.name}", 
                    id: ${Ee(s)},
                    ${z((e==null?void 0:e.identifier)??(e==null?void 0:e.name),i,["getOne"])}
                }`:z((e==null?void 0:e.identifier)??(e==null?void 0:e.name),i,["getOne"])?`{ ${z((e==null?void 0:e.identifier)??(e==null?void 0:e.name),i,["getOne"])} }`:""});
        const { data, isLoading } = query;

        const ${m} = data?.data;
    
        ${H}

        return (
            <Show isLoading={isLoading}>
                ${D.join("")}
            </Show>
        );
    };
    `},"renderer"),Ke=he({type:"show",additionalScope:[["@refinedev/chakra-ui","RefineChakraUI",{Show:G.Show,TagField:G.TagField,TextField:G.TextField,EmailField:G.EmailField,UrlField:G.UrlField,BooleanField:G.BooleanField,DateField:G.DateField,MarkdownField:G.MarkdownField,NumberField:G.NumberField}],["@chakra-ui/react","ChakraUI",{Heading:Se.Heading,HStack:Se.HStack,Image:Se.Image}]],codeViewerComponent:ge,loadingComponent:xe,errorComponent:Ie,renderer:gr});var j=require("@refinedev/chakra-ui"),B=require("@chakra-ui/react"),et=require("@refinedev/react-table"),rt=require("@tanstack/react-table"),Ue=require("@tabler/icons-react/dist/cjs/tabler-icons-react.cjs");var $e=o(e=>Array.isArray(e.accessor)||e.multiple?`accessorKey: "${e.key}"`:e.accessor?`accessorKey: "${_(e.key,void 0,e.accessor)}"`:`accessorKey: "${e.key}"`,"getAccessorKey"),yr=o(({resource:e,fields:n,meta:i,isCustomPage:c,i18n:s})=>{let p=se(e.label??e.name,"list"),f="tableData?.data",m=[["useTable","@refinedev/react-table"],["ColumnDef","@tanstack/react-table"],["flexRender","@tanstack/react-table"],["List","@refinedev/chakra-ui"],["TableContainer","@chakra-ui/react"],["Table","@chakra-ui/react"],["Thead","@chakra-ui/react"],["Tr","@chakra-ui/react"],["Th","@chakra-ui/react"],["Tbody","@chakra-ui/react"],["Td","@chakra-ui/react"],["HStack","@chakra-ui/react"],["Button","@chakra-ui/react"],["IconButton","@chakra-ui/react"],["usePagination","@refinedev/chakra-ui"],["Box","@chakra-ui/react"],["IconChevronRight","@tabler/icons-react"],["IconChevronLeft","@tabler/icons-react"]];s&&m.push(["useTranslate","@refinedev/core"]),ce(i||{},["gqlQuery","gqlMutation"])&&m.push(["gql","graphql-tag",!0]);let k=n.filter(r=>(r==null?void 0:r.relation)&&!(r!=null&&r.fieldable)&&(r==null?void 0:r.resource)),x=k.filter(Boolean).map(r=>{var C,F;if(r!=null&&r.relation&&!r.fieldable&&r.resource){m.push(["GetManyResponse","@refinedev/core"]),m.push(["useMany","@refinedev/core"]);let A="";return r.multiple?A=`[].concat(...(${f}?.map((item) => ${d("item",r.key,r.accessor,!1)}) ?? []))`:A=`${f}?.map((item) => ${d("item",r.key,r.accessor,!1)}) ?? []`,`
                const { data: ${P(r.key,"Data")} } =
                useMany({
                    resource: "${r.resource.name}",
                    ids: ${A},
                    queryOptions: {
                        enabled: !!${f},
                    },
                    ${z(((C=r==null?void 0:r.resource)==null?void 0:C.identifier)??((F=r==null?void 0:r.resource)==null?void 0:F.name),i,["getMany"])}
                });
                `}}).filter(Boolean),H=k==null?void 0:k.map(r=>{if(r!=null&&r.resource)return P(r.key,"Data")}).filter(Boolean),v=o(r=>{var C,F,A,T,Y;if(r.relation&&r.resource){let Ve=`${P(r.key,"Data")}?.data`;if(Array.isArray(r.accessor))return;let We=`id: "${r.key}"`,Ne=`header: ${b({resource:e,field:r,i18n:s,noBraces:!0})}`,Be=$e(r),R="";if(r.multiple){m.push(["TagField","@refinedev/chakra-ui"]);let L="item";if(r!=null&&r.relationInfer&&(L=d("item",void 0,r.relationInfer.accessor)),r!=null&&r.relationInfer&&((C=r==null?void 0:r.relationInfer)==null?void 0:C.type)==="object"&&!((F=r==null?void 0:r.relationInfer)!=null&&F.accessor))return console.log("@refinedev/inferencer: Inferencer failed to render this field",{key:r.key,relation:r.relationInfer}),`cell: function render({ getValue }) {
                        return (
                            <span title="Inferencer failed to render this field (Cannot find key)">Cannot Render</span>
                        )
                    }`;R=`cell: function render({ getValue, table }) {
                    const meta = table.options.meta as {
                        ${P(r.key,"Data")}: GetManyResponse;
                    };

                    const ${P(r.key,"")} = getValue<any[]>()?.map((item) => {
                        return meta.${P(r.key,"Data")}?.data?.find(
                            (resourceItems) => resourceItems.id === ${d("item",void 0,r.accessor)}
                        );
                    })


                    return (
                        <HStack>
                            {${P(r.key,"")}?.map((item, index) => (
                                <TagField key={index} value={${L}} />
                            ))}
                        </HStack>
                    )
                }
            `}else if(r!=null&&r.relationInfer){let L=((A=r==null?void 0:r.relationInfer)==null?void 0:A.type)==="object"&&!((T=r==null?void 0:r.relationInfer)!=null&&T.accessor);L||console.log("@refinedev/inferencer: Inferencer failed to render this field",{key:r.key,relation:r.relationInfer}),R=`cell: function render({ getValue, table }) {
                        const meta = table.options.meta as {
                            ${P(r.key,"Data")}: GetManyResponse;
                        };

                        const ${P(r.key,"")} = meta.${Ve}?.find(
                            (item) => item.id == getValue<any>(),
                        );

                        return ${L?'<span title="Inferencer failed to render this field (Cannot find key)">Cannot Render</span>':`${d(P(r.key),void 0,(Y=r==null?void 0:r.relationInfer)==null?void 0:Y.accessor)} ?? "Loading..."`};
                    },`}else R="";return`
                {
                    ${We},
                    ${Ne},
                    ${Be},
                    ${R}
                }
            `}},"renderRelationFields"),y=o(r=>{if(r.type==="image"){m.push(["Image","@chakra-ui/react"]);let C=`id: "${r.key}"`,F=$e(r),A=`header: ${b({resource:e,field:r,i18n:s,noBraces:!0})}`,T=$`
                cell: function render({ getValue }) {
                    ${r!=null&&r.accessor?"try {":""}
                        return <Image sx={{ maxWidth: "100px" }} src={${d("getValue<any>()",void 0,Array.isArray(r.accessor)?r.accessor:void 0," + ")}} />
                    ${r!=null&&r.accessor?" } catch (error) { return null; }":""}
                }
            `;if(r.multiple){let Y=d("item",void 0,r.accessor," + ");T=`
                    cell: function render({ getValue }) {
                        ${r!=null&&r.accessor?"try {":""}
                            return (
                                <HStack>
                                    {getValue<any[]>()?.map((item, index) => (
                                        <Image src={${Y}} key={index} sx={{ height: "50px", maxWidth: "100px" }} />
                                    ))}
                                </HStack>
                            )
                        ${r!=null&&r.accessor?" } catch (error) { return null; }":""}
                    }
                `}return`
                {
                    ${C},
                    ${F},
                    ${A},
                    ${T}
                }
            `}},"imageFields"),w=o(r=>{if(r.type==="email"){m.push(["EmailField","@refinedev/chakra-ui"]);let C=`id: "${r.key}"`,F=$e(r),A=`header: ${b({resource:e,field:r,i18n:s,noBraces:!0})}`,T=$`
                cell: function render({ getValue }) {
                    return <EmailField value={${d("getValue<any>()",void 0,Array.isArray(r.accessor)?r.accessor:void 0,' + " " + ')}} />
                }
            `;return r.multiple&&(m.push(["TagField","@refinedev/chakra-ui"]),T=`
                    cell: function render({ getValue }) {
                        return (
                            <HStack>
                                {getValue<any[]>()?.map((item, index) => (
                                    <TagField value={${d("item",void 0,r.accessor," + ")}} key={index} />
                                ))}
                            </HStack>
                        )
                    }
                `),`
                {
                    ${C},
                    ${F},
                    ${A},
                    ${T}
                }
            `}},"emailFields"),E=o(r=>{if(r.type==="url"){m.push(["UrlField","@refinedev/chakra-ui"]);let C=`id: "${r.key}"`,F=$e(r),A=`header: ${b({resource:e,field:r,i18n:s,noBraces:!0})}`,T=$`
                cell: function render({ getValue }) {
                    return <UrlField value={${d("getValue<any>()",void 0,Array.isArray(r.accessor)?r.accessor:void 0," + ")}} />
                }
            `;return r.multiple&&(m.push(["TagField","@refinedev/chakra-ui"]),T=`
                    cell: function render({ getValue }) {
                        return (
                            <HStack>
                                {getValue<any[]>()?.map((item, index) => (
                                    <TagField value={${d("item",void 0,r.accessor," + ")}} key={index} />
                                ))}
                            </HStack>
                        )
                    }
                `),`
                {
                    ${C},
                    ${F},
                    ${A},
                    ${T}
                }
            `}},"urlFields"),a=o(r=>{if((r==null?void 0:r.type)==="boolean"){m.push(["BooleanField","@refinedev/chakra-ui"]);let C=`id: "${r.key}"`,F=$e(r),A=`header: ${b({resource:e,field:r,i18n:s,noBraces:!0})}`,T=$`
                cell: function render({ getValue }) {
                    return <BooleanField value={${d("getValue<any>()",void 0,Array.isArray(r.accessor)?r.accessor:void 0," + ")}} />
                }
            `;return r.multiple&&(T=`
                    cell: function render({ getValue }) {
                        return (
                            <HStack>
                                {getValue<any[]>()?.map((item, index) => (
                                    <BooleanField value={${d("item",void 0,r.accessor," + ")}} key={index} />
                                ))}
                            </HStack>
                        )
                    }
                `),`
                {
                    ${C},
                    ${F},
                    ${A},
                    ${T}
                }
            `}},"booleanFields"),I=o(r=>{if(r.type==="date"){m.push(["DateField","@refinedev/chakra-ui"]);let C=`id: "${r.key}"`,F=$e(r),A=`header: ${b({resource:e,field:r,i18n:s,noBraces:!0})}`,T=$`
                cell: function render({ getValue }) {
                    return <DateField value={${d("getValue<any>()",void 0,Array.isArray(r.accessor)?r.accessor:void 0,' + " " + ')}} />
                }
            `;return r.multiple&&(T=`
                    cell: function render({ getValue }) {
                        return (
                            <HStack>
                                {getValue<any[]>()?.map((item, index) => (
                                    <DateField value={${d("item",void 0,r.accessor," + ")}} key={index} />
                                ))}
                            </HStack>
                        )
                    }
                `),`
                {
                    ${C},
                    ${F},
                    ${A},
                    ${T}
                }
            `}},"dateFields"),u=o(r=>{if((r==null?void 0:r.type)==="richtext"){m.push(["MarkdownField","@refinedev/chakra-ui"]);let C=`id: "${r.key}"`,F=$e(r),A=`header: ${b({resource:e,field:r,i18n:s,noBraces:!0})}`,T=$`
                cell: function render({ getValue }) {
                    return <MarkdownField value={(${d("getValue<string>()",void 0,Array.isArray(r.accessor)?r.accessor:void 0)})?.slice(0, 80) + "..." } />
                }
            `;return r.multiple&&(T=`
                    cell: function render({ getValue }) {
                        return (
                            <HStack>
                                {getValue<string[]>()?.map((item, index) => (
                                    <MarkdownField value={${d("item",void 0,r.accessor," + ")}} key={index} />
                                ))}
                            </HStack>
                        )
                    }
                `),`
                {
                    ${C},
                    ${F},
                    ${A},
                    ${T}
                }
            `}},"richtextFields"),V=o(r=>{if(r&&(r.type==="text"||r.type==="number")){let C=`id: "${r.key}"`,F=$e(r),A=`header: ${b({resource:e,field:r,i18n:s,noBraces:!0})}`,T="";return r.multiple&&(m.push(["TagField","@refinedev/chakra-ui"]),T=`
                    cell: function render({ getValue }) {
                        return (
                            <HStack>
                                {getValue<any[]>()?.map((item, index) => (
                                    <TagField value={${d("item",void 0,r.accessor,' + " " + ')}} key={index} />
                                ))}
                            </HStack>
                        )
                    }
                `),!r.multiple&&Array.isArray(r.accessor)&&(T=`
                    cell: function render({ getValue }) {
                        return (
                            <>{${d("getValue<any>()",r.key,r.accessor)}}</>
                        );
                    }
                `),`
                {
                    ${C},
                    ${F},
                    ${A},
                    ${T}
                }
            `}},"basicFields"),{canEdit:M,canShow:S,canDelete:D,meta:N}=e??{},t=D||(N==null?void 0:N.canDelete);M&&m.push(["EditButton","@refinedev/chakra-ui"]),S&&m.push(["ShowButton","@refinedev/chakra-ui"]),t&&m.push(["DeleteButton","@refinedev/chakra-ui"]);let h=M||S||t?$`
    {
        id: "actions",
        accessorKey: "id",
        header: "Actions",
        cell: function render({ getValue }) {
            return (
                <HStack>
                ${S?$`
                    <ShowButton
                        hideText
                        recordItemId={getValue() as string}
                    />
                    `:""}
                    ${M?$`
                    <EditButton
                        hideText
                        recordItemId={getValue() as string}
                    />
                    `:""}
                    ${t?$`
                    <DeleteButton
                        hideText
                        recordItemId={getValue() as string}
                    />
                    `:""}
                </HStack>
            );
        },
    },
        `:"",W=n.map(r=>{switch(r==null?void 0:r.type){case"text":case"number":return V(r);case"richtext":return u(r);case"email":return w(r);case"image":return y(r);case"date":return I(r);case"boolean":return a(r);case"url":return E(r);case"relation":return v(r);default:return}});le(m);let U=s&&"const translate = useTranslate();";return $`
    import React from "react";
    ${me(m)}
    
    export const ${p} = () => {
        ${U}
        const columns = React.useMemo<ColumnDef<any>[]>(() => [
            ${[...W,h].filter(Boolean).join(",")}
        ], [${s?"translate":""}]);

        const {
            getHeaderGroups,
            getRowModel,
            setOptions,
            refineCore: {
                setCurrent,
                pageCount,
                current,
                tableQueryResult: { data: tableData },
            },
        } = useTable({
            columns,
            ${c?`
            refineCoreProps: {
                resource: "${e.name}",
                ${z((e==null?void 0:e.identifier)??(e==null?void 0:e.name),i,["getList"])}
            }
            `:z((e==null?void 0:e.identifier)??(e==null?void 0:e.name),i,["getList"])?`refineCoreProps: { ${z((e==null?void 0:e.identifier)??(e==null?void 0:e.name),i,["getList"])} },`:""}
            
        });

        ${x}

        setOptions((prev) => ({
            ...prev,
            meta: {
                ...prev.meta,
                ${H.join(", ")}
            },
        }));

        return (
            <List>
                <TableContainer whiteSpace="pre-line">
                    <Table variant="simple">
                        <Thead>
                            {getHeaderGroups().map((headerGroup) => (
                                <Tr key={headerGroup.id}>
                                    {headerGroup.headers.map((header) => (
                                        <Th key={header.id}>
                                            {!header.isPlaceholder && (
                                                flexRender(
                                                    header.column.columnDef
                                                        .header,
                                                    header.getContext(),
                                                )
                                            )}
                                        </Th>
                                    ))}
                                </Tr>
                            ))}
                        </Thead>
                        <Tbody>
                            {getRowModel().rows.map((row) => (
                                <Tr key={row.id}>
                                    {row.getVisibleCells().map((cell) => (
                                        <Td key={cell.id}>
                                            {flexRender(
                                                cell.column.columnDef.cell,
                                                cell.getContext(),
                                            )}
                                        </Td>
                                    ))}
                                </Tr>
                            ))}
                        </Tbody>
                    </Table>
                </TableContainer>
                <Pagination
                    current={current}
                    pageCount={pageCount}
                    setCurrent={setCurrent}
                />
            </List>   
        );
    };

    type PaginationProps = {
        current: number;
        pageCount: number;
        setCurrent: (page: number) => void;
    };

    const Pagination: React.FC<PaginationProps> = ({
        current,
        pageCount,
        setCurrent,
    }) => {
        const pagination = usePagination({
            current,
            pageCount,
        });
    
        return (
            <Box display="flex" justifyContent="flex-end">
                <HStack my="3" spacing="1">
                    {pagination?.prev && (
                        <IconButton
                            aria-label="previous page"
                            onClick={() => setCurrent(current - 1)}
                            disabled={!pagination?.prev}
                            variant="outline"
                        >
                            <IconChevronLeft size="18" />
                        </IconButton>
                    )}
    
                    {pagination?.items.map((page) => {
                        if (typeof page === "string")
                            return <span key={page}>...</span>;
    
                        return (
                            <Button
                                key={page}
                                onClick={() => setCurrent(page)}
                                variant={page === current ? "solid" : "outline"}
                            >
                                {page}
                            </Button>
                        );
                    })}
                    {pagination?.next && (
                        <IconButton
                            aria-label="next page"
                            onClick={() => setCurrent(current + 1)}
                            variant="outline"
                        >
                            <IconChevronRight size="18" />
                        </IconButton>
                    )}
                </HStack>
            </Box>
        );
    };
    `},"renderer"),Qe=he({type:"list",additionalScope:[["@refinedev/chakra-ui","RefineChakraUI",{List:j.List,usePagination:j.usePagination,TagField:j.TagField,EmailField:j.EmailField,UrlField:j.UrlField,BooleanField:j.BooleanField,DateField:j.DateField,MarkdownField:j.MarkdownField,EditButton:j.EditButton,ShowButton:j.ShowButton,DeleteButton:j.DeleteButton}],["@refinedev/react-table","RefineReactTable",{useTable:et.useTable}],["@tabler/icons-react","TablerIcons",{IconChevronRight:Ue.IconChevronRight,IconChevronLeft:Ue.IconChevronLeft}],["@chakra-ui/react","ChakraUI",{TableContainer:B.TableContainer,Table:B.Table,Thead:B.Thead,Tr:B.Tr,Th:B.Th,Tbody:B.Tbody,Td:B.Td,HStack:B.HStack,Button:B.Button,IconButton:B.IconButton,Box:B.Box,Image:B.Image}],["@tanstack/react-table","TanstackReactTable",{flexRender:rt.flexRender}]],codeViewerComponent:ge,loadingComponent:xe,errorComponent:Ie,renderer:yr});var tt=require("@refinedev/chakra-ui"),oe=require("@chakra-ui/react"),nt=require("@refinedev/react-hook-form");var hr=o(({resource:e,fields:n,meta:i,isCustomPage:c,i18n:s})=>{let p=se(e.label??e.name,"create"),f=[["Create","@refinedev/chakra-ui"],["FormControl","@chakra-ui/react"],["FormLabel","@chakra-ui/react"],["FormErrorMessage","@chakra-ui/react"],["useForm","@refinedev/react-hook-form"]];s&&f.push(["useTranslate","@refinedev/core"]),ce(i||{},["gqlQuery","gqlMutation"])&&f.push(["gql","graphql-tag",!0]);let k=n.filter(a=>(a==null?void 0:a.relation)&&!(a!=null&&a.fieldable)&&(a==null?void 0:a.resource)).filter(Boolean).map(a=>{var I,u;if(a!=null&&a.relation&&!a.fieldable&&a.resource)return f.push(["useSelect","@refinedev/core"]),`
                const { options: ${P(a.key,"Options")} } =
                useSelect({
                    resource: "${a.resource.name}",
                    ${Pe(a)}
                    ${z(((I=a==null?void 0:a.resource)==null?void 0:I.identifier)??((u=a==null?void 0:a.resource)==null?void 0:u.name),i,["getList"])}
                });
            `}).filter(Boolean),x=o(a=>{if(a.relation&&a.resource){f.push(["useSelect","@refinedev/core"]),f.push(["Select","@chakra-ui/react"]);let I=P(a.key,"Options");return $`
            <FormControl mb="3" isInvalid={!!errors?.${_(a.key,void 0)}}>
                <FormLabel>${b({resource:e,field:a,i18n:s,noQuotes:!0})}</FormLabel>
                <Select
                    placeholder="Select ${X(a.resource.name)}"
                    {...register("${_(a.key,void 0,a.accessor)}", {
                        required: "This field is required",
                    })}
                >
                    {${I}?.map((option) => (
                        <option value={option.value} key={option.value}>
                            {option.label}
                        </option>
                    ))}
                </Select>
                <FormErrorMessage>
                    {${d("(errors as any)",a.key,a.accessor,!1)}?.message as string}
                </FormErrorMessage>
            </FormControl>
            `}},"renderRelationFields"),H=o(a=>{if(a.type==="text"||a.type==="url"||a.type==="email"||a.type==="number"||a.type==="date"||a.type==="richtext")return Re(a.key)||(f.push(["Input","@chakra-ui/react"]),a.multiple)?void 0:$`
                <FormControl mb="3" isInvalid={!!${d("(errors as any)",a.key,a.accessor,!1)}}>
                    <FormLabel>${b({resource:e,field:a,i18n:s,noQuotes:!0})}</FormLabel>
                    <Input
                        ${a.type!=="date"&&a.type!=="richtext"?`type="${a.type}"`:""}
                        {...register("${_(a.key,void 0,a.accessor)}", {
                            required: "This field is required",
                            ${a.type==="number"?"valueAsNumber: true,":""}
                        })}
                    />
                    <FormErrorMessage>
                        {${d("(errors as any)",a.key,a.accessor,!1)}?.message as string}
                    </FormErrorMessage>
                </FormControl>
            `},"basicInputFields"),v=o(a=>{if(a.type==="boolean")return f.push(["Checkbox","@chakra-ui/react"]),a.multiple?void 0:$`
                <FormControl mb="3" isInvalid={!!${d("errors",a.key,a.accessor,!1)}}>
                    <FormLabel>${b({resource:e,field:a,i18n:s,noQuotes:!0})}</FormLabel>
                    <Checkbox
                        {...register("${_(a.key,void 0,a.accessor)}", {
                            required: "This field is required",
                        })}
                    />
                    <FormErrorMessage>
                        {${d("errors",a.key,a.accessor,!1)}?.message as string}
                    </FormErrorMessage>
                </FormControl>
               
            `},"booleanFields"),y=o(a=>{if(a.type==="date")return`
                {/* 
                    DatePicker component is not included in "@refinedev/chakra-ui" package.
                    To use a <DatePicker> component, you can examine the following links:
                    
                    - https://github.com/aboveyunhai/chakra-dayzed-datepicker
                    - https://github.com/wojtekmaj/react-date-picker
                */}
                ${H(a)??""}
                `},"dateFields"),w=n.map(a=>{switch(a==null?void 0:a.type){case"text":case"number":case"email":case"url":case"richtext":return H(a);case"date":return y(a);case"boolean":return v(a);case"relation":return x(a);default:return}});le(f);let E=s&&"const translate = useTranslate();";return $`
    ${me(f)}
    
    export const ${p} = () => {
        ${E}
        const {
            refineCore: { formLoading },
            saveButtonProps,
            register,
            formState: { errors },
        } = useForm(
            ${c?`
            { 
                refineCoreProps: {
                    resource: "${e.name}",
                    action: "create",
                    ${z(e.identifier??e.name,i,["create","getOne"])}
                }
            }`:z(e.identifier??e.name,i,["create","getOne"])?`{
                        refineCoreProps: { ${z(e.identifier??e.name,i,["create","getOne"])} }
                        }`:""}
        );
    
        ${k}

        return (
            <Create isLoading={formLoading} saveButtonProps={saveButtonProps}>
                ${w.join("")}
            </Create>
        );
    };
    `},"renderer"),Ge=he({type:"create",additionalScope:[["@refinedev/chakra-ui","RefineChakraUI",{Create:tt.Create}],["@refinedev/react-hook-form","RefineReactHookForm",{useForm:nt.useForm}],["@chakra-ui/react","ChakraUI",{FormControl:oe.FormControl,FormLabel:oe.FormLabel,FormErrorMessage:oe.FormErrorMessage,Select:oe.Select,Input:oe.Input,Checkbox:oe.Checkbox}]],codeViewerComponent:ge,loadingComponent:xe,errorComponent:Ie,renderer:hr});var ot=require("@refinedev/chakra-ui"),ae=require("@chakra-ui/react"),at=require("@refinedev/react-hook-form");var kr=o(({resource:e,fields:n,meta:i,isCustomPage:c,id:s,i18n:p})=>{let f=se(e.label??e.name,"edit"),m=P(e.label??e.name,"Data"),l=[["React","react",!0],["Edit","@refinedev/chakra-ui"],["FormControl","@chakra-ui/react"],["FormLabel","@chakra-ui/react"],["FormErrorMessage","@chakra-ui/react"],["useForm","@refinedev/react-hook-form"]];p&&l.push(["useTranslate","@refinedev/core"]),ce(i||{},["gqlQuery","gqlMutation"])&&l.push(["gql","graphql-tag",!0]);let H=n.filter(u=>(u==null?void 0:u.relation)&&!(u!=null&&u.fieldable)&&(u==null?void 0:u.resource)).filter(Boolean).map(u=>{var V,M;if(u!=null&&u.relation&&!u.fieldable&&u.resource){l.push(["useSelect","@refinedev/core"]);let S=d(m,u.key,u.accessor,!1);return u.multiple&&u.accessor&&(S=`${d(m,u.key)}?.map((item: any) => ${d("item",void 0,u.accessor)})`),`
                const { options: ${P(u.key,"Options")} } =
                useSelect({
                    resource: "${u.resource.name}",
                    defaultValue: ${S},
                    ${Pe(u)}
                    ${z(((V=u==null?void 0:u.resource)==null?void 0:V.identifier)??((M=u==null?void 0:u.resource)==null?void 0:M.name),i,["getList"])}
                });

                React.useEffect(() => {
                    setValue("${_(u.key,void 0,u.accessor)}", ${S});
                }, [${P(u.key,"Options")}]);
            `}}).filter(Boolean),v=o(u=>{if(u.relation&&u.resource){l.push(["useSelect","@refinedev/core"]),l.push(["Select","@chakra-ui/react"]);let V=P(u.key,"Options");return $`
            <FormControl mb="3" isInvalid={!!errors?.${_(u.key,void 0)}}>
                <FormLabel>${b({resource:e,field:u,i18n:p,noQuotes:!0})}</FormLabel>
                <Select
                    placeholder="Select ${X(u.resource.name)}"
                    {...register("${_(u.key,void 0,u.accessor)}", {
                        required: "This field is required",
                    })}
                >
                    {${V}?.map((option) => (
                        <option value={option.value} key={option.value}>
                            {option.label}
                        </option>
                    ))}
                </Select>
                <FormErrorMessage>
                    {${d("(errors as any)",u.key,u.accessor,!1)}?.message as string}
                </FormErrorMessage>
            </FormControl>
            `}},"renderRelationFields"),y=o(u=>{if(u.type==="text"||u.type==="url"||u.type==="email"||u.type==="number"||u.type==="date"||u.type==="richtext"){if(l.push(["Input","@chakra-ui/react"]),u.multiple){let V=_(u.key,"${index}",u.accessor),M=d(`${d("(errors as any)",u.key,void 0,!1)}?.[index]`,void 0,u.accessor);return`
                    <>
                        {${d(m,u.key)}?.map((item: any, index: number) => (
                            <FormControl key={index} mb="3" isInvalid={!!${M}}>
                                <FormLabel>${b({resource:e,field:u,i18n:p,noQuotes:!0})}</FormLabel>
                                <Input
                                    {...register(\`${V}\`, {
                                        required: "This field is required",
                                        ${u.type==="number"?"valueAsNumber: true,":""}
                                    })}
                                />
                                <FormErrorMessage>
                                    {${d(M,"message")} as string}
                                </FormErrorMessage>
                            </FormControl>
                        ))}
                    </>
                `}return $`
                <FormControl mb="3" isInvalid={!!${d("(errors as any)",u.key,u.accessor,!1)}}>
                    <FormLabel>${b({resource:e,field:u,i18n:p,noQuotes:!0})}</FormLabel>
                    <Input
                        ${Re(u.key)?"disabled":""}
                        ${u.type!=="date"&&u.type!=="richtext"?`type="${u.type}"`:""}
                        {...register("${_(u.key,void 0,u.accessor)}", {
                            required: "This field is required",
                            ${u.type==="number"?"valueAsNumber: true,":""}
                        })}
                    />
                    <FormErrorMessage>
                        {${d("(errors as any)",u.key,u.accessor,!1)}?.message as string}
                    </FormErrorMessage>
                </FormControl>
            `}},"basicInputFields"),w=o(u=>{if(u.type==="boolean"){if(l.push(["Checkbox","@chakra-ui/react"]),u.multiple){let V=_(u.key,void 0,u.accessor),M=`${d("(errors as any)",u.key,void 0,!1)}?.[index]`;return`
                    <>
                        {${d(m,u.key)}?.map((item: any, index: number) => (
                            <FormControl key={index} mb="3" isInvalid={!!${M}}>
                                <FormLabel>${b({resource:e,field:u,i18n:p,noQuotes:!0})}</FormLabel>
                                <Checkbox
                                    {...register(\`${V}.\${index}\`, {
                                        required: "This field is required",
                                    })}
                                />
                                <FormErrorMessage>
                                    {${M}?.message as string}
                                </FormErrorMessage>
                            </FormControl>
                        ))}
                    </>
                `}return $`
                <FormControl mb="3" isInvalid={!!${d("errors",u.key,u.accessor,!1)}}>
                    <FormLabel>${b({resource:e,field:u,i18n:p,noQuotes:!0})}</FormLabel>
                    <Checkbox
                        {...register("${_(u.key,void 0,u.accessor)}", {
                            required: "This field is required",
                        })}
                    />
                    <FormErrorMessage>
                        {${d("errors",u.key,u.accessor,!1)}?.message as string}
                    </FormErrorMessage>
                </FormControl>
               
            `}},"booleanFields"),E=o(u=>{if(u.type==="date")return`
                {/* 
                    DatePicker component is not included in "@refinedev/chakra-ui" package.
                    To use a <DatePicker> component, you can examine the following links:
                    
                    - https://github.com/aboveyunhai/chakra-dayzed-datepicker
                    - https://github.com/wojtekmaj/react-date-picker
                */}
                ${y(u)}
                `},"dateFields"),a=n.map(u=>{switch(u==null?void 0:u.type){case"text":case"number":case"email":case"url":case"richtext":return y(u);case"date":return E(u);case"boolean":return w(u);case"relation":return v(u);default:return}});le(l);let I=p&&"const translate = useTranslate();";return $`
    ${me(l)}
    
    export const ${f} = () => {
        ${I}
        const {
            refineCore: { formLoading, query },
            saveButtonProps,
            register,
            setValue,
            formState: { errors },
        } = useForm(
            ${c?`
            { 
                refineCoreProps: {
                    resource: "${e.name}",
                    id: ${Ee(s)},
                    action: "edit",
                    ${z((e==null?void 0:e.identifier)??(e==null?void 0:e.name),i,["update","getOne"])}
                }
            }`:z((e==null?void 0:e.identifier)??(e==null?void 0:e.name),i,["update","getOne"])?`{ refineCoreProps: { ${z((e==null?void 0:e.identifier)??(e==null?void 0:e.name),i,["update","getOne"])} }
                        }`:""}
        );
    
        const ${m} = query?.data?.data;
    
        ${H}

        return (
            <Edit isLoading={formLoading} saveButtonProps={saveButtonProps}>
                ${a.join("")}
            </Edit>
        );
    };
    `},"renderer"),_e=he({type:"edit",additionalScope:[["@refinedev/chakra-ui","RefineChakraUI",{Edit:ot.Edit}],["@refinedev/react-hook-form","RefineReactHookForm",{useForm:at.useForm}],["@chakra-ui/react","ChakraUI",{FormControl:ae.FormControl,FormLabel:ae.FormLabel,FormErrorMessage:ae.FormErrorMessage,Select:ae.Select,Input:ae.Input,Checkbox:ae.Checkbox}]],codeViewerComponent:ge,loadingComponent:xe,errorComponent:Ie,renderer:kr});var Mt=o(({action:e,id:n,...i})=>{let{action:c,id:s}=(0,st.useResource)();switch(e??c){case"show":return Me.default.createElement(Ke,{...i,id:n??s});case"create":return Me.default.createElement(Ge,{...i,id:n??s});case"edit":return Me.default.createElement(_e,{...i,id:n??s});default:return Me.default.createElement(Qe,{...i,id:n??s})}},"ChakraUIInferencer");
//# sourceMappingURL=chakra-ui.cjs.map