"use client"
var Ot=Object.defineProperty;var o=(e,n)=>Ot(e,"name",{value:n,configurable:!0});import Pe from"react";import{useResource as vr}from"@refinedev/core";import ne,{useContext as fr}from"react";import{useResource as _e,TranslationContext as gr}from"@refinedev/core";var Ht=/(image|photo|avatar|url|logo|cover|thumbnail|icon)/i,Dt=/^(\w|\d|_|-|)*?(name|label){1}$/i,Ve=o((e,n)=>{let i=["name","label","title","count","content","username","nickname","login","firstName","lastName","url"],s=Object.keys(n).filter(d=>Dt.test(d));i.push(...s),Ht.test(e)&&i.unshift("url");let p=i.find(d=>d in n&&!!n[d]);if(p)return p==="firstName"&&"lastName"in n?["firstName","lastName"]:p},"getFieldableKeys");import{pickNotDeprecated as jt}from"@refinedev/core";function Le(e,n,i){if(n)return n;let c=i==null?void 0:i.find(p=>p.name===e),s=jt(c==null?void 0:c.meta,c==null?void 0:c.options);return s!=null&&s.dataProviderName?s.dataProviderName:"default"}o(Le,"pickDataProvider");var be=o(e=>{var n;return(n=e==null?void 0:e.options)==null?void 0:n.dataProviderName},"dataProviderFromResource");var Me=o(e=>{let n=[...e].filter(Boolean).sort((i,c)=>(c.priority||0)-(i.priority||0))[0];return n||null},"pickInferredField");import qt from"prettier/standalone";import Bt from"prettier/parser-typescript";var Ee=o(e=>{try{return qt.format(e,{parser:"typescript",plugins:[Bt],arrowParens:"always",trailingComma:"all",semi:!0,tabWidth:4,printWidth:80})}catch(n){return console.warn("Formatting error in inferencer",n),e}},"prettierFormat");var Xe=o(e=>e.replace(/ {2,}/g," ").replace(/\n{2,}/g,`
`),"prettySpaces");var Oe=/(-id|-ids|_id|_ids|Id|Ids|ID|IDs)(\[\])?$/,et=o((e,n)=>{let i=Oe.test(e),c=typeof n=="string"||typeof n=="number",s=Array.isArray(n)&&n.every(p=>typeof p=="string"||typeof p=="number");return i&&c||i&&s?{key:e,relation:!0,multiple:s,type:"relation",priority:1}:!1},"relationInfer");var K=o(e=>e.replace(Oe,""),"removeRelationSuffix");var W=o(e=>K(e).replace(/([a-z])([A-Z])/g,"$1 $2").replace(/_/g," ").replace(/-/g," ").split(" ").map(d=>d.charAt(0).toUpperCase()+d.slice(1)).join(" "),"prettyString");var k=o(e=>{let{resource:n,field:i,i18n:c}=e;if(c){let p=`translate("${n.name}.fields.${i.key}")`;return e.noBraces?`${p}`:`{${p}}`}let s=W(i.key);return e.noQuotes?s:`"${s}"`},"translatePrettyString");import tt from"pluralize";var z=o((e="")=>tt.isSingular(e)?e:tt.singular(e),"toSingular");import rt from"pluralize";var X=o((e="")=>rt.isPlural(e)?e:rt.plural(e),"toPlural");var J=o(e=>{var p;let{resource:n,action:i,i18n:c,noBraces:s}=e;if(c){let d=`translate("${n.name}.titles.${i}")`;return s?d:`{${d}}`}return i==="list"?W(X(n.label??((p=n==null?void 0:n.meta)==null?void 0:p.label)??n.name)):`${W(z(n.name))} ${W(i)}`},"translateActionTitle");var ee=o(e=>{let{action:n,i18n:i,noQuotes:c}=e;return i?`{translate("buttons.${n}")}`:c?W(n):`"${W(n)}"`},"translateButtonTitle");var He=o(e=>e.replace(/export\s+(const|let|var|type|interface|function|class)\s+(\w+)\s*(=|:)\s*/g,"$1 $2 = ").split(`
`).filter(s=>!s.trim().startsWith("export default")).join(`
`),"replaceExports");var nt=/import(?:(?:(?:[ \n\t]+([^ *\n\t\{\},]+)[ \n\t]*(?:,|[ \n\t]+))?([ \n\t]*\{(?:[ \n\t]*[^ \n\t"'\{\}]+[ \n\t]*,?)+\})?[ \n\t]*)|[ \n\t]*\*[ \n\t]*as[ \n\t]+([^ \n\t\{\}]+)[ \n\t]+)from[ \n\t]*(?:['"])([^'"\n]+)(?:['"])(?:;?)/g,Kt=/import[ \n\t](?:['"])([^'"\n]+)(?:['"])(?:;?)/g,Qt=/((?:\w|\s|_)*)( as )((?:\w|\s|_)*)( |,)?/g,De=o((e,n={})=>{let i=e.matchAll(nt),c=new Set;for(let s of i){let[,p,d,l,y]=s;if(y in n){let x=n[y];if(y==="react")continue;p&&c.add(`const { default: ${p} } = ${x};`),d&&c.add(`const${d.replace(Qt,"$1: $3$4")} = ${x};`),l&&c.add(`const ${l} = ${x};`)}}return Xe(`
    ${Array.from(c).join(`
`)}
    ${e.replace(nt,"").replace(Kt,"")}
    `)},"replaceImports");import Re from"pluralize";var je=o((e,n)=>e?n.find(c=>{let s=K(e.key);return c.name===s||c.name===(Re.isPlural(s)?s:Re.plural(s))||c.name===(Re.isSingular(s)?s:Re.singular(s))}):void 0,"resourceFromInferred");import zt from"pluralize";var te=o((e,n,i="Inferred")=>{let c=e.replace(/[^a-zA-Z0-9]/g," "),s=zt.singular(c),d=W(s).replace(/ /g,"")||i,l=n.charAt(0).toUpperCase()+n.slice(1);return/^[a-zA-Z]/.test(d)?`${d}${l}`:`${l}${d}`},"componentName");var Gt=o(e=>e?Array.isArray(e)?e.join(""):typeof e=="string"?e:typeof e=="object"||typeof e=="function"?e.toString():typeof e=="number"?String(e):typeof e=="boolean"&&e?"true":e:"","handleExpression"),I=o((e,...n)=>e.reduce((c,s,p)=>`${c}${s}${Gt(n[p])}`,"").trim(),"jsx");var qe=o((e,n)=>`
    ${e??""}
    
    render(typeof ${n} !== "undefined" ? <${n} /> : <></>);
    `,"prepareLiveCode");var Be=o(e=>e==null?void 0:e.replace(/(\/\* hidden-start \*\/)(.|\n)*?(\/\* hidden-end \*\/)/g,""),"removeHiddenCode");var _t=/^[a-zA-Z_$][a-zA-Z_$0-9]*$/,Ke=o(e=>_t.test(e),"shouldDotAccess");function Qe(e,n,i){let c=`${e}`;return n&&(c+="?.",Ke(n)?c+=n:c+=`['${n}']`),i&&(c+="?.",Ke(i)?c+=i:c+=`['${i}']`),c}o(Qe,"accessorSingle");function Wt(e,n,i){return(i??[]).map(s=>Qe(e,n,s))}o(Wt,"accessorMultiple");var m=o((e,n,i,c=' + " " + ')=>Array.isArray(i)?c?Wt(e,n,i).join(c):Qe(e,n,i[0]):Qe(e,n,i),"accessor"),G=o((e,n,i)=>{let c=e;return n&&(c+=`.${n}`),i&&(Array.isArray(i)?c+=`.${i[0]}`:c+=`.${i}`),c},"dotAccessor");var ce=o(e=>{let n=e.reduce((c,[s,p,d])=>(c[p]||(c[p]=[]),c[p].includes(s)||(d?c[p].push([s,!0]):c[p].push(s)),c),{});return Object.entries(n).map(([c,s])=>{let p=s.find(x=>Array.isArray(x)&&x[1]),d=s.filter(x=>typeof x=="string"),l=p?`${p[0]}`:"",y=d.length?`{ ${d.join(", ")} }`:"";return`import ${l}${l&&y?", ":""}${y} from "${c}";`})},"printImports");var Ut=/^id$/i,ke=o(e=>Ut.test(e),"isIDKey");var Ce=o(e=>{var n;return e.relationInfer&&(n=e.relationInfer)!=null&&n.accessor?Array.isArray(e.relationInfer.accessor)?`optionLabel: "${e.relationInfer.accessor[0]}",`:e.relationInfer.accessor!=="title"?`optionLabel: "${e.relationInfer.accessor}",`:"":""},"getOptionLabel");var pe=o(e=>{},"noOp");var P=o((e,n="")=>{if(Number.isInteger(Number(e)))return n.charAt(0).toLowerCase()+n.slice(1)+e;let c=e.replace(/^\d+/,"").replace(/[^a-zA-Z0-9]/g,"-"),s=W(c).replace(/ /g,"");return`${s.charAt(0).toLowerCase()+s.slice(1)}${n.charAt(0).toUpperCase()+n.slice(1)}`},"getVariableName");var q=o((e,n,i)=>{var A,C,g,w;if(!(n&&i&&e)||!Object.keys(n).length)return"";let c=e?n[e]:{},s=[],p=i.find(N=>c[N]),d=c==null?void 0:c[p||"default"];if(!d)return"";let{gqlQuery:l,gqlMutation:y,...x}=d;Object.keys(x).forEach(N=>{s.push(`${N}: ${JSON.stringify(x[N])}`)}),l&&s.push(`gqlQuery: gql\`${(C=(A=l==null?void 0:l.loc)==null?void 0:A.source)==null?void 0:C.body}\``),y&&s.push(`gqlMutation: gql\`${(w=(g=y==null?void 0:y.loc)==null?void 0:g.source)==null?void 0:w.body}\``);let v=s.join(",");return v.length?`meta:{${v}}`:""},"getMetaProps"),se=o((e,n,i)=>{if(n&&i&&e){let c=e?n[e]:{},p=[...i,"default"].reduce((d,l)=>d??(c==null?void 0:c[l]),void 0);if(p)return p}},"pickMeta");var Fe=o(e=>e===void 0?e:typeof e=="string"?`"${e}"`:e,"idQuoteWrapper");var ae=o((e,n)=>{for(let i in e)if(n.includes(i)||typeof e[i]=="object"&&e[i]!==null&&ae(e[i],n))return!0;return!1},"deepHasKey");var ot=o(e=>{let n=o((i,c,s,p=n,d)=>{let l=e.map(x=>x(i,c,s,p,d));return Me(l)},"fieldInferencer");return n},"composeInferencers");var st=o(e=>o((i,c,s,p,d,l)=>e.reduce((y,x)=>x(y,c,s,p,d,l),i),"fieldTransformer"),"composeTransformers");var at=o((e,n,i,c,s)=>{let p=Array.isArray(n),d=Array.isArray(n)&&n.every(l=>typeof l=="string"||typeof l=="number");if(p){if(!d){let y=c(e,n[0],i,c,s);return y?{...y,key:e,multiple:!0,priority:1}:!1}let l=c(e,n[0],i,c,s)||{type:"string"};return{key:e,multiple:!0,priority:1,type:l==null?void 0:l.type}}return!1},"arrayInfer");var it=o((e,n)=>typeof n=="boolean"?{key:e,type:"boolean"}:!1,"booleanInfer");import ct from"dayjs";var Zt=/(_at|_on|At|On|AT|ON)(\[\])?$/,Yt=["/",":","-","."],pt=o((e,n)=>{let i=Zt.test(e)&&ct(n).isValid(),c=typeof n=="string"&&ct(n).isValid();return typeof n=="string"&&Yt.some(p=>n.includes(p))&&(i||c)?{key:e,type:"date",priority:1}:!1},"dateInfer");var Jt=/^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,ut=o((e,n)=>typeof n=="string"&&Jt.test(n)?{key:e,type:"email",priority:1}:!1,"emailInfer");var Xt=/\.(gif|jpe?g|tiff?|png|webp|bmp|svg)$/i,lt=o((e,n)=>typeof n=="string"&&Xt.test(n)?{key:e,type:"image",priority:2}:!1,"imageInfer");var mt=o((e,n)=>typeof n>"u"||n===null?null:!1,"nullishInfer");var dt=o((e,n)=>{let i=typeof n=="string"&&n.length>0,c=!Number.isNaN(Number(n));return i&&c||typeof n=="number"?{key:e,type:"number"}:!1},"numberInfer");var yt=/id$/i,ft=o((e,n,i,c,s)=>{let p=n!==null,d=!Array.isArray(n);if(p&&d&&typeof n=="object"){let y=Object.keys(n).length===1&&yt.test(Object.keys(n)[0]),x=Object.keys(n).some(C=>yt.test(C));if(y)return{key:e,type:"relation",relation:!0,accessor:"id",priority:1};let v=Ve(e,n);if((v?v.length>0:!1)&&v){let C=v&&Array.isArray(v)?v[0]:v,g=c(C,n[C],n,c,s);if(g){let w=Array.isArray(v)?v.map(N=>g.accessor?`${N}.${Array.isArray(g.accessor)?g.accessor[0]:g.accessor}`:N):g.accessor?Array.isArray(g.accessor)?`${v}.${g.accessor[0]}`:`${v}.${g.accessor}`:v;return(g==null?void 0:g.type)==="text"&&(s==="create"||s==="edit")&&x?{key:e,type:"relation",relation:!0,accessor:"id",priority:1}:{...g,fieldable:!0,key:e,accessor:w,priority:1}}}return{key:e,fieldable:!1,type:"object",priority:1}}return!1},"objectInfer");var gt=o((e,n)=>typeof n=="string"&&n.length>100?{key:e,type:"richtext",priority:1}:!1,"richtextInfer");var ht=o((e,n)=>typeof n=="string"?{key:e,type:"text"}:!1,"textInfer");var er=/^(https?|ftp):\/\/(-\.)?([^\s/?\.#-]+\.?)+(\/[^\s]*)?$/i,$t=o((e,n)=>typeof n=="string"&&er.test(n)?{key:e,type:"url",priority:1}:!1,"urlInfer");var xt=[at,it,pt,ut,lt,mt,dt,ft,et,gt,ht,$t];var It=o((e,n,i,c)=>e.map(p=>{if(!p.relation&&(p.type==="text"||p.type==="richtext"||p.type==="number")&&!p.canRelation){let d=/^[a-z0-9-]+$/,l=o(C=>d.test(`${C}`),"isValidUUID"),y=p.key.toLowerCase()!=="id";return!(!p.accessor||typeof p.accessor=="string")||!y?p:(p.multiple?c[p.key]:[c[p.key]]).every(C=>l(p.accessor?C[p.accessor]:C))?{...p,canRelation:!0}:p}return p}),"basicToRelation");var tr=/(image|photo|avatar|cover|thumbnail|icon)/i,vt=o(e=>e.map(i=>i.type==="url"&&tr.test(i.key)?{...i,type:"image"}:i),"imageByKey");var bt=o((e,n)=>e.map(c=>{let s=je(c,n);return s?{...c,relation:!0,type:"relation",resource:s}:c}),"relationByResource");var kt=o((e,n,i,c,s,p)=>e.map(l=>{if(l.relation&&l.type==="relation"&&!l.resource){let y=l.accessor?c[l.key][l.accessor]:c[l.key],x=s(l.key,y,c,s,p);if(x&&x.type!=="relation")return{...l,fieldable:!0,relation:!1,type:x.type,canRelation:!0}}return l}),"relationToFieldable");var Ct=[vt,bt,kt,It];import re from"react";import*as rr from"@refinedev/core";import*as nr from"graphql-tag";import{LivePreview as or,LiveProvider as sr}from"@aliemir/react-live";var Ft=[["react","React",re],["@refinedev/core","RefineCore",rr],["graphql-tag","GraphqlTag",nr]],ze=re.createContext({}),Ge=o(({fetchError:e,code:n,additionalScope:i,errorComponent:c})=>{let s=(n&&He(De(n,[...Ft,...i??[]].reduce((l,[y,x,v,A])=>A?l:{...l,[y]:x},{}))))??"",p=re.useMemo(()=>({React:re,...re,...[...Ft,...i??[]].reduce((l,[y,x,v])=>({...l,[x]:v}),{})}),[i]),d=re.useMemo(()=>o(()=>{let{error:y}=re.useContext(ze);return c?re.createElement(c,{error:y?`<p>An error occured while rendering the generated component.You can check the generated code from the below "Show Code" button and fix the error manually.</p>
                                    <p>If you think this is a bug, please report the issue at <a target="_blank" rel="noopener noreferrer" href="https://github.com/refinedev/refine/issues">https://github.com/refinedev/refine/issues</a></p>
                                    <p>Exception:</p>
                                    <code>${y}</code>`:typeof e=="string"?e:e?`<p>Something went wrong while fetching the resource data.</p>
                                    <p>To learn more about the Inferencer, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`:void 0}):null},"LiveErrorComponent"),[c,e]);return re.createElement(sr,{Context:ze,code:s,scope:p,noInline:!0},!e&&re.createElement(or,{Context:ze}),re.createElement(d,null))},"LiveComponent");import f from"react";import ar,{defaultProps as ir}from"prism-react-renderer";import cr from "prism-react-renderer/themes/vsDark/index.js";var de=o(({code:e,loading:n})=>{let i=f.useMemo(()=>Ee(e??""),[e]),[c,s]=f.useState(!1),[p,d]=f.useState(!1),[l,y]=f.useState(!1),[x,v]=f.useState(!1),[A,C]=f.useState(!1);return f.useEffect(()=>{if(!n){let g=setTimeout(()=>{s(!0)},300);return()=>{clearTimeout(g)}}return()=>{}},[n]),f.useEffect(()=>{if(typeof window<"u"){let g=window.matchMedia("(max-width: 449px)");g.matches?y(!1):y(!0);let w=o(()=>{g.matches?y(!1):y(!0)},"handleResize");return window.addEventListener("resize",w),()=>{window.removeEventListener("resize",w)}}return()=>{}},[]),f.useEffect(()=>{if(typeof window<"u"){let g=window.matchMedia("(max-width: 1280px)");g.matches?v(!0):v(!1);let w=o(()=>{g.matches?v(!0):v(!1)},"handleResize");return window.addEventListener("resize",w),()=>{window.removeEventListener("resize",w)}}return()=>{}},[]),i&&!n?f.createElement(f.Fragment,null,l&&f.createElement("div",{className:"refine-inferencer--code-viewer",style:{position:"sticky",bottom:"24px",paddingTop:"24px",left:0,right:0,width:"100%",zIndex:10,display:"flex",justifyContent:"center",transition:"all 0.2s ease",opacity:c&&!p?1:0,transform:c&&!p?"translateY(0)":"translateY(100px)"}},f.createElement("div",{style:{width:"calc(100% - calc(64px * 2))",maxWidth:"1080px",padding:"20px",backgroundColor:"#1A1A1A",boxShadow:"0px 4px 16px -4px rgba(0, 0, 0, 0.5), 0px 8px 32px -8px rgba(0, 0, 0, 0.35)",borderRadius:"16px",display:"flex",alignItems:"center",justifyContent:"space-between",flexDirection:x?"column":"row",gap:"12px"}},f.createElement("div",{style:{display:"flex",alignItems:"flex-start",gap:"8px"}},f.createElement("div",null,f.createElement(ur,null)),f.createElement("div",{style:{fontSize:"14px",lineHeight:"20px",color:"#ffffff"}},f.createElement("p",{style:{padding:0,margin:0}},"Most of the page code is auto-generated by the"," ",f.createElement("span",{style:{textDecoration:"underline"}},"Inferencer")," ","feature, based on your backend data structure."),f.createElement("p",{style:{padding:0,margin:0}},"While this is an excellent way to experiment with refine,"," ",f.createElement("span",{style:{fontWeight:600}},"it's not intended to be used on production.")))),f.createElement("div",null,f.createElement("button",{onPointerEnter:()=>C(!0),onPointerLeave:()=>C(!1),onClick:()=>d(!0),style:{appearance:"none",border:"none",padding:"10px 16px",borderRadius:"4px",display:"flex",alignItems:"center",justifyContent:"center",background:"#0080FF",color:"#ffffff",fontSize:"14px",lineHeight:"20px",fontWeight:600,gap:"8px",cursor:"pointer",transition:"all 0.2s ease",transform:A?"scale(1.025)":void 0,filter:A?"brightness(1.1)":void 0}},f.createElement(St,{style:{flexShrink:0}}),f.createElement("span",null,"Show the auto-generated code"))))),f.createElement(pr,{visible:p,onClose:()=>d(!1),code:i})):null},"SharedCodeViewer"),pr=o(({visible:e,onClose:n,code:i=""})=>{let c=f.useRef(null),[s,p]=f.useState(!1),[d,l]=f.useState(!1),[y,x]=f.useState(!1),[v,A]=f.useState(!1);f.useEffect(()=>{if(typeof document<"u"){let a=o($=>{c.current&&!c.current.contains($.target)&&n()},"onOutsideClick");return document.addEventListener("pointerdown",a),()=>{document.removeEventListener("pointerdown",a)}}return()=>{}},[n]);let C=o(()=>{typeof navigator<"u"&&(navigator.clipboard.writeText(i),p(!0),setTimeout(()=>{p(!1)},1e3))},"onCopy"),g=f.createElement("div",{style:{display:"flex",justifyContent:"space-between",alignItems:"center"}},f.createElement("div",{style:{fontWeight:700,fontSize:"20px",lineHeight:"32px",color:"#0D0D0D"}},"Auto-generated code by Inferencer"),f.createElement("button",{onClick:n,onPointerEnter:()=>x(!0),onPointerLeave:()=>x(!1),style:{flexShrink:0,appearance:"none",border:"none",background:"none",padding:0,margin:0,outline:"none",borderRadius:"50px",width:"32px",height:"32px",cursor:"pointer",transition:"all 0.15s ease",transform:y?"scale(1.05)":void 0,filter:y?"brightness(0.8)":void 0}},f.createElement(lr,null))),w=f.createElement("div",{style:{fontSize:"13px",borderRadius:"8px",flex:"1",overflow:"scroll",background:"#1E1E1E"}},f.createElement(ar,{...ir,theme:cr,code:i,language:"tsx"},({className:a,style:$,tokens:u,getLineProps:T,getTokenProps:V})=>f.createElement("pre",{className:a,style:{...$,padding:"14px 14px 14px 14px",margin:"0",width:"100%",boxSizing:"border-box"}},u.map((F,D)=>f.createElement("div",{key:D,...T({line:F,key:D})},F.map((E,L)=>f.createElement("span",{key:L,...V({token:E,key:L})})))))));return f.createElement("div",{className:"refine-inferencer--code-viewer-modal",style:{position:"fixed",top:0,left:0,right:0,bottom:0,zIndex:9999,backgroundColor:"rgba(0, 0, 0, 0.5)",transition:"all 0.2s ease",opacity:e?1:0,pointerEvents:e?"all":"none",display:"flex",justifyContent:"center",alignItems:"center"}},f.createElement("div",{ref:c,style:{transform:e?"scale(1) translateY(0px)":"scale(0) translateY(-200px)",transition:"all 0.25s cubic-bezier(.35,1.29,.81,1.08)",transitionDelay:"0.25",width:"calc(100% - calc(32px * 2))",height:"calc(100% - calc(32px * 2))",backgroundColor:"#fff",maxWidth:"640px",maxHeight:"720px",borderRadius:"8px",padding:"16px"}},f.createElement("div",{style:{display:"flex",flexDirection:"column",height:"100%",width:"100%",gap:"16px"}},g,w,f.createElement("div",{style:{display:"flex",justifyContent:"flex-start",alignItems:"flex-end",gap:"16px"}},f.createElement("button",{onPointerEnter:()=>l(!0),onPointerLeave:()=>l(!1),onClick:C,style:{appearance:"none",height:"40px",border:"none",padding:"10px 16px",borderRadius:"4px",display:"flex",alignItems:"center",justifyContent:"center",background:"#0080FF",color:"#ffffff",fontSize:"14px",lineHeight:"20px",fontWeight:600,gap:"8px",cursor:"pointer",position:"relative",overflow:"hidden",transition:"filter 0.2s ease",transform:d?"scale(1.025)":"scale(1)",filter:d?"brightness(1.1)":void 0}},f.createElement(wt,{style:{flexShrink:0,marginTop:"-2px",marginBottom:"-2px"}}),f.createElement("span",null,"Copy Generated Code"),f.createElement("div",{style:{position:"absolute",width:"100%",height:"100%",top:0,left:0,display:"flex",alignItems:"center",justifyContent:"center",background:"#0080FF",transition:"all 0.2s ease",transform:s?"translateY(0)":"translateY(40px)"}},f.createElement(wt,{style:{flexShrink:0,marginTop:"-2px",marginBottom:"-2px"}}),f.createElement("span",null,"Copied!"))),f.createElement("a",{onPointerEnter:()=>A(!0),onPointerLeave:()=>A(!1),href:"https://refine.dev/docs/packages/documentation/inferencer",target:"_blank",rel:"noreferrer",style:{appearance:"none",textDecoration:"none",border:"none",padding:"10px 16px",borderRadius:"4px",display:"flex",alignItems:"center",justifyContent:"center",background:"rgba(0, 128, 255, 0.1)",color:"#0080FF",fontSize:"14px",lineHeight:"20px",fontWeight:600,gap:"8px",cursor:"pointer",transition:"all 0.2s ease",transform:v?"scale(1.025)":void 0,filter:v?"brightness(1.1)":void 0}},f.createElement(St,{style:{flexShrink:0}}),f.createElement("span",null,"Learn more about inferencer"))))))},"CodeModal"),ur=o(e=>f.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:20,height:20,fill:"none",...e},f.createElement("path",{fill:"#0080FF",fillRule:"evenodd",d:"M10 20C4.477 20 0 15.523 0 10S4.477 0 10 0s10 4.477 10 10-4.477 10-10 10Zm0-15a1.25 1.25 0 1 0 0 2.5A1.25 1.25 0 0 0 10 5Zm0 10c.69 0 1.25-.56 1.25-1.25V10a1.25 1.25 0 1 0-2.5 0v3.75c0 .69.56 1.25 1.25 1.25Z",clipRule:"evenodd"})),"InfoIcon"),St=o(e=>f.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:16,height:16,fill:"none",...e},f.createElement("path",{fill:"currentColor",d:"M5 2a1 1 0 0 1 0 2H4v8h8v-1a1 1 0 1 1 2 0v1a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h1Z"}),f.createElement("path",{fill:"currentColor",d:"M9 2a1 1 0 0 0 0 2h1.586L6.293 8.293a1 1 0 0 0 1.414 1.414L12 5.414V7a1 1 0 1 0 2 0V3a1 1 0 0 0-1-1H9Z"})),"OpenIcon"),lr=o(e=>f.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:32,height:32,fill:"none",...e},f.createElement("path",{fill:"#A6A6A6",fillRule:"evenodd",d:"M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16Zm-2.586-21.414a2 2 0 1 0-2.828 2.828L13.172 16l-2.586 2.586a2 2 0 1 0 2.828 2.828L16 18.828l2.586 2.586a2 2 0 1 0 2.828-2.828L18.828 16l2.586-2.586a2 2 0 1 0-2.828-2.828L16 13.172l-2.586-2.586Z",clipRule:"evenodd"})),"CloseIcon"),wt=o(e=>f.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:20,height:20,viewBox:"0 0 24 24",fill:"none",...e},f.createElement("path",{fill:"currentColor",fillRule:"evenodd",d:"M8 5a3 3 0 0 0 3 3h2a3 3 0 0 0 3-3h1a2 2 0 0 1 2 2v11a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2h1Zm0 7a1 1 0 0 1 1-1h6a1 1 0 1 1 0 2H9a1 1 0 0 1-1-1Zm1 3a1 1 0 1 0 0 2h4a1 1 0 1 0 0-2H9Z",clipRule:"evenodd"}),f.createElement("path",{fill:"currentColor",d:"M13 4a1 1 0 1 1 0 2h-2a1 1 0 1 1 0-2h2Z"})),"ClipboardIcon");import $e from"react";import{useDataProvider as mr,useResource as dr}from"@refinedev/core";var At=o((e,n,i,c)=>{let{resource:s,id:p,resources:d}=dr(n),l=i??p,y=mr(),[x,v]=$e.useState(void 0),[A,C]=$e.useState(void 0),[g,w]=$e.useState(void 0),[N,a]=$e.useState(!0),[$,u]=$e.useState(!1),T=$e.useCallback(async V=>{var E;let F=be(s)??Le(s==null?void 0:s.name,void 0,d),D=y(F);u(!0),v(void 0);try{if((e==="list"||e==="create")&&s){let L=await D.getList({resource:s==null?void 0:s.name,meta:se((s==null?void 0:s.identifier)??(s==null?void 0:s.name),c,["getList"])}),M=(E=L.data)==null?void 0:E[0];M||v(`<p>No records/data found for resource "${s==null?void 0:s.name}".</p>
                            <p>Please check your data provider and resource.</p>
                            <p>For more info, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`),C(M),w(L.data),setTimeout(()=>{u(!1)},500)}if((e==="edit"||e==="show")&&V&&s){let M=(await D.getOne({resource:s==null?void 0:s.name,id:V,meta:se((s==null?void 0:s.identifier)??(s==null?void 0:s.name),c,["getOne"])})).data;M||v(`<p>No records/data found for resource "${s==null?void 0:s.name}".</p>
                            <p>Please check your data provider and resource.</p>
                            <p>For more info, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`),C(M),setTimeout(()=>{u(!1)},500)}}catch(L){console.warn("An error occured while fetching the resource data. Please check the error message below:",L),v(`<p>Something went wrong while fetching the resource data.</p>
                    <p>Please check your data provider and API for resource "${s==null?void 0:s.name}".</p>
                    <p>For more info, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`),setTimeout(()=>{u(!1)},500)}},[e,y,s,d]);return $e.useEffect(()=>{a(!1),!$&&!A&&T(l)},[T,l]),{data:A,datas:g,loading:$,initial:N,error:x}},"useInferFetch");import we from"react";import{useDataProvider as yr}from"@refinedev/core";import Tt from"lodash-es/get.js";var Rt=o(({record:e,fields:n,infer:i,meta:c})=>{let s=yr(),[p,d]=we.useState([]),[l,y]=we.useState(!0),[x,v]=we.useState(!1),A=we.useCallback(async C=>{console.groupCollapsed("@refinedev/inferencer is trying to detect relations");let g=[];v(!0);try{let w=C.map(async a=>{var $,u,T,V;if(a&&(a.relation||a.canRelation)&&e){if(a.relationInfer)return a;let F=be(a.resource),D=s(F),E=a.multiple,L=Array.isArray(a.accessor)?void 0:a.multiple?e[a.key].map(M=>a.accessor?Tt(M,a.accessor):M)[0]:a.accessor?Tt(e[a.key],a.accessor):e[a.key];if(L&&a.resource)try{let M={};if(E&&D.getMany){let{data:t}=await D.getMany({resource:a.resource.name,ids:[L],meta:se((($=a.resource)==null?void 0:$.identifier)??((u=a.resource)==null?void 0:u.name),c,["getMany"])});M=t==null?void 0:t[0]}else{let{data:t}=await D.getOne({resource:a.resource.name,id:L,meta:se(((T=a.resource)==null?void 0:T.identifier)??((V=a.resource)==null?void 0:V.name),c,E?["getMany","getOne"]:["getOne"])});M=t}g.push({status:"success",resource:a.resource.name,field:a.key});let r=i("__",M,{},i);return{...a,relationInfer:r}}catch{return g.push({status:"error",resource:a.resource.name,field:a.key}),{...a,relationInfer:null}}if(L){let M,r;try{let S={};if(E&&D.getMany){let{data:b}=await D.getMany({resource:X(K(a.key)),ids:[L],meta:se(X(K(a.key)),c,["getMany"])});S=b==null?void 0:b[0]}else{let{data:b}=await D.getOne({resource:X(K(a.key)),id:L,meta:se(X(K(a.key)),c,E?["getMany","getOne"]:["getOne"])});S=b}g.push({status:"success",resource:X(K(a.key)),field:a.key}),M=S,r=!0}catch{g.push({status:"error",resource:X(K(a.key)),field:a.key});let b={};try{if(E&&D.getMany){let{data:R}=await D.getMany({resource:z(K(a.key)),meta:se(z(K(a.key)),c,["getMany"]),ids:[L]});b=R==null?void 0:R[0]}else{let{data:R}=await D.getOne({resource:z(K(a.key)),meta:se(z(K(a.key)),c,E?["getMany","getOne"]:["getOne"]),id:L});b=R}g.push({status:"success",resource:z(K(a.key)),field:a.key}),M=b,r=!1}catch{return g.push({status:"error",resource:z(K(a.key)),field:a.key}),{...a,relationInfer:null}}}let t=i("__",M,{},i),h=K(a.key);return{...a,relation:!0,type:"relation",resource:{name:r?X(h):z(h)},fieldable:!1,canRelation:void 0,relationInfer:t}}return{...a,relationInfer:null}}return a}),N=await Promise.all(w);d(N.filter(a=>a)),setTimeout(()=>{v(!1)},500)}catch{setTimeout(()=>{v(!1)},500)}setTimeout(()=>{console.log(`Tried to detect relations with ${g.length} attempts and succeeded with ${g.filter(w=>w.status==="success").length} attempts.`),console.groupEnd(),console.info("@refinedev/inferencer may send multiple requests to your API for nonexistent resources when trying to detect relations. To learn more about how the inferencer works, visit https://s.refine.dev/how-inferencer-works")},500)},[s,e]);return we.useEffect(()=>{y(!1),!x&&n&&n.length>0&&p.length===0&&A(n)},[A,x,n,A]),{fields:p,loading:x,initial:l}},"useRelationFetch");var ye=o(({type:e,additionalScope:n=[],customElements:i=[],fieldTransformers:c=[],renderer:s,loadingComponent:p,errorComponent:d,codeViewerComponent:l})=>{let y=ot([...xt,...i]),x=st([...Ct,...c]),v=o(({resourceName:C,fieldTransformer:g,hideCodeViewerInProduction:w,meta:N,id:a})=>{var he,ue;let{resource:$,resources:u}=_e(C),{i18nProvider:T}=fr(gr),{resource:V}=_e(),{data:F,datas:D,loading:E,initial:L,error:M}=At(e,C??($==null?void 0:$.name),a,N),r=o((O,H,U)=>{let Z=y(O,H,U,y,e);if(Z&&$){let Y=x([Z],u,$,U,y,e),B=g?Y.flatMap(j=>{let _=g(j);return _?[_]:[]}):Y;return B==null?void 0:B[0]}},"inferSingleField"),t=o(O=>Object.keys(O).map(U=>{let Z=O[U];return r(U,Z,O)}).filter(Boolean),"inferSingleRecord"),h=o(O=>{let H=O.map(j=>t(j)),U=O.flatMap(j=>Object.keys(j)).filter((j,_,Ie)=>Ie.indexOf(j)===_),Z={},Y=U.map(j=>{let _=H.map(le=>le.find(ie=>ie.key===j));return _.reduce((le,ie,Te)=>{if(!ie)return le;let ve=_.filter(me=>(me==null?void 0:me.key)===ie.key&&(me==null?void 0:me.type)===ie.type).length;return ve>le.count?(Z[j]=O[Te][j],{count:ve,field:ie}):le},{count:0,field:void 0}).field});return{commonRecord:Z,inferredFields:Y}},"inferMultipleRecords"),[S,b]=ne.useMemo(()=>{if(D&&(e==="list"||e==="create")){let O=h(D);return[O.inferredFields,O.commonRecord]}if(F){let O=Object.keys(F).map(H=>{let U=F[H];return y(H,U,F,y,e)}).filter(Boolean);if($){let H=x(O,u,$,F,y,e);return[g?H.flatMap(Z=>{let Y=g(Z);return Y?[Y]:[]}):H,F]}return[[],F]}return[[],void 0]},[F,D,u,$,g]),{fields:R,loading:Q}=Rt({record:b,fields:S,infer:y,meta:N}),oe=ne.useMemo(()=>{let O=[];return R.forEach((H,U,Z)=>{if(H.resource){if(O.findIndex(B=>{var j,_;return((j=B.resource)==null?void 0:j.name)===((_=H.resource)==null?void 0:_.name)})>-1)return;let Y=Z.filter((B,j)=>{var _,Ie,le,ie,Te,ve;if(j!==U){let me=H.resource,Mt=B.resource,Et=((_=B.resource)==null?void 0:_.identifier)||((Ie=H.resource)==null?void 0:Ie.identifier)?((le=B.resource)==null?void 0:le.identifier)===((ie=H.resource)==null?void 0:ie.identifier):((Te=B.resource)==null?void 0:Te.name)===((ve=H.resource)==null?void 0:ve.name);return me&&Mt&&Et}return!1});if(Y.length>0)if(e==="create"||e==="edit"){let B;[H,...Y].find(j=>{j.fieldable!==!0&&B===void 0&&(B=j)}),B?O.push(B):O.push(H)}else{let B;[H,...Y].find(j=>{j.fieldable!==!1&&B===void 0&&(B=j)}),B?O.push(B):O.push(H)}else O.push(H)}else O.push(H)}),O},[R,e]),Ae=ne.useMemo(()=>!E&&!Q&&!L&&$?s({resource:$,resources:u,fields:oe,infer:y,meta:N,isCustomPage:$.name!==(V==null?void 0:V.name),id:a,i18n:!!T}):"",[$,u,oe,E,Q]),Ne=w;return ne.createElement(ne.Fragment,null,p&&(E||Q)&&ne.createElement(p,null),!E&&!Q&&ne.createElement(ne.Fragment,null,ne.createElement(Ge,{fetchError:!E&&M?M:!E&&!L&&!F,code:qe(Ae,te(((he=$==null?void 0:$.meta)==null?void 0:he.label)??((ue=$==null?void 0:$.options)==null?void 0:ue.label)??($==null?void 0:$.label)??($==null?void 0:$.name)??"Resource",e)),errorComponent:d,additionalScope:n}),typeof l<"u"&&!Ne?ne.createElement(l,{code:Be(Ae),loading:E||Q}):null))},"Inferencer");return o(({name:C,resource:g,fieldTransformer:w,meta:N,hideCodeViewerInProduction:a,id:$})=>{let{resource:u}=_e(g??C),T=`${(u==null?void 0:u.identifier)??(u==null?void 0:u.name)}-${e}-${$}`;return ne.createElement(v,{hideCodeViewerInProduction:a,fieldTransformer:w,resourceName:g??C,meta:N??{},key:T,id:$})},"InferencerComponent")},"createInferencer");import We from"react";var fe=o(({error:e})=>e?We.createElement("div",{style:{display:"flex",justifyContent:"center",alignItems:"center",minHeight:"300px",position:"relative"}},We.createElement("div",{style:{position:"absolute",top:"50%",left:"50%",transform:"translate(-50%, -50%)"}},We.createElement("div",{style:{fontSize:"1.5rem",fontWeight:"bold"},dangerouslySetInnerHTML:{__html:e??""}}))):null,"ErrorComponent");import Se from"react";var ge=o(()=>{let[e,n]=Se.useState(0);return Se.useEffect(()=>{if(typeof window<"u"){let i=setInterval(()=>{n(c=>c===3?0:c+1)},300);return()=>{clearInterval(i)}}return()=>{}},[]),Se.createElement("div",{style:{display:"flex",justifyContent:"center",alignItems:"center",minHeight:"120px",position:"relative"}},Se.createElement("div",{style:{position:"absolute",top:"50%",left:"50%",transform:"translate(-50%, -50%)"}},Se.createElement("span",{style:{fontSize:"1rem",fontWeight:600}},"loading",".".repeat(e))))},"LoadingComponent");var Pt=o(({resource:e,fields:n,meta:i,isCustomPage:c,id:s,i18n:p})=>{let d=te(e.label??e.name,"show"),l="record",y=[["React","react",!0],["useShow","@refinedev/core"],["useResource","@refinedev/core"],["useNavigation","@refinedev/core"]];p&&y.push(["useTranslate","@refinedev/core"]),ae(i||{},["gqlQuery","gqlMutation"])&&y.push(["gql","graphql-tag",!0]);let A=n.filter(t=>(t==null?void 0:t.relation)&&!(t!=null&&t.fieldable)&&(t==null?void 0:t.resource)).filter(Boolean).map(t=>{var h,S,b,R;if(t!=null&&t.relation&&!t.fieldable&&t.resource){if(t.multiple){y.push(["useMany","@refinedev/core"]);let Q=m(l,t.key);return t.accessor&&(Q=`${m(l,t.key)}?.map((item: any) => ${m("item",void 0,t.accessor)})`),`
                const { data: ${P(t.key,"Data")}, isLoading: ${P(t.key,"IsLoading")} } =
                useMany({
                    resource: "${t.resource.name}",
                    ids: ${Q} || [],
                    queryOptions: {
                        enabled: !!${l} && !!${Q}?.length,
                    },
                    ${q(((h=t==null?void 0:t.resource)==null?void 0:h.identifier)??((S=t==null?void 0:t.resource)==null?void 0:S.name),i,["getMany"])}
                });
                `}return y.push(["useOne","@refinedev/core"]),`
                const { data: ${P(t.key,"Data")}, isLoading: ${P(t.key,"IsLoading")} } =
                useOne({
                    resource: "${t.resource.name}",
                    id: ${m(l,t.key,t.accessor,!1)} || "",
                    queryOptions: {
                        enabled: !!${l},
                    },
                    ${q(((b=t==null?void 0:t.resource)==null?void 0:b.identifier)??((R=t==null?void 0:t.resource)==null?void 0:R.name),i,["getOne"])}
                });
            `}}).filter(Boolean),C=o(t=>{if(t.relation&&t.resource){let h=P(t.key,"Data"),S=P(t.key,"IsLoading");if(t.multiple){let b=`${m(l,t.key)}?.length`;return I`
                <div style={{ marginTop: "6px" }}>
                    <h5>${k({resource:e,field:t,i18n:p,noQuotes:!0})}</h5>
                    <ul>
                    {${S} && ${b} ? <>Loading...</> : (
                        <>
                        ${(()=>{var R;if(t.relationInfer){if((R=t.relationInfer)!=null&&R.accessor){if(Array.isArray(t.relationInfer.accessor))return console.log("@refinedev/inferencer: Inferencer failed to render this field",{key:t.key,relation:t.relationInfer}),'<span title="Inferencer failed to render this field. (Unsupported nesting)">Cannot Render</span>';let Q=P(t.key),oe=m(Q,void 0,t.relationInfer.accessor);return I`
                                            {record?.${t.key}?.length ? ${h}?.data?.map((${Q}: any) => <li key={${oe}}>{${oe}}</li>) : <></>}
                                        `}return console.log("@refinedev/inferencer: Inferencer failed to render this field",{key:t.key,relation:t.relationInfer}),'<span title="Inferencer failed to render this field. (Cannot find key)">Cannot Render</span>'}return console.log("@refinedev/inferencer: Inferencer failed to render this field",{key:t.key,relation:t.relationInfer}),'<span title="Inferencer failed to render this field (Cannot find relation)">Cannot Render</span>'})()}
                        </>
                    )}
                    </ul>
                </div>
                `}return t.fieldable?I`
                <div style={{ marginTop: "6px" }}>
                    <h5>${k({resource:e,field:t,i18n:p,noQuotes:!0})}</h5>
                    <div>{${m(l,t.key,t.accessor)}}</div>
                </div>
                `:I`
                <div style={{ marginTop: "6px" }}>
                    <h5>${k({resource:e,field:t,i18n:p,noQuotes:!0})}</h5>
                    <div>
                    {${S} ? <>Loading...</> : (
                        <>
                        ${(()=>{var b,R,Q;if(t.relationInfer){if((b=t.relationInfer)!=null&&b.accessor)return Array.isArray(t.relationInfer.accessor)?`{${m(`${h}?.data`,void 0,t.relationInfer.accessor,' + " " + ')}}`:`{${h}?.data?.${t.relationInfer.accessor}}`;let oe=((R=t==null?void 0:t.relationInfer)==null?void 0:R.type)==="object"&&!((Q=t==null?void 0:t.relationInfer)!=null&&Q.accessor);return oe&&console.log("@refinedev/inferencer: Inferencer failed to render this field",{key:t.key,relation:t.relationInfer}),oe?'<span title="Inferencer failed to render this field. (Cannot find key)">Cannot Render</span>':`{${h}?.data}`}return`{${h}?.data?.id}`})()}
                        </>
                    )}
                    </div>
                </div>
                `}},"renderRelationFields"),g=o(t=>{if(t.type==="text"){if(t.multiple){let h=m("item",void 0,t.accessor);return I`
                <div style={{ marginTop: "6px" }}>
                    <h5>${k({resource:e,field:t,i18n:p,noQuotes:!0})}</h5>
                    <ul>
                        {${m(l,t.key)}?.map((item: any) => (
                            <li key={${h}}>
                                {${h}}
                            </li>
                        ))}
                    </ul>
                </div>
            `}return I`
                <div style={{ marginTop: "6px" }}>
                    <h5>${k({resource:e,field:t,i18n:p,noQuotes:!0})}</h5>
                    <div>
                    {${m(l,t.key,t.accessor)}}
                    </div>
                </div>
            `}},"textFields"),w=o(t=>{if(t.type==="image"){if(t.multiple){let h=m("item",void 0,t.accessor);return I`
                <div style={{ marginTop: "6px" }}>
                    <h5>${k({resource:e,field:t,i18n:p,noQuotes:!0})}</h5>
                    <ul>
                    {${m(l,t.key)}?.map((item: any) => (
                        <li key={${h}}>
                            <img style={{ maxWidth: 200 }} src={${h}}/>
                        </li>
                    ))}
                    </ul>
                </div>
            `}return I`
                <div style={{ marginTop: "6px" }}>
                    <h5>${k({resource:e,field:t,i18n:p,noQuotes:!0})}</h5>
                    <img src={{ maxWidth: 200 }} src={${m(l,t.key,t.accessor," + ")}} />
                </div>
                `}},"imageFields"),N=o(t=>{if(t.type==="email"){if(t.multiple){let h=m("item",void 0,t.accessor);return I`
                <div style={{ marginTop: "6px" }}>
                    <h5>${k({resource:e,field:t,i18n:p,noQuotes:!0})}</h5>
                    <ul>
                        {${m(l,t.key)}?.map((item: any) => (
                            <li key={${h}}>
                                <a href={"mailto:" + ${h}}>{${h}}</a>
                            </li>
                        ))}
                    </ul>
                </div>
            `}return I`
                <div style={{ marginTop: "6px" }}>
                    <h5>${k({resource:e,field:t,i18n:p,noQuotes:!0})}</h5>
                    <div>
                        <a href={"mailto:" + ${m(l,t.key,t.accessor," + ")}}>
                            {${m(l,t.key,t.accessor," + ")}}
                        </a>
                    </div>
                </div>
            `}},"emailFields"),a=o(t=>{if(t.type==="url"){if(t.multiple){let h=m("item",void 0,t.accessor);return I`
                <div style={{ marginTop: "6px" }}>
                    <h5>${k({resource:e,field:t,i18n:p,noQuotes:!0})}</h5>
                    <ul>
                        {${m(l,t.key)}?.map((item: any) => (
                            <li key={${h}}>
                                <a href={${h}}>{${h}}</a>
                            </li>
                        ))}
                    </ul>
                </div>
            `}return I`
            <div style={{ marginTop: "6px" }}>
                <h5>${k({resource:e,field:t,i18n:p,noQuotes:!0})}</h5>
                <div>
                    <a href={${m(l,t.key,t.accessor," + ")}} target="_blank" rel="noreferrer">
                        {${m(l,t.key,t.accessor," + ")}}
                    </a>
                </div>
            </div>
            `}},"urlFields"),$=o(t=>{if(t.type==="boolean"){if(t.multiple){let h=m("item",void 0,t.accessor);return I`
                <div style={{ marginTop: "6px" }}>
                    <h5>${k({resource:e,field:t,i18n:p,noQuotes:!0})}</h5>
                    <ul>
                        {${m(l,t.key)}?.map((item: any) => (
                            <li key={${h}}>
                                {${h} ? "Yes" : "No"}
                            </li>
                        ))}
                    </ul>
                </div>
            `}return I`
            <div style={{ marginTop: "6px" }}>
                <h5>${k({resource:e,field:t,i18n:p,noQuotes:!0})}</h5>
                <div>
                {${m(l,t.key,t.accessor," && ")} ? "Yes" : "No"}
                </div>
            </div>
            `}},"booleanFields"),u=o(t=>{if(t.type==="date"){if(t.multiple){let h=m("item",void 0,t.accessor);return I`
                <div style={{ marginTop: "6px" }}>
                    <h5>${k({resource:e,field:t,i18n:p,noQuotes:!0})}</h5>
                    <ul>
                    {${m(l,t.key)}?.map((item: any) => (
                        <li key={${h}}>
                            {(new Date(${h})).toLocaleString(undefined, { timeZone: "UTC" })}
                        </li>
                    ))}
                    </ul>
                </div>
            `}return I`
            <div style={{ marginTop: "6px" }}>
                <h5>${k({resource:e,field:t,i18n:p,noQuotes:!0})}</h5>
                <div>
                    {(new Date(${m(l,t.key,t.accessor," + ' ' + ")})).toLocaleString(undefined, { timeZone: "UTC" })}
                </div>
            </div>
            `}},"dateFields"),T=o(t=>{if(t.type==="richtext")return I`
            <div style={{ marginTop: "6px" }}>
                <h5>${k({resource:e,field:t,i18n:p,noQuotes:!0})}</h5>
                <p>
                {${m(l,t.key,t.accessor,' + " " + ')}}
                </p>
            </div>
            `},"richtextFields"),V=o(t=>{if(t.type==="number"){if(t.multiple){let h=m("item",void 0,t.accessor);return I`
                <div style={{ marginTop: "6px" }}>
                    <h5>${k({resource:e,field:t,i18n:p,noQuotes:!0})}</h5>
                    <ul>
                        {${m(l,t.key)}?.map((item: any) => (
                        <li key={${h}}>
                            {${h}}
                        </li>
                        ))}
                    </ul>
                </div>
                `}return I`
                <div style={{ marginTop: "6px" }}>
                    <h5>${k({resource:e,field:t,i18n:p,noQuotes:!0})}</h5>
                    <div>
                    {${m(l,t.key,t.accessor,' + " " + ')} ?? ""}
                    </div>
                </div>
            `}},"numberFields"),F=o(t=>{if(t)return I`
                ${t}
            `},"wrapper"),D=n.map(t=>{switch(t==null?void 0:t.type){case"text":return F(g(t));case"number":return F(V(t));case"richtext":return F(T(t));case"email":return F(N(t));case"image":return F(w(t));case"date":return F(u(t));case"boolean":return F($(t));case"url":return F(a(t));case"relation":return F(C(t));default:return}}),{canEdit:E,list:L}=e??{},M=!!L;pe(y);let r=p&&"const translate = useTranslate();";return I`
    ${ce(y)}
    
    export const ${d} = () => {
        ${r}
        const { edit, list } = useNavigation();
        ${c?"":"const { id } = useResource();"}
        const { query } = useShow(${c?`{ 
                    resource: "${e.name}", 
                    id: ${Fe(s)},
                    ${q((e==null?void 0:e.identifier)??(e==null?void 0:e.name),i,["getOne"])}
                }`:q((e==null?void 0:e.identifier)??(e==null?void 0:e.name),i,["getOne"])?`{ ${q((e==null?void 0:e.identifier)??(e==null?void 0:e.name),i,["getOne"])} }`:""});
        const { data, isLoading } = query;

        const ${l} = data?.data;
    
        ${A}

        return (
            <div style={{ padding: "16px" }}>
            <div style={{ display: "flex", alignItems: "center", justifyContent: "space-between" }}>
                <h1>${J({resource:e,action:"show",i18n:p})}</h1>
                <div style={{ display: "flex", gap: "8px" }}>
                ${M?I`<button onClick={() => list("${e.name}")}>${J({resource:e,action:"list",i18n:p})}</button>`:""}
                ${E?I`<button onClick={() => edit("${e.name}", ${c?`"${s}"`:"id ?? ''"})}>${ee({action:"edit",i18n:p,noQuotes:!0})}</button>`:""}
                </div>
            </div>
                <div>
                    ${D.join("")}
                </div>
            </div>
        );
    };
    `},"renderer"),Ue=ye({type:"show",additionalScope:[],codeViewerComponent:de,loadingComponent:ge,errorComponent:fe,renderer:Pt});import{useTable as hr}from"@refinedev/react-table";import{flexRender as $r}from"@tanstack/react-table";var xe=o(e=>Array.isArray(e.accessor)||e.multiple?`accessorKey: "${e.key}"`:e.accessor?`accessorKey: "${G(e.key,void 0,e.accessor)}"`:`accessorKey: "${e.key}"`,"getAccessorKey"),Nt=o(({resource:e,fields:n,meta:i,isCustomPage:c,i18n:s})=>{let p=te(e.label??e.name,"list"),d="tableData?.data",l=[["React","react",!0],["useNavigation","@refinedev/core"],["useTable","@refinedev/react-table"],["ColumnDef","@tanstack/react-table"],["flexRender","@tanstack/react-table"]];s&&l.push(["useTranslate","@refinedev/core"]),ae(i||{},["gqlQuery","gqlMutation"])&&l.push(["gql","graphql-tag",!0]);let x=n.filter(r=>(r==null?void 0:r.relation)&&!(r!=null&&r.fieldable)&&(r==null?void 0:r.resource)),v=x.filter(Boolean).map(r=>{var t,h;if(r!=null&&r.relation&&!r.fieldable&&r.resource){l.push(["GetManyResponse","@refinedev/core"]),l.push(["useMany","@refinedev/core"]);let S="";return r.multiple?S=`[].concat(...(${d}?.map((item) => ${m("item",r.key,r.accessor,!1)}) ?? []))`:S=`${d}?.map((item) => ${m("item",r.key,r.accessor,!1)}) ?? []`,`
                const { data: ${P(r.key,"Data")} } =
                useMany({
                    resource: "${r.resource.name}",
                    ids: ${S},
                    queryOptions: {
                        enabled: !!${d},
                    },
                    ${q(((t=r==null?void 0:r.resource)==null?void 0:t.identifier)??((h=r==null?void 0:r.resource)==null?void 0:h.name),i,["getMany"])}
                });
                `}}).filter(Boolean),A=x==null?void 0:x.map(r=>{if(r!=null&&r.resource)return P(r.key,"Data")}).filter(Boolean),C=o(r=>{var t,h,S,b,R;if(r.relation&&r.resource){let Q=`${P(r.key,"Data")}?.data`;if(Array.isArray(r.accessor))return;let oe=`id: "${r.key}"`,Ae=`header: ${k({resource:e,field:r,i18n:s,noBraces:!0})}`,Ne=xe(r),he="";if(r.multiple){let ue="item";if(r!=null&&r.relationInfer&&(ue=m("item",void 0,r.relationInfer.accessor)),r!=null&&r.relationInfer&&((t=r==null?void 0:r.relationInfer)==null?void 0:t.type)==="object"&&!((h=r==null?void 0:r.relationInfer)!=null&&h.accessor))return console.log("@refinedev/inferencer: Inferencer failed to render this field",{key:r.key,relation:r.relationInfer}),`cell: function render({ getValue }) {
                        return (
                            <span title="Inferencer failed to render this field (Cannot find key)">Cannot Render</span>
                        )
                    }`;he=`cell: function render({ getValue, table }) {
                    const meta = table.options.meta as {
                        ${P(r.key,"Data")}: GetManyResponse;
                    };

                    ${r!=null&&r.accessor?"try {":""}

                    const ${P(r.key,"")} = getValue<any[]>()?.map((item) => {
                        return meta.${P(r.key,"Data")}?.data?.find(
                            (resourceItems) => resourceItems.id === ${m("item",void 0,r.accessor)}
                        );
                    })


                    return (
                        <ul>
                            {${P(r.key,"")}?.map((item, index) => (
                                <li key={index}>
                                    {${ue}}
                                </li>
                            ))}
                        </ul>
                    )
                    ${r!=null&&r.accessor?" } catch (error) { return null; }":""}
                }
            `}else if(r!=null&&r.relationInfer){let ue=((S=r==null?void 0:r.relationInfer)==null?void 0:S.type)==="object"&&!((b=r==null?void 0:r.relationInfer)!=null&&b.accessor);ue&&console.log("@refinedev/inferencer: Inferencer failed to render this field",{key:r.key,relation:r.relationInfer}),he=`cell: function render({ getValue, table }) {
                        const meta = table.options.meta as {
                            ${P(r.key,"Data")}: GetManyResponse;
                        };

                        ${r!=null&&r.accessor?"try {":""}

                        const ${P(r.key,"")} = meta.${Q}?.find(
                            (item) => item.id == getValue<any>(),
                        );

                        return ${ue?'<span title="Inferencer failed to render this field (Cannot find key)">Cannot Render</span>':`${m(P(r.key),void 0,(R=r==null?void 0:r.relationInfer)==null?void 0:R.accessor)} ?? "Loading..."`};

                        ${r!=null&&r.accessor?" } catch (error) { return null; }":""}
                    },`}else he="";return`
                {
                    ${oe},
                    ${Ae},
                    ${Ne},
                    ${he}
                }
            `}},"renderRelationFields"),g=o(r=>{if(r.type==="image"){let t=`id: "${r.key}"`,h=xe(r),S=`header: ${k({resource:e,field:r,i18n:s,noBraces:!0})}`,b=I`
                cell: function render({ getValue }) {
                    ${r!=null&&r.accessor?"try {":""}
                        return <img style={{ maxWidth: "100px" }} src={${m("getValue<any>()",void 0,Array.isArray(r.accessor)?r.accessor:void 0," + ")}} />
                    ${r!=null&&r.accessor?" } catch (error) { return null; }":""}
                }
            `;if(r.multiple){let R=m("item",void 0,r.accessor," + ");b=`
                    cell: function render({ getValue }) {
                        ${r!=null&&r.accessor?"try {":""}
                            return (
                                <ul>
                                    {getValue<any[]>()?.map((item, index) => (
                                        <li key={index}><img src={${R}} style={{ height: "50px", maxWidth: "100px" }} /></li>
                                    ))}
                                </ul>
                            )
                        ${r!=null&&r.accessor?" } catch (error) { return null; }":""}
                    }
                `}return`
                {
                    ${t},
                    ${h},
                    ${S},
                    ${b}
                }
            `}},"imageFields"),w=o(r=>{if(r.type==="email"){let t=`id: "${r.key}"`,h=xe(r),S=`header: ${k({resource:e,field:r,i18n:s,noBraces:!0})}`,b=I`
                cell: function render({ getValue }) {
                    return <a href={"mailto:" + ${m("getValue<any>()",void 0,Array.isArray(r.accessor)?r.accessor:void 0,' + " " + ')}}>{${m("getValue<any>()",void 0,Array.isArray(r.accessor)?r.accessor:void 0,' + " " + ')}}</a>
                }
            `;return r.multiple&&(b=`
                    cell: function render({ getValue }) {
                        return (
                            <ul>
                                {getValue<any[]>()?.map((item, index) => (
                                    <li key={index}>
                                        {${m("item",void 0,r.accessor," + ")}}
                                    </li>
                                ))}
                            </ul>
                        )
                    }
                `),`
                {
                    ${t},
                    ${h},
                    ${S},
                    ${b}
                }
            `}},"emailFields"),N=o(r=>{if(r.type==="url"){let t=`id: "${r.key}"`,h=xe(r),S=`header: ${k({resource:e,field:r,i18n:s,noBraces:!0})}`,b=I`
                cell: function render({ getValue }) {
                    return <a href={${m("getValue<any>()",void 0,Array.isArray(r.accessor)?r.accessor:void 0," + ")}}>{${m("getValue<any>()",void 0,Array.isArray(r.accessor)?r.accessor:void 0," + ")}}</a>
                }
            `;return r.multiple&&(b=`
                    cell: function render({ getValue }) {
                        return (
                            <ul>
                                {getValue<any[]>()?.map((item, index) => (
                                    <li key={index}>
                                        {${m("item",void 0,r.accessor," + ")}}
                                    </li>
                                ))}
                            </ul>
                        )
                    }
                `),`
                {
                    ${t},
                    ${h},
                    ${S},
                    ${b}
                }
            `}},"urlFields"),a=o(r=>{if((r==null?void 0:r.type)==="boolean"){let t=`id: "${r.key}"`,h=xe(r),S=`header: ${k({resource:e,field:r,i18n:s,noBraces:!0})}`,b=I`
                cell: function render({ getValue }) {
                    return ${m("getValue<any>()",void 0,Array.isArray(r.accessor)?r.accessor:void 0," + ")} ? "yes" : "no"
                }
            `;return r.multiple&&(b=`
                    cell: function render({ getValue }) {
                        return (
                            <ul>
                                {getValue<any[]>()?.map((item, index) => (
                                    <li key={index}>
                                        {${m("item",void 0,r.accessor," + ")} ? "yes" : "no"}
                                    </li>
                                ))}
                            </ul>
                        );
                    }
                `),`
                {
                    ${t},
                    ${h},
                    ${S},
                    ${b}
                }
            `}},"booleanFields"),$=o(r=>{if(r.type==="date"){let t=`id: "${r.key}"`,h=xe(r),S=`header: ${k({resource:e,field:r,i18n:s,noBraces:!0})}`,b=I`
                cell: function render({ getValue }) {
                    return (new Date(${m("getValue<any>()",void 0,Array.isArray(r.accessor)?r.accessor:void 0,' + " " + ')})).toLocaleString(undefined, { timeZone: "UTC" })
                }
            `;return r.multiple&&(b=`
                    cell: function render({ getValue }) {
                        return (
                            <ul>
                                {getValue<any[]>()?.map((item, index) => (
                                    <li key={index}>
                                    {(new Date(${m("item",void 0,r.accessor," + ")})).toLocaleString(undefined, { timeZone: "UTC" })}
                                    </li>
                                ))}
                            </ul>
                        )
                    }
                `),`
                {
                    ${t},
                    ${h},
                    ${S},
                    ${b}
                }
            `}},"dateFields"),u=o(r=>{if(r&&(r.type==="text"||r.type==="number"||r.type==="richtext")){let t=`id: "${r.key}"`,h=xe(r),S=`header: ${k({resource:e,field:r,i18n:s,noBraces:!0})}`,b="";return r.multiple&&(b=`
                    cell: function render({ getValue }) {
                        return (
                            <ul>
                                {getValue<any[]>()?.map((item, index) => (
                                    <li key={index}>
                                        {${m("item",void 0,r.accessor,' + " " + ')}}
                                    </li>
                                ))}
                            </ul>
                        )
                    }
                `),!r.multiple&&Array.isArray(r.accessor)&&(b=`
                    cell: function render({ getValue }) {
                        return (
                            <>{${m("getValue<any>()",r.key,r.accessor)}}</>
                        );
                    }
                `),`
                {
                    ${t},
                    ${h},
                    ${S},
                    ${b}
                }
            `}},"basicFields"),{canEdit:T,canShow:V,canCreate:F}=e??{},E=T||V?I`
    {
        id: "actions",
        accessorKey: "id",
        header: ${s?'translate("table.actions")':'"Actions"'},
        cell: function render({ getValue }) {
            return (
                <div
                    style={{
                        display: "flex",
                        flexDirection: "row",
                        flexWrap: "wrap",
                        gap: "4px",
                    }}
                >
                ${V?I`
                    <button
                        onClick={() => {
                            show("${e.name}", getValue() as string);
                        }}
                    >
                        ${ee({action:"show",i18n:s,noQuotes:!0})}
                    </button>
                    `:""}
                    ${T?I`
                            <button
                            onClick={() => {
                                edit("${e.name}", getValue() as string);
                            }}
                        >
                            ${ee({action:"edit",i18n:s,noQuotes:!0})}
                        </button>
                    `:""}
                </div>
            );
        },
    },
        `:"",L=n.map(r=>{switch(r==null?void 0:r.type){case"text":case"number":case"richtext":return u(r);case"email":return w(r);case"image":return g(r);case"date":return $(r);case"boolean":return a(r);case"url":return N(r);case"relation":return C(r);default:return}});pe(l);let M=s&&"const translate = useTranslate();";return I`
    ${ce(l)}
    
    export const ${p} = () => {
        ${M}
        const columns = React.useMemo<ColumnDef<any>[]>(() => [
            ${[...L,E].filter(Boolean).join(",")}
        ], [${s?"translate":""}]);

        ${T||V?I`
        const { ${T?"edit,":""} ${V?"show,":""} ${F?"create,":""} } = useNavigation();
        `:""}

        const {
            getHeaderGroups,
            getRowModel,
            setOptions,
            refineCore: {
                tableQueryResult: { data: tableData },
            },
            getState,
            setPageIndex,
            getCanPreviousPage,
            getPageCount,
            getCanNextPage,
            nextPage,
            previousPage,
            setPageSize,
            getColumn,
        } = useTable({
            columns,
            ${c?`
            refineCoreProps: {
                resource: "${e.name}",
                ${q((e==null?void 0:e.identifier)??(e==null?void 0:e.name),i,["getList"])}
            }
            `:q((e==null?void 0:e.identifier)??(e==null?void 0:e.name),i,["getList"])?`refineCoreProps: { ${q((e==null?void 0:e.identifier)??(e==null?void 0:e.name),i,["getList"])} },`:""}
            
        });

        ${v}

        setOptions((prev) => ({
            ...prev,
            meta: {
                ...prev.meta,
                ${A.join(", ")}
            },
        }));

        return (
            <div style={{ padding: "16px" }}>
            <div style={{ display: "flex", alignItems: "center", justifyContent: "space-between" }}>
                <h1>${J({resource:e,action:"list",i18n:s})}</h1>
                ${F?I`<button onClick={() => create("${e.name}")}>${ee({action:"create",i18n:s,noQuotes:!0})}</button>`:""}
            </div>
                <div style={{ maxWidth: "100%", overflowY: "scroll" }}>
                    <table>
                        <thead>
                            {getHeaderGroups().map((headerGroup) => (
                                <tr key={headerGroup.id}>
                                    {headerGroup.headers.map((header) => (
                                        <th key={header.id}>
                                            {!header.isPlaceholder && (
                                                flexRender(
                                                    header.column.columnDef
                                                        .header,
                                                    header.getContext(),
                                                )
                                            )}
                                        </th>
                                    ))}
                                </tr>
                            ))}
                        </thead>
                        <tbody>
                            {getRowModel().rows.map((row) => (
                                <tr key={row.id}>
                                    {row.getVisibleCells().map((cell) => (
                                        <td key={cell.id}>
                                            {flexRender(
                                                cell.column.columnDef.cell,
                                                cell.getContext(),
                                            )}
                                        </td>
                                    ))}
                                </tr>
                            ))}
                        </tbody>
                    </table>
                </div>
                <div style={{ marginTop: "12px" }}>
                    <button
                        onClick={() => setPageIndex(0)}
                        disabled={!getCanPreviousPage()}
                    >
                        {"<<"}
                    </button>
                    <button
                        onClick={() => previousPage()}
                        disabled={!getCanPreviousPage()}
                    >
                        {"<"}
                    </button>
                    <button onClick={() => nextPage()} disabled={!getCanNextPage()}>
                        {">"}
                    </button>
                    <button
                        onClick={() => setPageIndex(getPageCount() - 1)}
                        disabled={!getCanNextPage()}
                    >
                        {">>"}
                    </button>
                    <span>
                        <strong>
                            {" "} {getState().pagination.pageIndex + 1} / {" "} {getPageCount()} {" "}
                        </strong>
                    </span>
                    <span>
                        | ${s?'{translate("pagination.go")}':"Go to Page"}:{" "}
                        <input
                            type="number"
                            defaultValue={getState().pagination.pageIndex + 1}
                            onChange={(e) => {
                                const page = e.target.value
                                    ? Number(e.target.value) - 1
                                    : 0;
                                setPageIndex(page);
                            }}
                        />
                    </span>{" "}
                    <select
                        value={getState().pagination.pageSize}
                        onChange={(e) => {
                            setPageSize(Number(e.target.value));
                        }}
                    >
                        {[10, 20, 30, 40, 50].map((pageSize) => (
                            <option key={pageSize} value={pageSize}>
                                ${s?'{translate("pagination.show")}':"Show"} {pageSize}
                            </option>
                        ))}
                    </select>
                </div>
            </div>   
        );
    };
    `},"renderer"),Ze=ye({type:"list",additionalScope:[["@refinedev/react-table","RefineReactTable",{useTable:hr}],["@tanstack/react-table","TanstackReactTable",{flexRender:$r}]],codeViewerComponent:de,loadingComponent:ge,errorComponent:fe,renderer:Nt});import{useForm as xr}from"@refinedev/react-hook-form";var Vt=o(({resource:e,fields:n,meta:i,isCustomPage:c,i18n:s})=>{let p=te(e.label??e.name,"create"),d=[["React","react",!0],["useNavigation","@refinedev/core"],["useForm","@refinedev/react-hook-form"]];s&&d.push(["useTranslate","@refinedev/core"]),ae(i||{},["gqlQuery","gqlMutation"])&&d.push(["gql","graphql-tag",!0]);let x=n.filter(a=>(a==null?void 0:a.relation)&&!(a!=null&&a.fieldable)&&(a==null?void 0:a.resource)).filter(Boolean).map(a=>{var $,u;if(a!=null&&a.relation&&!a.fieldable&&a.resource)return d.push(["useSelect","@refinedev/core"]),`
                const { options: ${P(a.key,"Options")} } =
                useSelect({
                    resource: "${a.resource.name}",
                    ${Ce(a)}
                    ${q((($=a==null?void 0:a.resource)==null?void 0:$.identifier)??((u=a==null?void 0:a.resource)==null?void 0:u.name),i,["getList"])}
                });
            `}).filter(Boolean),v=o(a=>{if(a.relation&&a.resource){d.push(["useSelect","@refinedev/core"]);let $=P(a.key,"Options");return I`
            <label>
                <span style={{ marginRight: "8px" }}>
                    ${k({resource:e,field:a,i18n:s,noQuotes:!0})}
                </span>
                <select
                    placeholder="Select ${z(a.resource.name)}"
                    {...register("${G(a.key,void 0,a.accessor)}", {
                        required: ${a.multiple?"false":'"This field is required"'},
                    })}
                >
                    {${$}?.map((option) => (
                        <option value={option.value} key={option.value}>
                            {option.label}
                        </option>
                    ))}
                </select>
                <span style={{ color: "red" }}>
                    {${m("(errors as any)",a.key,a.accessor,!1)}?.message as string}
                </span>
            </label>
            `}},"renderRelationFields"),A=o(a=>{if(a.type==="text"||a.type==="url"||a.type==="email"||a.type==="number"||a.type==="date"||a.type==="richtext"){if(ke(a.key)||a.multiple)return;let $=a.type==="richtext"?"textarea":"input";return I`
                <label>
                    <span style={{ marginRight: "8px" }}>
                        ${k({resource:e,field:a,i18n:s,noQuotes:!0})}
                    </span>
                    <${$}
                        ${a.type!=="date"&&a.type!=="richtext"?`type="${a.type}"`:""}
                        ${$==="textarea"?`
                            rows={5}
                            cols={33}
                            style={{ verticalAlign: "top" }}
                        `:""}
                        {...register("${G(a.key,void 0,a.accessor)}", {
                            required: "This field is required",
                            ${a.type==="number"?"valueAsNumber: true,":""}
                        })}

                    />
                    <span style={{ color: "red" }}>
                        {${m("(errors as any)",a.key,a.accessor,!1)}?.message as string}
                    </span>
                </label>
            `}},"basicInputFields"),C=o(a=>{if(a.type==="boolean")return a.multiple?void 0:I`
                <label>
                    <span style={{ marginRight: "8px" }}>
                        ${k({resource:e,field:a,i18n:s,noQuotes:!0})}
                    </span>
                    <input
                        type="checkbox"
                        {...register("${G(a.key,void 0,a.accessor)}", {
                            required: "This field is required",
                        })}
                    />
                    <span style={{ color: "red" }}>
                        {${m("errors",a.key,a.accessor,!1)}?.message as string}
                    </span>
                </label>
            `},"booleanFields"),g=n.map(a=>{switch(a==null?void 0:a.type){case"text":case"number":case"email":case"url":case"richtext":case"date":return A(a);case"boolean":return C(a);case"relation":return v(a);default:return}}),w=!!e.list;pe(d);let N=s&&"const translate = useTranslate();";return I`
    ${ce(d)}
    
    export const ${p} = () => {
        ${N}
        ${w?`
        const { list } = useNavigation();
        `:""}
        const {
            refineCore: { onFinish, formLoading },
            register,
            handleSubmit,
            resetField,
            formState: { errors },
        } = useForm(
            ${c?`
            { 
                refineCoreProps: {
                    resource: "${e.name}",
                    action: "create",
                    ${q(e.identifier??e.name,i,["create","getOne"])}
                }
            }`:q(e.identifier??e.name,i,["create","getOne"])?`{
                        refineCoreProps: { ${q(e.identifier??e.name,i,["create","getOne"])} }
                        }`:""}
        );
    
        ${x}

        return (
            <div style={{ padding: "16px" }}>
                <div style={{ display: "flex", justifyContent: ${w?'"space-between"':'"flex-start"'} }}>
                    <h1>${J({resource:e,action:"create",i18n:s})}</h1>
                    ${w?I`
                            <div>
                        <button
                                onClick={() => {
                                    list("${e.name}");
                                }}
                        >
                            ${J({resource:e,action:"list",i18n:s})}
                        </button>
                        </div>
                    `:""}
                </div>
                <form onSubmit={handleSubmit(onFinish)}>
                    <div style={{ display: "flex", flexDirection: "column", gap: "8px" }}>
                        ${g.join("")}
                        <div>
                            <input type="submit" value=${ee({action:"save",i18n:s})} />
                        </div>
                    </div>
                </form>
            </div>
        );
    };
    `},"renderer"),Ye=ye({type:"create",additionalScope:[["@refinedev/react-hook-form","RefineReactHookForm",{useForm:xr}]],codeViewerComponent:de,loadingComponent:ge,errorComponent:fe,renderer:Vt});import{useForm as Ir}from"@refinedev/react-hook-form";var Lt=o(({resource:e,fields:n,meta:i,isCustomPage:c,id:s,i18n:p})=>{let d=te(e.label??e.name,"edit"),l=P(e.label??e.name,"Data"),y=[["React","react",!0],["useNavigation","@refinedev/core"],["useForm","@refinedev/react-hook-form"]];p&&y.push(["useTranslate","@refinedev/core"]),ae(i||{},["gqlQuery","gqlMutation"])&&y.push(["gql","graphql-tag",!0]);let A=n.filter(u=>(u==null?void 0:u.relation)&&!(u!=null&&u.fieldable)&&(u==null?void 0:u.resource)).filter(Boolean).map(u=>{var T,V;if(u!=null&&u.relation&&!u.fieldable&&u.resource){y.push(["useSelect","@refinedev/core"]);let F=m(l,u.key,u.accessor,!1);return u.multiple&&u.accessor&&(F=`${m(l,u.key)}?.map((item: any) => ${m("item",void 0,u.accessor)})`),`
                const { options: ${P(u.key,"Options")} } =
                useSelect({
                    resource: "${u.resource.name}",
                    defaultValue: ${F},
                    ${Ce(u)}
                    ${q(((T=u==null?void 0:u.resource)==null?void 0:T.identifier)??((V=u==null?void 0:u.resource)==null?void 0:V.name),i,["getList"])}
                });

                React.useEffect(() => {
                    setValue("${G(u.key,void 0,u.accessor)}", ${F});
                }, [${P(u.key,"Options")}]);
            `}}).filter(Boolean),C=o(u=>{if(u.relation&&u.resource){y.push(["useSelect","@refinedev/core"]);let T=P(u.key,"Options");return I`
            <label>
                <span style={{ marginRight: "8px" }}>${k({resource:e,field:u,i18n:p,noQuotes:!0})}</span>
                <select
                    placeholder="Select ${z(u.resource.name)}"
                    {...register("${G(u.key,void 0,u.accessor)}", {
                        required: ${u.multiple?"false":'"This field is required"'},
                    })}
                >
                    {${T}?.map((option) => (
                        <option value={option.value} key={option.value}>
                            {option.label}
                        </option>
                    ))}
                </select>
                <span style={{ color: "red" }}>
                    {${m("(errors as any)",u.key,u.accessor,!1)}?.message as string}
                </span>
            </label>
            `}},"renderRelationFields"),g=o(u=>{if(u.type==="text"||u.type==="url"||u.type==="email"||u.type==="number"||u.type==="date"||u.type==="richtext"){if(u.multiple){let V=G(u.key,"${index}",u.accessor),F=m(`${m("(errors as any)",u.key,void 0,!1)}?.[index]`,void 0,u.accessor);return`
                    <>
                        {${m(l,u.key)}?.map((item: any, index: number) => (
                            <label key={index}>
                                <span style={{ marginRight: "8px" }}>
                                    ${k({resource:e,field:u,i18n:p,noQuotes:!0})}
                                </span>
                                <input ${u.type!=="richtext"?`
                                type="${u.type!=="date"?u.type:"text"}"
                                `:""} {...register(\`${V}\`, { required: "This field is required", ${u.type==="number"?"valueAsNumber: true,":""} })} />
                                <span style={{color: "red"}}>
                                {${m(F,"message")} as string}
                                </span>
                            </label>
                        ))}
                    </>
                `}let T=u.type==="richtext"?"textarea":"input";return I`
            <label>
                <span style={{ marginRight: "8px" }}>${k({resource:e,field:u,i18n:p,noQuotes:!0})}</span>
                <${T}
                ${ke(u.key)?"disabled":""}
                ${u.type!=="date"&&u.type!=="richtext"?`type="${u.type}"`:""}
                ${T==="textarea"?`
                    rows={5}
                    cols={33}
                    style={{ verticalAlign: "top" }}
                `:""}
                {...register("${G(u.key,void 0,u.accessor)}", {
                    required: "This field is required",
                    ${u.type==="number"?"valueAsNumber: true,":""}
                })}
                />
                <span style={{ color: "red" }}>
                {${m("(errors as any)",u.key,u.accessor,!1)}?.message as string}
                </span>
            </label>
            `}},"basicInputFields"),w=o(u=>{if(u.type==="boolean"){if(u.multiple){let T=G(u.key,void 0,u.accessor),V=`${m("(errors as any)",u.key,void 0,!1)}?.[index]`;return`
                    <>
                        {${m(l,u.key)}?.map((item: any, index: number) => (
                            <label key={index}>
                            <span style={{ marginRight: "8px" }}>
                            ${k({resource:e,field:u,i18n:p,noQuotes:!0})}
                            </span>
                            <input
                                type="checkbox"
                                {...register(\`${T}.\${index}\`, {
                                    required: "This field is required",
                                })}
                            />
                            <span style={{ color: "red" }}>
                                {${V}?.message as string}
                            </span>
                        ))}
                    </>
                `}return I`
            <label>
                <span style={{ marginRight: "8px" }}>${k({resource:e,field:u,i18n:p,noQuotes:!0})}</span>
                <input type="checkbox" {...register("${G(u.key,void 0,u.accessor)}", {
                    required: "This field is required",
                })} />
                <span style={{ color: "red" }}>
                    {${m("errors",u.key,u.accessor,!1)}?.message as string}
                </span>
            </label>
            `}},"booleanFields"),N=n.map(u=>{switch(u==null?void 0:u.type){case"text":case"number":case"email":case"url":case"richtext":case"date":return g(u);case"boolean":return w(u);case"relation":return C(u);default:return}}),a=!!e.list;pe(y);let $=p&&"const translate = useTranslate();";return I`
    ${ce(y)}
    
    export const ${d} = () => {
        ${$}
        ${a?`
        const { list } = useNavigation();
        `:""}
        const {
            refineCore: { onFinish, formLoading, query },
            register,
            handleSubmit,
            setValue,
            formState: { errors },
        } = useForm(
            ${c?`
            { 
                refineCoreProps: {
                    resource: "${e.name}",
                    id: ${Fe(s)},
                    action: "edit",
                    ${q((e==null?void 0:e.identifier)??(e==null?void 0:e.name),i,["update","getOne"])}
                }
            }`:q((e==null?void 0:e.identifier)??(e==null?void 0:e.name),i,["update","getOne"])?`{ refineCoreProps: {
                        ${q((e==null?void 0:e.identifier)??(e==null?void 0:e.name),i,["update","getOne"])}
                    } }`:""}
        );
    
        const ${l} = query?.data?.data;
    
        ${A}

        return (
            <div style={{ padding: "16px" }}>
                <div style={{ display: "flex", justifyContent: ${a?'"space-between"':'"flex-start"'} }}>
                    <h1>${J({resource:e,action:"edit",i18n:p})}</h1>
                    ${a?I`
                    <div>
                        <button
                                onClick={() => {
                                    list("${e.name}");
                                }}
                        >
                            ${J({resource:e,action:"list",i18n:p})}
                        </button>
                    </div>
                    `:""}
                </div>
                <form onSubmit={handleSubmit(onFinish)}>
                    <div style={{ display: "flex", flexDirection: "column", gap: "8px" }}>
                        ${N.join("")}
                        <div>
                            <input type="submit" value=${ee({action:"save",i18n:p})} />
                        </div>
                    </div>
                </form>
            </div>
        );
    };
    `},"renderer"),Je=ye({type:"edit",additionalScope:[["@refinedev/react-hook-form","RefineReactHookForm",{useForm:Ir}]],codeViewerComponent:de,loadingComponent:ge,errorComponent:fe,renderer:Lt});var Ja=o(({action:e,id:n,...i})=>{let{action:c,id:s}=vr();switch(e??c){case"show":return Pe.createElement(Ue,{...i,id:n??s});case"create":return Pe.createElement(Ye,{...i,id:n??s});case"edit":return Pe.createElement(Je,{...i,id:n??s});default:return Pe.createElement(Ze,{...i,id:n??s})}},"HeadlessInferencer");export{Ye as HeadlessCreateInferencer,Vt as HeadlessCreateRenderer,Je as HeadlessEditInferencer,Lt as HeadlessEditRenderer,Ja as HeadlessInferencer,Ze as HeadlessListInferencer,Nt as HeadlessListRenderer,Ue as HeadlessShowInferencer,Pt as HeadlessShowRenderer};
//# sourceMappingURL=headless.mjs.map