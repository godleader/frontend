"use client"
var or=Object.create;var Le=Object.defineProperty;var ar=Object.getOwnPropertyDescriptor;var sr=Object.getOwnPropertyNames;var ir=Object.getPrototypeOf,cr=Object.prototype.hasOwnProperty;var o=(e,n)=>Le(e,"name",{value:n,configurable:!0});var pr=(e,n)=>{for(var i in n)Le(e,i,{get:n[i],enumerable:!0})},It=(e,n,i,c)=>{if(n&&typeof n=="object"||typeof n=="function")for(let a of sr(n))!cr.call(e,a)&&a!==i&&Le(e,a,{get:()=>n[a],enumerable:!(c=ar(n,a))||c.enumerable});return e};var q=(e,n,i)=>(i=e!=null?or(ir(e)):{},It(n||!e||!e.__esModule?Le(i,"default",{value:e,enumerable:!0}):i,e)),ur=e=>It(Le({},"__esModule",{value:!0}),e);var Lr={};pr(Lr,{AntdCreateInferencer:()=>Qe,AntdCreateRenderer:()=>yt,AntdEditInferencer:()=>_e,AntdEditRenderer:()=>ft,AntdInferencer:()=>Pr,AntdListInferencer:()=>Ke,AntdListRenderer:()=>dt,AntdShowInferencer:()=>ze,AntdShowRenderer:()=>mt});module.exports=ur(Lr);var Me=q(require("react")),tr=require("@refinedev/core");var K=require("@refinedev/antd"),Jt=require("antd");var J=q(require("react")),be=require("@refinedev/core");var lr=/(image|photo|avatar|url|logo|cover|thumbnail|icon)/i,mr=/^(\w|\d|_|-|)*?(name|label){1}$/i,We=o((e,n)=>{let i=["name","label","title","count","content","username","nickname","login","firstName","lastName","url"],a=Object.keys(n).filter(y=>mr.test(y));i.push(...a),lr.test(e)&&i.unshift("url");let u=i.find(y=>y in n&&!!n[y]);if(u)return u==="firstName"&&"lastName"in n?["firstName","lastName"]:u},"getFieldableKeys");var ht=require("@refinedev/core");function Ge(e,n,i){if(n)return n;let c=i==null?void 0:i.find(u=>u.name===e),a=(0,ht.pickNotDeprecated)(c==null?void 0:c.meta,c==null?void 0:c.options);return a!=null&&a.dataProviderName?a.dataProviderName:"default"}o(Ge,"pickDataProvider");var Ne=o(e=>{var n;return(n=e==null?void 0:e.options)==null?void 0:n.dataProviderName},"dataProviderFromResource");var Ze=o(e=>{let n=[...e].filter(Boolean).sort((i,c)=>(c.priority||0)-(i.priority||0))[0];return n||null},"pickInferredField");var $t=q(require("prettier/standalone")),xt=q(require("prettier/parser-typescript"));var Ye=o(e=>{try{return $t.default.format(e,{parser:"typescript",plugins:[xt.default],arrowParens:"always",trailingComma:"all",semi:!0,tabWidth:4,printWidth:80})}catch(n){return console.warn("Formatting error in inferencer",n),e}},"prettierFormat");var vt=o(e=>e.replace(/ {2,}/g," ").replace(/\n{2,}/g,`
`),"prettySpaces");var Je=/(-id|-ids|_id|_ids|Id|Ids|ID|IDs)(\[\])?$/,Ft=o((e,n)=>{let i=Je.test(e),c=typeof n=="string"||typeof n=="number",a=Array.isArray(n)&&n.every(u=>typeof u=="string"||typeof u=="number");return i&&c||i&&a?{key:e,relation:!0,multiple:a,type:"relation",priority:1}:!1},"relationInfer");var _=o(e=>e.replace(Je,""),"removeRelationSuffix");var X=o(e=>_(e).replace(/([a-z])([A-Z])/g,"$1 $2").replace(/_/g," ").replace(/-/g," ").split(" ").map(y=>y.charAt(0).toUpperCase()+y.slice(1)).join(" "),"prettyString");var x=o(e=>{let{resource:n,field:i,i18n:c}=e;if(c){let u=`translate("${n.name}.fields.${i.key}")`;return e.noBraces?`${u}`:`{${u}}`}let a=X(i.key);return e.noQuotes?a:`"${a}"`},"translatePrettyString");var Xe=q(require("pluralize"));var ne=o((e="")=>Xe.default.isSingular(e)?e:Xe.default.singular(e),"toSingular");var et=q(require("pluralize"));var ce=o((e="")=>et.default.isPlural(e)?e:et.default.plural(e),"toPlural");var tt=o(e=>e.replace(/export\s+(const|let|var|type|interface|function|class)\s+(\w+)\s*(=|:)\s*/g,"$1 $2 = ").split(`
`).filter(a=>!a.trim().startsWith("export default")).join(`
`),"replaceExports");var bt=/import(?:(?:(?:[ \n\t]+([^ *\n\t\{\},]+)[ \n\t]*(?:,|[ \n\t]+))?([ \n\t]*\{(?:[ \n\t]*[^ \n\t"'\{\}]+[ \n\t]*,?)+\})?[ \n\t]*)|[ \n\t]*\*[ \n\t]*as[ \n\t]+([^ \n\t\{\}]+)[ \n\t]+)from[ \n\t]*(?:['"])([^'"\n]+)(?:['"])(?:;?)/g,dr=/import[ \n\t](?:['"])([^'"\n]+)(?:['"])(?:;?)/g,yr=/((?:\w|\s|_)*)( as )((?:\w|\s|_)*)( |,)?/g,rt=o((e,n={})=>{let i=e.matchAll(bt),c=new Set;for(let a of i){let[,u,y,l,m]=a;if(m in n){let v=n[m];if(m==="react")continue;u&&c.add(`const { default: ${u} } = ${v};`),y&&c.add(`const${y.replace(yr,"$1: $3$4")} = ${v};`),l&&c.add(`const ${l} = ${v};`)}}return vt(`
    ${Array.from(c).join(`
`)}
    ${e.replace(bt,"").replace(dr,"")}
    `)},"replaceImports");var Re=q(require("pluralize"));var nt=o((e,n)=>e?n.find(c=>{let a=_(e.key);return c.name===a||c.name===(Re.default.isPlural(a)?a:Re.default.plural(a))||c.name===(Re.default.isSingular(a)?a:Re.default.singular(a))}):void 0,"resourceFromInferred");var kt=q(require("pluralize"));var oe=o((e,n,i="Inferred")=>{let c=e.replace(/[^a-zA-Z0-9]/g," "),a=kt.default.singular(c),y=X(a).replace(/ /g,"")||i,l=n.charAt(0).toUpperCase()+n.slice(1);return/^[a-zA-Z]/.test(y)?`${y}${l}`:`${l}${y}`},"componentName");var fr=o(e=>e?Array.isArray(e)?e.join(""):typeof e=="string"?e:typeof e=="object"||typeof e=="function"?e.toString():typeof e=="number"?String(e):typeof e=="boolean"&&e?"true":e:"","handleExpression"),I=o((e,...n)=>e.reduce((c,a,u)=>`${c}${a}${fr(n[u])}`,"").trim(),"jsx");var ot=o((e,n)=>`
    ${e??""}
    
    render(typeof ${n} !== "undefined" ? <${n} /> : <></>);
    `,"prepareLiveCode");var at=o(e=>e==null?void 0:e.replace(/(\/\* hidden-start \*\/)(.|\n)*?(\/\* hidden-end \*\/)/g,""),"removeHiddenCode");var gr=/^[a-zA-Z_$][a-zA-Z_$0-9]*$/,xe=o(e=>gr.test(e),"shouldDotAccess");function st(e,n,i){let c=`${e}`;return n&&(c+="?.",xe(n)?c+=n:c+=`['${n}']`),i&&(c+="?.",xe(i)?c+=i:c+=`['${i}']`),c}o(st,"accessorSingle");function Ir(e,n,i){return(i??[]).map(a=>st(e,n,a))}o(Ir,"accessorMultiple");var f=o((e,n,i,c=' + " " + ')=>Array.isArray(i)?c?Ir(e,n,i).join(c):st(e,n,i[0]):st(e,n,i),"accessor");var pe=o(e=>{let n=e.reduce((c,[a,u,y])=>(c[u]||(c[u]=[]),c[u].includes(a)||(y?c[u].push([a,!0]):c[u].push(a)),c),{});return Object.entries(n).map(([c,a])=>{let u=a.find(v=>Array.isArray(v)&&v[1]),y=a.filter(v=>typeof v=="string"),l=u?`${u[0]}`:"",m=y.length?`{ ${y.join(", ")} }`:"";return`import ${l}${l&&m?", ":""}${m} from "${c}";`})},"printImports");var hr=/^id$/i,ve=o(e=>hr.test(e),"isIDKey");var it=o(e=>{var n;return e.relationInfer&&(n=e.relationInfer)!=null&&n.accessor?Array.isArray(e.relationInfer.accessor)?`optionLabel: "${e.relationInfer.accessor[0]}",`:e.relationInfer.accessor!=="title"?`optionLabel: "${e.relationInfer.accessor}",`:"":""},"getOptionLabel");var ue=o(e=>{},"noOp");var z=o((e,n="")=>{if(Number.isInteger(Number(e)))return n.charAt(0).toLowerCase()+n.slice(1)+e;let c=e.replace(/^\d+/,"").replace(/[^a-zA-Z0-9]/g,"-"),a=X(c).replace(/ /g,"");return`${a.charAt(0).toLowerCase()+a.slice(1)}${n.charAt(0).toUpperCase()+n.slice(1)}`},"getVariableName");var U=o((e,n,i)=>{var R,A,h,P;if(!(n&&i&&e)||!Object.keys(n).length)return"";let c=e?n[e]:{},a=[],u=i.find(E=>c[E]),y=c==null?void 0:c[u||"default"];if(!y)return"";let{gqlQuery:l,gqlMutation:m,...v}=y;Object.keys(v).forEach(E=>{a.push(`${E}: ${JSON.stringify(v[E])}`)}),l&&a.push(`gqlQuery: gql\`${(A=(R=l==null?void 0:l.loc)==null?void 0:R.source)==null?void 0:A.body}\``),m&&a.push(`gqlMutation: gql\`${(P=(h=m==null?void 0:m.loc)==null?void 0:h.source)==null?void 0:P.body}\``);let b=a.join(",");return b.length?`meta:{${b}}`:""},"getMetaProps"),ae=o((e,n,i)=>{if(n&&i&&e){let c=e?n[e]:{},u=[...i,"default"].reduce((y,l)=>y??(c==null?void 0:c[l]),void 0);if(u)return u}},"pickMeta");var Ee=o(e=>e===void 0?e:typeof e=="string"?`"${e}"`:e,"idQuoteWrapper");var se=o((e,n)=>{for(let i in e)if(n.includes(i)||typeof e[i]=="object"&&e[i]!==null&&se(e[i],n))return!0;return!1},"deepHasKey");var Ct=o(e=>{let n=o((i,c,a,u=n,y)=>{let l=e.map(v=>v(i,c,a,u,y));return Ze(l)},"fieldInferencer");return n},"composeInferencers");var wt=o(e=>o((i,c,a,u,y,l)=>e.reduce((m,v)=>v(m,c,a,u,y,l),i),"fieldTransformer"),"composeTransformers");var At=o((e,n,i,c,a)=>{let u=Array.isArray(n),y=Array.isArray(n)&&n.every(l=>typeof l=="string"||typeof l=="number");if(u){if(!y){let m=c(e,n[0],i,c,a);return m?{...m,key:e,multiple:!0,priority:1}:!1}let l=c(e,n[0],i,c,a)||{type:"string"};return{key:e,multiple:!0,priority:1,type:l==null?void 0:l.type}}return!1},"arrayInfer");var Tt=o((e,n)=>typeof n=="boolean"?{key:e,type:"boolean"}:!1,"booleanInfer");var ct=q(require("dayjs"));var $r=/(_at|_on|At|On|AT|ON)(\[\])?$/,xr=["/",":","-","."],St=o((e,n)=>{let i=$r.test(e)&&(0,ct.default)(n).isValid(),c=typeof n=="string"&&(0,ct.default)(n).isValid();return typeof n=="string"&&xr.some(u=>n.includes(u))&&(i||c)?{key:e,type:"date",priority:1}:!1},"dateInfer");var vr=/^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,Pt=o((e,n)=>typeof n=="string"&&vr.test(n)?{key:e,type:"email",priority:1}:!1,"emailInfer");var Fr=/\.(gif|jpe?g|tiff?|png|webp|bmp|svg)$/i,Lt=o((e,n)=>typeof n=="string"&&Fr.test(n)?{key:e,type:"image",priority:2}:!1,"imageInfer");var Nt=o((e,n)=>typeof n>"u"||n===null?null:!1,"nullishInfer");var Rt=o((e,n)=>{let i=typeof n=="string"&&n.length>0,c=!Number.isNaN(Number(n));return i&&c||typeof n=="number"?{key:e,type:"number"}:!1},"numberInfer");var Et=/id$/i,Vt=o((e,n,i,c,a)=>{let u=n!==null,y=!Array.isArray(n);if(u&&y&&typeof n=="object"){let m=Object.keys(n).length===1&&Et.test(Object.keys(n)[0]),v=Object.keys(n).some(A=>Et.test(A));if(m)return{key:e,type:"relation",relation:!0,accessor:"id",priority:1};let b=We(e,n);if((b?b.length>0:!1)&&b){let A=b&&Array.isArray(b)?b[0]:b,h=c(A,n[A],n,c,a);if(h){let P=Array.isArray(b)?b.map(E=>h.accessor?`${E}.${Array.isArray(h.accessor)?h.accessor[0]:h.accessor}`:E):h.accessor?Array.isArray(h.accessor)?`${b}.${h.accessor[0]}`:`${b}.${h.accessor}`:b;return(h==null?void 0:h.type)==="text"&&(a==="create"||a==="edit")&&v?{key:e,type:"relation",relation:!0,accessor:"id",priority:1}:{...h,fieldable:!0,key:e,accessor:P,priority:1}}}return{key:e,fieldable:!1,type:"object",priority:1}}return!1},"objectInfer");var Mt=o((e,n)=>typeof n=="string"&&n.length>100?{key:e,type:"richtext",priority:1}:!1,"richtextInfer");var Dt=o((e,n)=>typeof n=="string"?{key:e,type:"text"}:!1,"textInfer");var br=/^(https?|ftp):\/\/(-\.)?([^\s/?\.#-]+\.?)+(\/[^\s]*)?$/i,jt=o((e,n)=>typeof n=="string"&&br.test(n)?{key:e,type:"url",priority:1}:!1,"urlInfer");var Ot=[At,Tt,St,Pt,Lt,Nt,Rt,Vt,Ft,Mt,Dt,jt];var Bt=o((e,n,i,c)=>e.map(u=>{if(!u.relation&&(u.type==="text"||u.type==="richtext"||u.type==="number")&&!u.canRelation){let y=/^[a-z0-9-]+$/,l=o(A=>y.test(`${A}`),"isValidUUID"),m=u.key.toLowerCase()!=="id";return!(!u.accessor||typeof u.accessor=="string")||!m?u:(u.multiple?c[u.key]:[c[u.key]]).every(A=>l(u.accessor?A[u.accessor]:A))?{...u,canRelation:!0}:u}return u}),"basicToRelation");var kr=/(image|photo|avatar|cover|thumbnail|icon)/i,qt=o(e=>e.map(i=>i.type==="url"&&kr.test(i.key)?{...i,type:"image"}:i),"imageByKey");var Ht=o((e,n)=>e.map(c=>{let a=nt(c,n);return a?{...c,relation:!0,type:"relation",resource:a}:c}),"relationByResource");var zt=o((e,n,i,c,a,u)=>e.map(l=>{if(l.relation&&l.type==="relation"&&!l.resource){let m=l.accessor?c[l.key][l.accessor]:c[l.key],v=a(l.key,m,c,a,u);if(v&&v.type!=="relation")return{...l,fieldable:!0,relation:!1,type:v.type,canRelation:!0}}return l}),"relationToFieldable");var Ut=[qt,Ht,zt,Bt];var ee=q(require("react")),Cr=q(require("@refinedev/core")),wr=q(require("graphql-tag")),Oe=require("@aliemir/react-live");var Kt=[["react","React",ee.default],["@refinedev/core","RefineCore",Cr],["graphql-tag","GraphqlTag",wr]],pt=ee.default.createContext({}),ut=o(({fetchError:e,code:n,additionalScope:i,errorComponent:c})=>{let a=(n&&tt(rt(n,[...Kt,...i??[]].reduce((l,[m,v,b,R])=>R?l:{...l,[m]:v},{}))))??"",u=ee.default.useMemo(()=>({React:ee.default,...ee.default,...[...Kt,...i??[]].reduce((l,[m,v,b])=>({...l,[v]:b}),{})}),[i]),y=ee.default.useMemo(()=>o(()=>{let{error:m}=ee.default.useContext(pt);return c?ee.default.createElement(c,{error:m?`<p>An error occured while rendering the generated component.You can check the generated code from the below "Show Code" button and fix the error manually.</p>
                                    <p>If you think this is a bug, please report the issue at <a target="_blank" rel="noopener noreferrer" href="https://github.com/refinedev/refine/issues">https://github.com/refinedev/refine/issues</a></p>
                                    <p>Exception:</p>
                                    <code>${m}</code>`:typeof e=="string"?e:e?`<p>Something went wrong while fetching the resource data.</p>
                                    <p>To learn more about the Inferencer, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`:void 0}):null},"LiveErrorComponent"),[c,e]);return ee.default.createElement(Oe.LiveProvider,{Context:pt,code:a,scope:u,noInline:!0},!e&&ee.default.createElement(Oe.LivePreview,{Context:pt}),ee.default.createElement(y,null))},"LiveComponent");var g=q(require("react")),Be=q(require("prism-react-renderer")),_t=q(require("prism-react-renderer/themes/vsDark"));var de=o(({code:e,loading:n})=>{let i=g.default.useMemo(()=>Ye(e??""),[e]),[c,a]=g.default.useState(!1),[u,y]=g.default.useState(!1),[l,m]=g.default.useState(!1),[v,b]=g.default.useState(!1),[R,A]=g.default.useState(!1);return g.default.useEffect(()=>{if(!n){let h=setTimeout(()=>{a(!0)},300);return()=>{clearTimeout(h)}}return()=>{}},[n]),g.default.useEffect(()=>{if(typeof window<"u"){let h=window.matchMedia("(max-width: 449px)");h.matches?m(!1):m(!0);let P=o(()=>{h.matches?m(!1):m(!0)},"handleResize");return window.addEventListener("resize",P),()=>{window.removeEventListener("resize",P)}}return()=>{}},[]),g.default.useEffect(()=>{if(typeof window<"u"){let h=window.matchMedia("(max-width: 1280px)");h.matches?b(!0):b(!1);let P=o(()=>{h.matches?b(!0):b(!1)},"handleResize");return window.addEventListener("resize",P),()=>{window.removeEventListener("resize",P)}}return()=>{}},[]),i&&!n?g.default.createElement(g.default.Fragment,null,l&&g.default.createElement("div",{className:"refine-inferencer--code-viewer",style:{position:"sticky",bottom:"24px",paddingTop:"24px",left:0,right:0,width:"100%",zIndex:10,display:"flex",justifyContent:"center",transition:"all 0.2s ease",opacity:c&&!u?1:0,transform:c&&!u?"translateY(0)":"translateY(100px)"}},g.default.createElement("div",{style:{width:"calc(100% - calc(64px * 2))",maxWidth:"1080px",padding:"20px",backgroundColor:"#1A1A1A",boxShadow:"0px 4px 16px -4px rgba(0, 0, 0, 0.5), 0px 8px 32px -8px rgba(0, 0, 0, 0.35)",borderRadius:"16px",display:"flex",alignItems:"center",justifyContent:"space-between",flexDirection:v?"column":"row",gap:"12px"}},g.default.createElement("div",{style:{display:"flex",alignItems:"flex-start",gap:"8px"}},g.default.createElement("div",null,g.default.createElement(Tr,null)),g.default.createElement("div",{style:{fontSize:"14px",lineHeight:"20px",color:"#ffffff"}},g.default.createElement("p",{style:{padding:0,margin:0}},"Most of the page code is auto-generated by the"," ",g.default.createElement("span",{style:{textDecoration:"underline"}},"Inferencer")," ","feature, based on your backend data structure."),g.default.createElement("p",{style:{padding:0,margin:0}},"While this is an excellent way to experiment with refine,"," ",g.default.createElement("span",{style:{fontWeight:600}},"it's not intended to be used on production.")))),g.default.createElement("div",null,g.default.createElement("button",{onPointerEnter:()=>A(!0),onPointerLeave:()=>A(!1),onClick:()=>y(!0),style:{appearance:"none",border:"none",padding:"10px 16px",borderRadius:"4px",display:"flex",alignItems:"center",justifyContent:"center",background:"#0080FF",color:"#ffffff",fontSize:"14px",lineHeight:"20px",fontWeight:600,gap:"8px",cursor:"pointer",transition:"all 0.2s ease",transform:R?"scale(1.025)":void 0,filter:R?"brightness(1.1)":void 0}},g.default.createElement(Wt,{style:{flexShrink:0}}),g.default.createElement("span",null,"Show the auto-generated code"))))),g.default.createElement(Ar,{visible:u,onClose:()=>y(!1),code:i})):null},"SharedCodeViewer"),Ar=o(({visible:e,onClose:n,code:i=""})=>{let c=g.default.useRef(null),[a,u]=g.default.useState(!1),[y,l]=g.default.useState(!1),[m,v]=g.default.useState(!1),[b,R]=g.default.useState(!1);g.default.useEffect(()=>{if(typeof document<"u"){let d=o(F=>{c.current&&!c.current.contains(F.target)&&n()},"onOutsideClick");return document.addEventListener("pointerdown",d),()=>{document.removeEventListener("pointerdown",d)}}return()=>{}},[n]);let A=o(()=>{typeof navigator<"u"&&(navigator.clipboard.writeText(i),u(!0),setTimeout(()=>{u(!1)},1e3))},"onCopy"),h=g.default.createElement("div",{style:{display:"flex",justifyContent:"space-between",alignItems:"center"}},g.default.createElement("div",{style:{fontWeight:700,fontSize:"20px",lineHeight:"32px",color:"#0D0D0D"}},"Auto-generated code by Inferencer"),g.default.createElement("button",{onClick:n,onPointerEnter:()=>v(!0),onPointerLeave:()=>v(!1),style:{flexShrink:0,appearance:"none",border:"none",background:"none",padding:0,margin:0,outline:"none",borderRadius:"50px",width:"32px",height:"32px",cursor:"pointer",transition:"all 0.15s ease",transform:m?"scale(1.05)":void 0,filter:m?"brightness(0.8)":void 0}},g.default.createElement(Sr,null))),P=g.default.createElement("div",{style:{fontSize:"13px",borderRadius:"8px",flex:"1",overflow:"scroll",background:"#1E1E1E"}},g.default.createElement(Be.default,{...Be.defaultProps,theme:_t.default,code:i,language:"tsx"},({className:d,style:F,tokens:p,getLineProps:L,getTokenProps:s})=>g.default.createElement("pre",{className:d,style:{...F,padding:"14px 14px 14px 14px",margin:"0",width:"100%",boxSizing:"border-box"}},p.map((k,C)=>g.default.createElement("div",{key:C,...L({line:k,key:C})},k.map((r,$)=>g.default.createElement("span",{key:$,...s({token:r,key:$})})))))));return g.default.createElement("div",{className:"refine-inferencer--code-viewer-modal",style:{position:"fixed",top:0,left:0,right:0,bottom:0,zIndex:9999,backgroundColor:"rgba(0, 0, 0, 0.5)",transition:"all 0.2s ease",opacity:e?1:0,pointerEvents:e?"all":"none",display:"flex",justifyContent:"center",alignItems:"center"}},g.default.createElement("div",{ref:c,style:{transform:e?"scale(1) translateY(0px)":"scale(0) translateY(-200px)",transition:"all 0.25s cubic-bezier(.35,1.29,.81,1.08)",transitionDelay:"0.25",width:"calc(100% - calc(32px * 2))",height:"calc(100% - calc(32px * 2))",backgroundColor:"#fff",maxWidth:"640px",maxHeight:"720px",borderRadius:"8px",padding:"16px"}},g.default.createElement("div",{style:{display:"flex",flexDirection:"column",height:"100%",width:"100%",gap:"16px"}},h,P,g.default.createElement("div",{style:{display:"flex",justifyContent:"flex-start",alignItems:"flex-end",gap:"16px"}},g.default.createElement("button",{onPointerEnter:()=>l(!0),onPointerLeave:()=>l(!1),onClick:A,style:{appearance:"none",height:"40px",border:"none",padding:"10px 16px",borderRadius:"4px",display:"flex",alignItems:"center",justifyContent:"center",background:"#0080FF",color:"#ffffff",fontSize:"14px",lineHeight:"20px",fontWeight:600,gap:"8px",cursor:"pointer",position:"relative",overflow:"hidden",transition:"filter 0.2s ease",transform:y?"scale(1.025)":"scale(1)",filter:y?"brightness(1.1)":void 0}},g.default.createElement(Qt,{style:{flexShrink:0,marginTop:"-2px",marginBottom:"-2px"}}),g.default.createElement("span",null,"Copy Generated Code"),g.default.createElement("div",{style:{position:"absolute",width:"100%",height:"100%",top:0,left:0,display:"flex",alignItems:"center",justifyContent:"center",background:"#0080FF",transition:"all 0.2s ease",transform:a?"translateY(0)":"translateY(40px)"}},g.default.createElement(Qt,{style:{flexShrink:0,marginTop:"-2px",marginBottom:"-2px"}}),g.default.createElement("span",null,"Copied!"))),g.default.createElement("a",{onPointerEnter:()=>R(!0),onPointerLeave:()=>R(!1),href:"https://refine.dev/docs/packages/documentation/inferencer",target:"_blank",rel:"noreferrer",style:{appearance:"none",textDecoration:"none",border:"none",padding:"10px 16px",borderRadius:"4px",display:"flex",alignItems:"center",justifyContent:"center",background:"rgba(0, 128, 255, 0.1)",color:"#0080FF",fontSize:"14px",lineHeight:"20px",fontWeight:600,gap:"8px",cursor:"pointer",transition:"all 0.2s ease",transform:b?"scale(1.025)":void 0,filter:b?"brightness(1.1)":void 0}},g.default.createElement(Wt,{style:{flexShrink:0}}),g.default.createElement("span",null,"Learn more about inferencer"))))))},"CodeModal"),Tr=o(e=>g.default.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:20,height:20,fill:"none",...e},g.default.createElement("path",{fill:"#0080FF",fillRule:"evenodd",d:"M10 20C4.477 20 0 15.523 0 10S4.477 0 10 0s10 4.477 10 10-4.477 10-10 10Zm0-15a1.25 1.25 0 1 0 0 2.5A1.25 1.25 0 0 0 10 5Zm0 10c.69 0 1.25-.56 1.25-1.25V10a1.25 1.25 0 1 0-2.5 0v3.75c0 .69.56 1.25 1.25 1.25Z",clipRule:"evenodd"})),"InfoIcon"),Wt=o(e=>g.default.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:16,height:16,fill:"none",...e},g.default.createElement("path",{fill:"currentColor",d:"M5 2a1 1 0 0 1 0 2H4v8h8v-1a1 1 0 1 1 2 0v1a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h1Z"}),g.default.createElement("path",{fill:"currentColor",d:"M9 2a1 1 0 0 0 0 2h1.586L6.293 8.293a1 1 0 0 0 1.414 1.414L12 5.414V7a1 1 0 1 0 2 0V3a1 1 0 0 0-1-1H9Z"})),"OpenIcon"),Sr=o(e=>g.default.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:32,height:32,fill:"none",...e},g.default.createElement("path",{fill:"#A6A6A6",fillRule:"evenodd",d:"M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16Zm-2.586-21.414a2 2 0 1 0-2.828 2.828L13.172 16l-2.586 2.586a2 2 0 1 0 2.828 2.828L16 18.828l2.586 2.586a2 2 0 1 0 2.828-2.828L18.828 16l2.586-2.586a2 2 0 1 0-2.828-2.828L16 13.172l-2.586-2.586Z",clipRule:"evenodd"})),"CloseIcon"),Qt=o(e=>g.default.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:20,height:20,viewBox:"0 0 24 24",fill:"none",...e},g.default.createElement("path",{fill:"currentColor",fillRule:"evenodd",d:"M8 5a3 3 0 0 0 3 3h2a3 3 0 0 0 3-3h1a2 2 0 0 1 2 2v11a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2h1Zm0 7a1 1 0 0 1 1-1h6a1 1 0 1 1 0 2H9a1 1 0 0 1-1-1Zm1 3a1 1 0 1 0 0 2h4a1 1 0 1 0 0-2H9Z",clipRule:"evenodd"}),g.default.createElement("path",{fill:"currentColor",d:"M13 4a1 1 0 1 1 0 2h-2a1 1 0 1 1 0-2h2Z"})),"ClipboardIcon");var ye=q(require("react")),qe=require("@refinedev/core");var Gt=o((e,n,i,c)=>{let{resource:a,id:u,resources:y}=(0,qe.useResource)(n),l=i??u,m=(0,qe.useDataProvider)(),[v,b]=ye.default.useState(void 0),[R,A]=ye.default.useState(void 0),[h,P]=ye.default.useState(void 0),[E,d]=ye.default.useState(!0),[F,p]=ye.default.useState(!1),L=ye.default.useCallback(async s=>{var r;let k=Ne(a)??Ge(a==null?void 0:a.name,void 0,y),C=m(k);p(!0),b(void 0);try{if((e==="list"||e==="create")&&a){let $=await C.getList({resource:a==null?void 0:a.name,meta:ae((a==null?void 0:a.identifier)??(a==null?void 0:a.name),c,["getList"])}),N=(r=$.data)==null?void 0:r[0];N||b(`<p>No records/data found for resource "${a==null?void 0:a.name}".</p>
                            <p>Please check your data provider and resource.</p>
                            <p>For more info, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`),A(N),P($.data),setTimeout(()=>{p(!1)},500)}if((e==="edit"||e==="show")&&s&&a){let N=(await C.getOne({resource:a==null?void 0:a.name,id:s,meta:ae((a==null?void 0:a.identifier)??(a==null?void 0:a.name),c,["getOne"])})).data;N||b(`<p>No records/data found for resource "${a==null?void 0:a.name}".</p>
                            <p>Please check your data provider and resource.</p>
                            <p>For more info, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`),A(N),setTimeout(()=>{p(!1)},500)}}catch($){console.warn("An error occured while fetching the resource data. Please check the error message below:",$),b(`<p>Something went wrong while fetching the resource data.</p>
                    <p>Please check your data provider and API for resource "${a==null?void 0:a.name}".</p>
                    <p>For more info, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`),setTimeout(()=>{p(!1)},500)}},[e,m,a,y]);return ye.default.useEffect(()=>{d(!1),!F&&!R&&L(l)},[L,l]),{data:R,datas:h,loading:F,initial:E,error:v}},"useInferFetch");var Fe=q(require("react")),Zt=require("@refinedev/core");var lt=q(require("lodash/get"));var Yt=o(({record:e,fields:n,infer:i,meta:c})=>{let a=(0,Zt.useDataProvider)(),[u,y]=Fe.default.useState([]),[l,m]=Fe.default.useState(!0),[v,b]=Fe.default.useState(!1),R=Fe.default.useCallback(async A=>{console.groupCollapsed("@refinedev/inferencer is trying to detect relations");let h=[];b(!0);try{let P=A.map(async d=>{var F,p,L,s;if(d&&(d.relation||d.canRelation)&&e){if(d.relationInfer)return d;let k=Ne(d.resource),C=a(k),r=d.multiple,$=Array.isArray(d.accessor)?void 0:d.multiple?e[d.key].map(N=>d.accessor?(0,lt.default)(N,d.accessor):N)[0]:d.accessor?(0,lt.default)(e[d.key],d.accessor):e[d.key];if($&&d.resource)try{let N={};if(r&&C.getMany){let{data:H}=await C.getMany({resource:d.resource.name,ids:[$],meta:ae(((F=d.resource)==null?void 0:F.identifier)??((p=d.resource)==null?void 0:p.name),c,["getMany"])});N=H==null?void 0:H[0]}else{let{data:H}=await C.getOne({resource:d.resource.name,id:$,meta:ae(((L=d.resource)==null?void 0:L.identifier)??((s=d.resource)==null?void 0:s.name),c,r?["getMany","getOne"]:["getOne"])});N=H}h.push({status:"success",resource:d.resource.name,field:d.key});let W=i("__",N,{},i);return{...d,relationInfer:W}}catch{return h.push({status:"error",resource:d.resource.name,field:d.key}),{...d,relationInfer:null}}if($){let N,W;try{let S={};if(r&&C.getMany){let{data:T}=await C.getMany({resource:ce(_(d.key)),ids:[$],meta:ae(ce(_(d.key)),c,["getMany"])});S=T==null?void 0:T[0]}else{let{data:T}=await C.getOne({resource:ce(_(d.key)),id:$,meta:ae(ce(_(d.key)),c,r?["getMany","getOne"]:["getOne"])});S=T}h.push({status:"success",resource:ce(_(d.key)),field:d.key}),N=S,W=!0}catch{h.push({status:"error",resource:ce(_(d.key)),field:d.key});let T={};try{if(r&&C.getMany){let{data:w}=await C.getMany({resource:ne(_(d.key)),meta:ae(ne(_(d.key)),c,["getMany"]),ids:[$]});T=w==null?void 0:w[0]}else{let{data:w}=await C.getOne({resource:ne(_(d.key)),meta:ae(ne(_(d.key)),c,r?["getMany","getOne"]:["getOne"]),id:$});T=w}h.push({status:"success",resource:ne(_(d.key)),field:d.key}),N=T,W=!1}catch{return h.push({status:"error",resource:ne(_(d.key)),field:d.key}),{...d,relationInfer:null}}}let H=i("__",N,{},i),t=_(d.key);return{...d,relation:!0,type:"relation",resource:{name:W?ce(t):ne(t)},fieldable:!1,canRelation:void 0,relationInfer:H}}return{...d,relationInfer:null}}return d}),E=await Promise.all(P);y(E.filter(d=>d)),setTimeout(()=>{b(!1)},500)}catch{setTimeout(()=>{b(!1)},500)}setTimeout(()=>{console.log(`Tried to detect relations with ${h.length} attempts and succeeded with ${h.filter(P=>P.status==="success").length} attempts.`),console.groupEnd(),console.info("@refinedev/inferencer may send multiple requests to your API for nonexistent resources when trying to detect relations. To learn more about how the inferencer works, visit https://s.refine.dev/how-inferencer-works")},500)},[a,e]);return Fe.default.useEffect(()=>{m(!1),!v&&n&&n.length>0&&u.length===0&&R(n)},[R,v,n,R]),{fields:u,loading:v,initial:l}},"useRelationFetch");var fe=o(({type:e,additionalScope:n=[],customElements:i=[],fieldTransformers:c=[],renderer:a,loadingComponent:u,errorComponent:y,codeViewerComponent:l})=>{let m=Ct([...Ot,...i]),v=wt([...Ut,...c]),b=o(({resourceName:A,fieldTransformer:h,hideCodeViewerInProduction:P,meta:E,id:d})=>{var Te,De;let{resource:F,resources:p}=(0,be.useResource)(A),{i18nProvider:L}=(0,J.useContext)(be.TranslationContext),{resource:s}=(0,be.useResource)(),{data:k,datas:C,loading:r,initial:$,error:N}=Gt(e,A??(F==null?void 0:F.name),d,E),W=o((V,D,Z)=>{let Q=m(V,D,Z,m,e);if(Q&&F){let G=v([Q],p,F,Z,m,e),j=h?G.flatMap(M=>{let Y=h(M);return Y?[Y]:[]}):G;return j==null?void 0:j[0]}},"inferSingleField"),H=o(V=>Object.keys(V).map(Z=>{let Q=V[Z];return W(Z,Q,V)}).filter(Boolean),"inferSingleRecord"),t=o(V=>{let D=V.map(M=>H(M)),Z=V.flatMap(M=>Object.keys(M)).filter((M,Y,Se)=>Se.indexOf(M)===Y),Q={},G=Z.map(M=>{let Y=D.map(le=>le.find(ie=>ie.key===M));return Y.reduce((le,ie,je)=>{if(!ie)return le;let Pe=Y.filter(me=>(me==null?void 0:me.key)===ie.key&&(me==null?void 0:me.type)===ie.type).length;return Pe>le.count?(Q[M]=V[je][M],{count:Pe,field:ie}):le},{count:0,field:void 0}).field});return{commonRecord:Q,inferredFields:G}},"inferMultipleRecords"),[S,T]=J.default.useMemo(()=>{if(C&&(e==="list"||e==="create")){let V=t(C);return[V.inferredFields,V.commonRecord]}if(k){let V=Object.keys(k).map(D=>{let Z=k[D];return m(D,Z,k,m,e)}).filter(Boolean);if(F){let D=v(V,p,F,k,m,e);return[h?D.flatMap(Q=>{let G=h(Q);return G?[G]:[]}):D,k]}return[[],k]}return[[],void 0]},[k,C,p,F,h]),{fields:w,loading:B}=Yt({record:T,fields:S,infer:m,meta:E}),we=J.default.useMemo(()=>{let V=[];return w.forEach((D,Z,Q)=>{if(D.resource){if(V.findIndex(j=>{var M,Y;return((M=j.resource)==null?void 0:M.name)===((Y=D.resource)==null?void 0:Y.name)})>-1)return;let G=Q.filter((j,M)=>{var Y,Se,le,ie,je,Pe;if(M!==Z){let me=D.resource,rr=j.resource,nr=((Y=j.resource)==null?void 0:Y.identifier)||((Se=D.resource)==null?void 0:Se.identifier)?((le=j.resource)==null?void 0:le.identifier)===((ie=D.resource)==null?void 0:ie.identifier):((je=j.resource)==null?void 0:je.name)===((Pe=D.resource)==null?void 0:Pe.name);return me&&rr&&nr}return!1});if(G.length>0)if(e==="create"||e==="edit"){let j;[D,...G].find(M=>{M.fieldable!==!0&&j===void 0&&(j=M)}),j?V.push(j):V.push(D)}else{let j;[D,...G].find(M=>{M.fieldable!==!1&&j===void 0&&(j=M)}),j?V.push(j):V.push(D)}else V.push(D)}else V.push(D)}),V},[w,e]),Ae=J.default.useMemo(()=>!r&&!B&&!$&&F?a({resource:F,resources:p,fields:we,infer:m,meta:E,isCustomPage:F.name!==(s==null?void 0:s.name),id:d,i18n:!!L}):"",[F,p,we,r,B]),gt=P;return J.default.createElement(J.default.Fragment,null,u&&(r||B)&&J.default.createElement(u,null),!r&&!B&&J.default.createElement(J.default.Fragment,null,J.default.createElement(ut,{fetchError:!r&&N?N:!r&&!$&&!k,code:ot(Ae,oe(((Te=F==null?void 0:F.meta)==null?void 0:Te.label)??((De=F==null?void 0:F.options)==null?void 0:De.label)??(F==null?void 0:F.label)??(F==null?void 0:F.name)??"Resource",e)),errorComponent:y,additionalScope:n}),typeof l<"u"&&!gt?J.default.createElement(l,{code:at(Ae),loading:r||B}):null))},"Inferencer");return o(({name:A,resource:h,fieldTransformer:P,meta:E,hideCodeViewerInProduction:d,id:F})=>{let{resource:p}=(0,be.useResource)(h??A),L=`${(p==null?void 0:p.identifier)??(p==null?void 0:p.name)}-${e}-${F}`;return J.default.createElement(b,{hideCodeViewerInProduction:d,fieldTransformer:P,resourceName:h??A,meta:E??{},key:L,id:F})},"InferencerComponent")},"createInferencer");var Ve=q(require("react")),ke=require("antd");var ge=o(({error:e})=>e?Ve.default.createElement(ke.Row,{justify:"center",align:"middle",style:{minHeight:"200px"}},Ve.default.createElement(ke.Col,null,Ve.default.createElement(ke.Alert,{message:"Error",description:Ve.default.createElement("div",{dangerouslySetInnerHTML:{__html:e??""}}),type:"error",showIcon:!0}))):null,"ErrorComponent");var He=q(require("react")),Ce=require("antd");var Ie=o(()=>He.default.createElement(Ce.Row,{justify:"center",align:"middle",style:{minHeight:"300px"}},He.default.createElement(Ce.Col,null,He.default.createElement(Ce.Spin,{size:"large"}))),"LoadingComponent");var mt=o(({resource:e,fields:n,meta:i,isCustomPage:c,id:a,i18n:u})=>{let y=oe(e.label??e.name,"show"),l="record",m=[["React","react",!0],["useShow","@refinedev/core"],["Show","@refinedev/antd"],["Typography","antd"]];u&&m.push(["useTranslate","@refinedev/core"]),se(i||{},["gqlQuery","gqlMutation"])&&m.push(["gql","graphql-tag",!0]);let R=n.filter(r=>(r==null?void 0:r.relation)&&!(r!=null&&r.fieldable)&&(r==null?void 0:r.resource)).filter(Boolean).map(r=>{var $,N,W,H;if(r!=null&&r.relation&&!r.fieldable&&r.resource){if(r.multiple){m.push(["useMany","@refinedev/core"]);let t=f(l,r.key);return r.accessor&&(t=`${f(l,r.key)}?.map((item: any) => ${f("item",void 0,r.accessor)})`),`
                const { data: ${z(r.key,"Data")}, isLoading: ${z(r.key,"IsLoading")} } =
                useMany({
                    resource: "${r.resource.name}",
                    ids: ${t} || [],
                    queryOptions: {
                        enabled: !!${l} && !!${t}?.length,
                    },
                    ${U((($=r==null?void 0:r.resource)==null?void 0:$.identifier)??((N=r==null?void 0:r.resource)==null?void 0:N.name),i,["getMany"])}
                });
                `}return m.push(["useOne","@refinedev/core"]),`
                const { data: ${z(r.key,"Data")}, isLoading: ${z(r.key,"IsLoading")} } =
                useOne({
                    resource: "${r.resource.name}",
                    id: ${f(l,r.key,r.accessor,!1)} || "",
                    queryOptions: {
                        enabled: !!${l},
                    },
                    ${U(((W=r==null?void 0:r.resource)==null?void 0:W.identifier)??((H=r==null?void 0:r.resource)==null?void 0:H.name),i,["getOne"])}
                });
            `}}).filter(Boolean),A=o(r=>{if(r.relation&&r.resource){let $=z(r.key,"Data"),N=z(r.key,"IsLoading");if(r.multiple){let W=`${f(l,r.key)}?.length`;return m.push(["TagField","@refinedev/antd"]),I`
                <Title level={5}>${x({resource:e,field:r,i18n:u,noQuotes:!0})}</Title>
                {${N} && ${W} ? <>Loading...</> : (
                    <>
                    ${(()=>{var H,t;if(r.relationInfer){if((H=r.relationInfer)!=null&&H.accessor){if(Array.isArray(r.relationInfer.accessor))return'<span title="Inferencer failed to render this field. (Unsupported nesting)">Cannot Render</span>';let S=ne((t=r.resource)==null?void 0:t.name),T=f(S,void 0,r.relationInfer.accessor);return`{record?.${r.key}?.length ? ${$}?.data?.map((${S}: any) => <TagField key={${T}} value={${T}} />) : <></>}`}return console.log("@refinedev/inferencer: Inferencer failed to render this field",{key:r.key,relation:r.relationInfer}),'<span title="Inferencer failed to render this field. (Cannot find key)">Cannot Render</span>'}return console.log("@refinedev/inferencer: Inferencer failed to render this field",{key:r.key,relation:r.relationInfer}),'<span title="Inferencer failed to render this field (Cannot find relation)">Cannot Render</span>'})()}
                    </>
                )}
                `}return r.fieldable?I`
                <Title level={5}>${x({resource:e,field:r,i18n:u,noQuotes:!0})}</Title>
                <TextField value={${f(l,r.key,r.accessor)}} />
                `:I`
                <Title level={5}>${x({resource:e,field:r,i18n:u,noQuotes:!0})}</Title>
                {${N} ? <>Loading...</> : (
                    <>
                    ${(()=>{var W,H,t;if(r.relationInfer){if((W=r.relationInfer)!=null&&W.accessor)return Array.isArray(r.relationInfer.accessor)?`{${f(`${$}?.data`,void 0,r.relationInfer.accessor,' + " " + ')}}`:`{${$}?.data?.${r.relationInfer.accessor}}`;let S=((H=r==null?void 0:r.relationInfer)==null?void 0:H.type)==="object"&&!((t=r==null?void 0:r.relationInfer)!=null&&t.accessor);return S&&console.log("@refinedev/inferencer: Inferencer failed to render this field",{key:r.key,relation:r.relationInfer}),S?'<span title="Inferencer failed to render this field. (Cannot find key)">Cannot Render</span>':`{${$}?.data}`}return`{${$}?.data?.id}`})()}
                    </>
                )}
                
                `}},"renderRelationFields"),h=o(r=>{if(r.type==="text"){if(m.push(["TagField","@refinedev/antd"],["TextField","@refinedev/antd"]),r.multiple){let $=f("item",void 0,r.accessor);return I`
                <Title level={5}>${x({resource:e,field:r,i18n:u,noQuotes:!0})}</Title>
                {${f(l,r.key)}?.map((item: any) => (
                    <TagField value={${$}} key={${$}} />
                ))}
            `}return I`
                <Title level={5}>${x({resource:e,field:r,i18n:u,noQuotes:!0})}</Title>
                <TextField value={${f(l,r.key,r.accessor)}} />
            `}},"textFields"),P=o(r=>{if(r.type==="image"){if(m.push(["ImageField","@refinedev/antd"]),r.multiple){let $=f("item",void 0,r.accessor);return I`
                <Title level={5}>${x({resource:e,field:r,i18n:u,noQuotes:!0})}</Title>
                {${f(l,r.key)}?.map((item: any) => (
                    <ImageField style={{ maxWidth: 200 }} value={${$}} key={${$}} />
                ))}
            `}return I`
                <Title level={5}>${x({resource:e,field:r,i18n:u,noQuotes:!0})}</Title>
                <ImageField style={{ maxWidth: 200 }} value={${f(l,r.key,r.accessor," + ")}} />
                `}},"imageFields"),E=o(r=>{if(r.type==="email"){if(m.push(["TagField","@refinedev/antd"],["EmailField","@refinedev/antd"]),r.multiple){let $=f("item",void 0,r.accessor);return I`
                <Title level={5}>${x({resource:e,field:r,i18n:u,noQuotes:!0})}</Title>
                <>
                {${f(l,r.key)}?.map((item: any) => (
                    <TagField value={${$}} key={${$}} />
                ))}
                </>
            `}return I`
                <Title level={5}>${x({resource:e,field:r,i18n:u,noQuotes:!0})}</Title>
                <EmailField value={${f(l,r.key,r.accessor," + ")}} />
            `}},"emailFields"),d=o(r=>{if(r.type==="url"){if(m.push(["TagField","@refinedev/antd"],["UrlField","@refinedev/antd"]),r.multiple){let $=f("item",void 0,r.accessor);return I`
                <Title level={5}>${x({resource:e,field:r,i18n:u,noQuotes:!0})}</Title>
                {${f(l,r.key)}?.map((item: any) => (
                    <TagField value={${$}} key={${$}} />
                ))}
            `}return I`
                <Title level={5}>${x({resource:e,field:r,i18n:u,noQuotes:!0})}</Title>
                <UrlField value={${f(l,r.key,r.accessor," + ")}} />
            `}},"urlFields"),F=o(r=>{if(r.type==="boolean"){if(m.push(["TagField","@refinedev/antd"],["BooleanField","@refinedev/antd"]),r.multiple){let $=f("item",void 0,r.accessor);return I`
                <Title level={5}>${x({resource:e,field:r,i18n:u,noQuotes:!0})}</Title>
                {(${f(l,r.key)} as any[])?.map((item, index) => (
                    <BooleanField value={${$}} key={index} />
                ))}
            `}return I`
                <Title level={5}>${x({resource:e,field:r,i18n:u,noQuotes:!0})}</Title>
                <BooleanField value={${f(l,r.key,r.accessor," && ")}} />
            `}},"booleanFields"),p=o(r=>{if(r.type==="date"){if(m.push(["DateField","@refinedev/antd"]),r.multiple){let $=f("item",void 0,r.accessor);return I`
                <Title level={5}>${x({resource:e,field:r,i18n:u,noQuotes:!0})}</Title>
                {${f(l,r.key)}?.map((item: any) => (
                    <DateField value={${$}} key={${$}} />
                ))}
            `}return I`
                <Title level={5}>${x({resource:e,field:r,i18n:u,noQuotes:!0})}</Title>
                <DateField value={${f(l,r.key,r.accessor," + ' ' + ")}} />
            `}},"dateFields"),L=o(r=>{if(r.type==="richtext")return m.push(["MarkdownField","@refinedev/antd"]),I`
                <Title level={5}>${x({resource:e,field:r,i18n:u,noQuotes:!0})}</Title>
                <MarkdownField value={${f(l,r.key,r.accessor,' + " " + ')}} />
            `},"richtextFields"),s=o(r=>{if(r.type==="number"){if(m.push(["NumberField","@refinedev/antd"]),r.multiple){let $=f("item",void 0,r.accessor);return I`
                <Title level={5}>${x({resource:e,field:r,i18n:u,noQuotes:!0})}</Title>
                {${f(l,r.key)}?.map((item: any) => (
                    <TagField value={${$}} key={${$}} />
                ))}
            `}return I`
                <Title level={5}>${x({resource:e,field:r,i18n:u,noQuotes:!0})}</Title>
                <NumberField value={${f(l,r.key,r.accessor,' + " " + ')} ?? ""} />
            `}},"numberFields"),k=n.map(r=>{switch(r==null?void 0:r.type){case"text":return h(r);case"number":return s(r);case"richtext":return L(r);case"email":return E(r);case"image":return P(r);case"date":return p(r);case"boolean":return F(r);case"url":return d(r);case"relation":return A(r);default:return}});ue(m);let C=u&&"const translate = useTranslate();";return I`
    ${pe(m)}
    
    const { Title } = Typography;

    export const ${y} = () => {
        ${C}
        const { query } = useShow(${c?`{ 
                    resource: "${e.name}", 
                    id: ${Ee(a)},
                    ${U((e==null?void 0:e.identifier)??(e==null?void 0:e.name),i,["getOne"])}
                }`:U((e==null?void 0:e.identifier)??(e==null?void 0:e.name),i,["getOne"])?`{${U((e==null?void 0:e.identifier)??(e==null?void 0:e.name),i,["getOne"])}}`:""});
        const { data, isLoading } = query;
    
        const ${l} = data?.data;

        ${R}

        return (
            <Show isLoading={isLoading}>
                ${k.join("")}
            </Show>
        );
    };
    `},"renderer"),ze=fe({type:"show",additionalScope:[["@refinedev/antd","RefineAntd",{Show:K.Show,TagField:K.TagField,TextField:K.TextField,ImageField:K.ImageField,EmailField:K.EmailField,UrlField:K.UrlField,BooleanField:K.BooleanField,DateField:K.DateField,MarkdownField:K.MarkdownField,NumberField:K.NumberField}],["antd","AntdPackage",{Typography:Jt.Typography}]],codeViewerComponent:de,loadingComponent:Ie,errorComponent:ge,renderer:mt});var O=require("@refinedev/antd"),Ue=require("antd");var dt=o(({resource:e,fields:n,meta:i,isCustomPage:c,i18n:a})=>{let u=oe(e.label??e.name,"list"),y="tableProps?.dataSource",l=[["React","react",!0],["BaseRecord","@refinedev/core"],["useTable","@refinedev/antd"],["List","@refinedev/antd"],["Table","antd"],["Space","antd"]];a&&l.push(["useTranslate","@refinedev/core"]),se(i||{},["gqlQuery","gqlMutation"])&&l.push(["gql","graphql-tag",!0]);let b=n.filter(t=>(t==null?void 0:t.relation)&&!(t!=null&&t.fieldable)&&(t==null?void 0:t.resource)).filter(Boolean).map(t=>{var S,T;if(t!=null&&t.relation&&!t.fieldable&&t.resource){l.push(["useMany","@refinedev/core"]);let w="";return t.multiple?w=`[].concat(...(${y}?.map((item) => ${f("item",t.key,t.accessor,!1)}) ?? []))`:w=`${y}?.map((item) => ${f("item",t.key,t.accessor,!1)}) ?? []`,`
                const { data: ${z(t.key,"Data")}, isLoading: ${z(t.key,"IsLoading")} } =
                useMany({
                    resource: "${t.resource.name}",
                    ids: ${w},
                    queryOptions: {
                        enabled: !!${y},
                    },
                    ${U(((S=t==null?void 0:t.resource)==null?void 0:S.identifier)??((T=t==null?void 0:t.resource)==null?void 0:T.name),i,["getMany"])}
                });
                `}}).filter(Boolean),R=o(t=>{var S,T,w,B,we,Ae;if(t.relation&&t.resource){let Te=`${z(t.key,"Data")}?.data`,De=z(t.key,"IsLoading");if(Array.isArray(t.accessor))return;let V=`${De} ? <>Loading...</> : `,D=t.multiple?`dataIndex="${t.key}"`:`dataIndex={["${t.key}", ${t.accessor?`"${t.accessor}"`:""}]}`,Z=`title=${x({resource:e,field:t,i18n:a})}`,Q="";if(t.multiple){l.push(["TagField","@refinedev/antd"]);let G="item";if((t==null?void 0:t.relationInfer)&&((S=t==null?void 0:t.relationInfer)==null?void 0:S.type)==="object"&&!((T=t==null?void 0:t.relationInfer)!=null&&T.accessor))console.log("@refinedev/inferencer: Inferencer failed to render this field",{key:t.key,relation:t.relationInfer}),Q='render={(value) => <span title="Inferencer failed to render this field (Cannot find key)">Cannot Render</span>}';else{if(t!=null&&t.relationInfer){let M=`${Te}?.find((resourceItems) => resourceItems.id === ${f("item",void 0,t.accessor)})`;G=f(M,void 0,(w=t==null?void 0:t.relationInfer)==null?void 0:w.accessor)}Q=`render={(value: any[]) => ${V} (
                    <>
                        {${f("value",void 0)}?.map((item, index) => (
                            <TagField key={index} value={${G}} />
                        ))}
                    </>
                )}`}}else if(t!=null&&t.relationInfer)if(((B=t==null?void 0:t.relationInfer)==null?void 0:B.type)==="object"&&!((we=t==null?void 0:t.relationInfer)!=null&&we.accessor))console.log("@refinedev/inferencer: Inferencer failed to render this field",{key:t.key,relation:t.relationInfer}),Q='render={(value) => <span title="Inferencer failed to render this field (Cannot find key)">Cannot Render</span>}';else{let j=`${Te}?.find((item) => item.id === value)`,M=f(j,void 0,(Ae=t==null?void 0:t.relationInfer)==null?void 0:Ae.accessor);Q=`render={(value) => ${V} ${M}}`}else Q="";return I`<Table.Column ${D} ${Z} ${Q} />`}},"renderRelationFields"),A=o(t=>{if(t.type==="image"){l.push(["ImageField","@refinedev/antd"]);let S=Array.isArray(t.accessor)||t.multiple?`dataIndex="${t.key}"`:`dataIndex={["${t.key}", ${t.accessor?`"${t.accessor}"`:""}]}`,T=`title=${x({resource:e,field:t,i18n:a})}`,w=I`render={(value: any) => <ImageField style={{ maxWidth: "100px" }} value={${f("value",void 0,Array.isArray(t.accessor)?t.accessor:void 0," + ")}} />}`;if(t.multiple){let B=f("item",void 0,t.accessor," + ");w=I`render={(value: any[]) => (<>{value?.map((item, index) => (
                    <ImageField style={{ maxWidth: "100px" }} value={${B}} key={index} />
                ))}</>)}`}return I`<Table.Column ${S} ${T} ${w} />`}},"imageFields"),h=o(t=>{if(t.type==="email"){l.push(["TagField","@refinedev/antd"],["EmailField","@refinedev/antd"]);let S=Array.isArray(t.accessor)||t.multiple?`dataIndex="${t.key}"`:`dataIndex={["${t.key}", ${t.accessor?`"${t.accessor}"`:""}]}`,T=`title=${x({resource:e,field:t,i18n:a})}`,w=I`render={(value: any) => <EmailField value={${f("value",void 0,Array.isArray(t.accessor)?t.accessor:void 0,' + " " + ')}} />}`;if(t.multiple){let B=f("item",void 0,t.accessor,' + " " + ');w=I`render={(value: any[]) => (<>{value?.map((item, index) => (
                    <TagField value={${B}} key={index} />
                ))}</>)}`}return I`<Table.Column ${S} ${T} ${w} />`}},"emailFields"),P=o(t=>{if(t.type==="url"){l.push(["UrlField","@refinedev/antd"],["TagField","@refinedev/antd"]);let S=Array.isArray(t.accessor)||t.multiple?`dataIndex="${t.key}"`:`dataIndex={["${t.key}", ${t.accessor?`"${t.accessor}"`:""}]}`,T=`title=${x({resource:e,field:t,i18n:a})}`,w=I`render={(value: any) => <UrlField value={${f("value",void 0,Array.isArray(t.accessor)?t.accessor:void 0," + ")}} />}`;if(t.multiple){let B=f("item",void 0,t.accessor," + ");w=I`render={(value: any[]) => (<>{value?.map((item, index) => (
                    <TagField value={${B}} key={index} />
                ))}</>)}`}return I`<Table.Column ${S} ${T} ${w} />`}},"urlFields"),E=o(t=>{if((t==null?void 0:t.type)==="boolean"){l.push(["BooleanField","@refinedev/antd"]);let S=Array.isArray(t.accessor)||t.multiple?`dataIndex="${t.key}"`:`dataIndex={["${t.key}", ${t.accessor?`"${t.accessor}"`:""}]}`,T=`title=${x({resource:e,field:t,i18n:a})}`,w=I`render={(value: any) => <BooleanField value={${f("value",void 0,Array.isArray(t.accessor)?t.accessor:void 0," && ")}} />}`;if(t.multiple){let B=f("item",void 0,t.accessor," && ");w=I`render={(value: any[]) => (<>{value?.map((item, index) => (
                    <BooleanField value={${B}} key={index} />
                ))}</>)}`}return I`<Table.Column ${S} ${T} ${w} />`}},"booleanFields"),d=o(t=>{if(t.type==="date"){l.push(["DateField","@refinedev/antd"]);let S=Array.isArray(t.accessor)||t.multiple?`dataIndex="${t.key}"`:`dataIndex={["${t.key}", ${t.accessor?`"${t.accessor}"`:""}]}`,T=`title=${x({resource:e,field:t,i18n:a})}`,w=I`render={(value: any) => <DateField value={${f("value",void 0,Array.isArray(t.accessor)?t.accessor:void 0,' + " " + ')}} />}`;if(t.multiple){let B=f("item",void 0,t.accessor,' + " " + ');w=I`render={(value: any[]) => (<>{value?.map((item, index) => (
                    <DateField value={${B}} key={index} />
                ))}</>)}`}return I`<Table.Column ${S} ${T} ${w} />`}},"dateFields"),F=o(t=>{if((t==null?void 0:t.type)==="richtext"){l.push(["MarkdownField","@refinedev/antd"]);let S=Array.isArray(t.accessor)||t.multiple?`dataIndex="${t.key}"`:t.accessor?`dataIndex={["${t.key}", "${t.accessor}"]}`:`dataIndex="${t.key}"`,T=`title=${x({resource:e,field:t,i18n:a})}`,w=I`render={(value: any) => <MarkdownField value={(${f("value",void 0,Array.isArray(t.accessor)?t.accessor:void 0)}).slice(0, 80) + "..."} />}`;if(t.multiple){let B=f("item",void 0,t.accessor,' + " " + ');w=I`render={(value: any[]) => (<>{value?.map((item, index) => (
                    <MarkdownField value={(${B})?.slice(0, 80) + "..."} key={index} />
                ))}</>)}`}return I`<Table.Column ${S} ${T} ${w} />`}},"richtextFields"),p=o(t=>{if(t&&(t.type==="text"||t.type==="number")){let S=t.accessor&&!Array.isArray(t.accessor)&&!t.multiple?`dataIndex={["${t.key}", "${t.accessor}"]}`:`dataIndex="${t.key}"`,T=`title=${x({resource:e,field:t,i18n:a})}`,w="";if(t.multiple){l.push(["TagField","@refinedev/antd"]);let B=f("item",void 0,t.accessor,' + " " + ');w=`render={(value: any[]) => (<>{value?.map((item) => (
                    <TagField value={${B}} key={${B}} />
                ))}</>)}`}return!t.multiple&&Array.isArray(t.accessor)&&(w=`render={(value: any) => (<>{${f("value",void 0,t.accessor)}}</>)}`),`<Table.Column ${S} ${T} ${w} />`}},"basicFields"),{canEdit:L,canShow:s,canDelete:k,meta:C}=e??{},r=k||(C==null?void 0:C.canDelete);L&&l.push(["EditButton","@refinedev/antd"]),s&&l.push(["ShowButton","@refinedev/antd"]),r&&l.push(["DeleteButton","@refinedev/antd"]);let N=L||s||r?I`
            <Table.Column
                title=${a?'{translate("table.actions")}':'"Actions"'}
                dataIndex="actions"
                render={(_, record: BaseRecord) => (
                    <Space>
                    ${L?I`
                        <EditButton
                            hideText
                            size="small"
                            recordItemId={record.id}
                        />
                        `:""}
                    ${s?I`
                        <ShowButton
                            hideText
                            size="small"
                            recordItemId={record.id}
                        />
                        `:""}
                    ${r?I`
                        <DeleteButton
                            hideText
                            size="small"
                            recordItemId={record.id}
                        />
                        `:""}
                    </Space>
                )}
            />
        `:"",W=n.map(t=>{switch(t==null?void 0:t.type){case"text":case"number":return p(t);case"richtext":return F(t);case"email":return h(t);case"image":return A(t);case"date":return d(t);case"boolean":return E(t);case"url":return P(t);case"relation":return R(t);default:return}});ue(l);let H=a&&"const translate = useTranslate();";return I`
    ${pe(l)}
    
    export const ${u} = () => {
        ${H}
        const { tableProps } = useTable({
            syncWithLocation: true,
            ${c?` resource: "${e.name}",`:""}
            ${U((e==null?void 0:e.identifier)??(e==null?void 0:e.name),i,["getList"])}
        });
    
        ${b}

        return (
            <List>
                <Table {...tableProps} rowKey="id">
                    ${W.join(`\r
`)}
                    ${N}
                </Table>
            </List>
        );
    };
    `},"renderer"),Ke=fe({type:"list",additionalScope:[["@refinedev/antd","RefineAntd",{useTable:O.useTable,List:O.List,TagField:O.TagField,ImageField:O.ImageField,EmailField:O.EmailField,UrlField:O.UrlField,BooleanField:O.BooleanField,DateField:O.DateField,MarkdownField:O.MarkdownField,EditButton:O.EditButton,ShowButton:O.ShowButton,DeleteButton:O.DeleteButton}],["antd","AntdPackage",{Table:Ue.Table,Space:Ue.Space}]],codeViewerComponent:de,loadingComponent:Ie,errorComponent:ge,renderer:dt});var he=require("@refinedev/antd"),te=require("antd"),Xt=q(require("dayjs"));var yt=o(({resource:e,fields:n,meta:i,isCustomPage:c,i18n:a})=>{let u=oe(e.label??e.name,"create"),y=[["React","react",!0],["Create","@refinedev/antd"],["Form","antd"],["useForm","@refinedev/antd"],["Input","antd"]];a&&y.push(["useTranslate","@refinedev/core"]),se(i||{},["gqlQuery","gqlMutation"])&&y.push(["gql","graphql-tag",!0]);let v=n.filter(p=>(p==null?void 0:p.relation)&&!(p!=null&&p.fieldable)&&(p==null?void 0:p.resource)).filter(Boolean).map(p=>{var L,s;if(p!=null&&p.relation&&!p.fieldable&&p.resource)return y.push(["useSelect","@refinedev/antd"]),`
                const { selectProps: ${z(p.key,"SelectProps")} } =
                useSelect({
                    resource: "${p.resource.name}",
                    ${it(p)}
                    ${U(((L=p==null?void 0:p.resource)==null?void 0:L.identifier)??((s=p==null?void 0:p.resource)==null?void 0:s.name),i,["getList"])}
                });
            `}).filter(Boolean),b=o(p=>{if(p.relation&&p.resource){y.push(["Select","antd"]);let L=z(p.key,"SelectProps"),s=p.accessor?p.multiple?`"${p.key}"`:`["${p.key}", "${p.accessor}"]`:`"${p.key}"`,k="",C="";return p.accessor&&p.multiple&&(C=`getValueFromEvent={(selected: string[]) => {
                    return selected?.map((item) => ({ ${xe(`${p.accessor}`)?p.accessor:`["${p.accessor}"]`}: item }));
                }}`,k=`getValueProps={(value: any[]) => {
                    return {
                        value: value?.map((item) => ${f("item",void 0,p.accessor)}),
                    };
                }}`),I`
                <Form.Item
                    label=${x({resource:e,field:p,i18n:a})}
                    name={${s}}
                    rules={[
                        {
                            required: true,
                        },
                    ]}
                    ${k}
                    ${C}
                >
                    <Select ${p.multiple?'mode="multiple"':""} {...${L}} />
                </Form.Item>             
                `}},"renderRelationFields"),R=o(p=>{if(p.type==="text"||p.type==="url"||p.type==="email"||p.type==="number")return ve(p.key)||p.multiple?void 0:I`
                <Form.Item
                    label=${x({resource:e,field:p,i18n:a})}
                    name={["${p.key}"${p.accessor?`, "${p.accessor}"`:""}]}
                    rules={[
                        {
                            required: true,
                        },
                    ]}
                >
                    <Input  />
                </Form.Item>
            `},"basicInputFields"),A=o(p=>{if(p.type==="image"){y.push(["Upload","antd"],["getValueFromEvent","@refinedev/antd"]);let L='valuePropName="fileList"';return p.multiple&&!p.accessor&&(L="getValueProps={(value) => ({ fileList: value?.map((item: any) => ({ url: item, name: item, uid: item }))})}"),p.multiple||(p.accessor?L="getValueProps={(value) => ({ fileList: value ? [value] : [] })}":L="getValueProps={(value) => ({ fileList: [{ url: value, name: value, uid: value }]})}"),I`
                <Form.Item label=${x({resource:e,field:p,i18n:a})}>
                    <Form.Item
                        name="${p.key}"
                        ${L}
                        getValueFromEvent={getValueFromEvent}
                        noStyle
                        rules={[
                            {
                                required: true,
                            },
                        ]}
                    >
                        <Upload.Dragger
                            listType="picture"
                            ${p.multiple?"multiple":""}
                            beforeUpload={() => false}
                        >
                            <p className="ant-upload-text">
                                Drag & drop a file in this area
                            </p>
                        </Upload.Dragger>
                    </Form.Item>
                </Form.Item>
                `}},"imageFields"),h=o(p=>{if(p.type==="boolean")return y.push(["Checkbox","antd"]),p.multiple?void 0:I`
                <Form.Item
                    label=${x({resource:e,field:p,i18n:a})}
                    valuePropName="checked"
                    name={["${p.key}"${p.accessor?`, "${p.accessor}"`:""}]}
                    rules={[
                        {
                            required: true,
                        },
                    ]}
                >
                    <Checkbox>${X(p.key)}</Checkbox>
                </Form.Item>
            `},"booleanFields"),P=o(p=>{if(p.type==="date")return y.push(["DatePicker","antd"],["dayjs","dayjs",!0]),p.multiple?void 0:I`
                <Form.Item
                    label=${x({resource:e,field:p,i18n:a})}
                    name={["${p.key}"${p.accessor?`, "${p.accessor}"`:""}]}
                    rules={[
                        {
                            required: true,
                        },
                    ]}
                    getValueProps={(value) => ({ value: value ? dayjs(value) : undefined })}
                >
                    <DatePicker />
                </Form.Item>
            `},"dateFields"),E=o(p=>{if(p.type==="richtext")return I`
            <Form.Item
                label=${x({resource:e,field:p,i18n:a})}
                name="${p.key}"
                rules={[
                    {
                        required: true,
                    },
                ]}
            >
                <Input.TextArea rows={5} />
            </Form.Item>
            `},"richtextFields"),d=n.map(p=>{switch(p==null?void 0:p.type){case"text":case"number":case"email":case"url":return R(p);case"richtext":return E(p);case"image":return A(p);case"date":return P(p);case"boolean":return h(p);case"relation":return b(p);default:return}});ue(y);let F=a&&"const translate = useTranslate();";return I`
    ${pe(y)}
    
    export const ${u} = () => {
        ${F}
        const { formProps, saveButtonProps, query } = useForm(${c?`{
                      resource: "${e.name}",
                      action: "create",
                      ${U(e.identifier??e.name,i,["create","getOne"])}
                  }`:U((e==null?void 0:e.identifier)??(e==null?void 0:e.name),i,["create","getOne"])?`{
                  ${U((e==null?void 0:e.identifier)??(e==null?void 0:e.name),i,["create","getOne"])}
              }`:""});
    
        ${v}

        return (
            <Create saveButtonProps={saveButtonProps}>
                <Form {...formProps} layout="vertical">
                    ${d.join("")}
                </Form>
            </Create>
        );
    };
    `},"renderer"),Qe=fe({type:"create",additionalScope:[["@refinedev/antd","RefineAntd",{Create:he.Create,useForm:he.useForm,useSelect:he.useSelect,getValueFromEvent:he.getValueFromEvent}],["dayjs","dayjs",Xt.default,!0],["antd","AntdPackage",{Form:te.Form,Input:te.Input,Select:te.Select,Upload:te.Upload,Checkbox:te.Checkbox,DatePicker:te.DatePicker}]],codeViewerComponent:de,loadingComponent:Ie,errorComponent:ge,renderer:yt});var $e=require("@refinedev/antd"),re=require("antd"),er=q(require("dayjs"));var ft=o(({resource:e,fields:n,meta:i,isCustomPage:c,id:a,i18n:u})=>{let y=oe(e.label??e.name,"edit"),l=z(e.label??e.name,"Data"),m=[["React","react",!0],["Edit","@refinedev/antd"],["Form","antd"],["useForm","@refinedev/antd"],["Input","antd"]];u&&m.push(["useTranslate","@refinedev/core"]),se(i||{},["gqlQuery","gqlMutation"])&&m.push(["gql","graphql-tag",!0]);let R=n.filter(s=>(s==null?void 0:s.relation)&&!(s!=null&&s.fieldable)&&(s==null?void 0:s.resource)).filter(Boolean).map(s=>{var k,C;if(s!=null&&s.relation&&!s.fieldable&&s.resource){m.push(["useSelect","@refinedev/antd"]);let r=f(l,s.key,s.accessor,!1);return s.multiple&&s.accessor&&(r=`${f(l,s.key)}?.map((item: any) => ${f("item",void 0,s.accessor)})`),`
                const { selectProps: ${z(s.key,"SelectProps")} } =
                useSelect({
                    resource: "${s.resource.name}",
                    defaultValue: ${r},
                    ${s.relationInfer&&s.relationInfer.accessor?typeof s.relationInfer.accessor=="string"?s.relationInfer.accessor!=="title"?`optionLabel: "${s.relationInfer.accessor}",`:"":`optionLabel: "${s.relationInfer.accessor[0]}",`:""}
                    ${U(((k=s==null?void 0:s.resource)==null?void 0:k.identifier)??((C=s==null?void 0:s.resource)==null?void 0:C.name),i,["getList"])}
                });
            `}}).filter(Boolean),A=o(s=>{if(s.relation&&s.resource){m.push(["Select","antd"]);let k=z(s.key,"SelectProps"),C=s.accessor?s.multiple?`"${s.key}"`:`["${s.key}", "${s.accessor}"]`:`"${s.key}"`,r="",$="";return s.accessor&&s.multiple&&($=`getValueFromEvent={(selected: string[]) => {
                    return selected?.map((item) => ({ ${xe(`${s.accessor}`)?s.accessor:`["${s.accessor}"]`}: item }));
                }}`,r=`getValueProps={(value: any[]) => {
                    return {
                        value: value?.map((item) => ${f("item",void 0,s.accessor)}),
                    };
                }}`),I`
                <Form.Item
                    label=${x({resource:e,field:s,i18n:u})}
                    name={${C}}
                    rules={[
                        {
                            required: true,
                        },
                    ]}
                    ${r}
                    ${$}
                >
                    <Select ${s.multiple?'mode="multiple"':""} {...${k}} />
                </Form.Item>             
                `}},"renderRelationFields"),h=o(s=>{if(s.type==="text"||s.type==="url"||s.type==="email"||s.type==="number"){if(s.multiple){let k=f(s.key,"index",s.accessor).split("?.").map(C=>`"${C}"`).join(", ").replace(/"index"/,"index");return`
                    <>
                        {(${f(l,s.key)} as any[])?.map((item, index) => (
                            <Form.Item
                                key={index}
                                label=${x({resource:e,field:s,i18n:u})}
                                name={[${k}]}
                            >
                                <Input
                                    type="${s.type}"
                                ${ve(s.key)?"readOnly disabled":""} />
                            </Form.Item>
                        ))}
                    </>
                `}return I`
                <Form.Item
                    label=${x({resource:e,field:s,i18n:u})}
                    name={["${s.key}"${s.accessor?`, "${s.accessor}"`:""}]}
                    rules={[
                        {
                            required: true,
                        },
                    ]}
                >
                    <Input ${ve(s.key)?"readOnly disabled":""} />
                </Form.Item>
            `}},"basicInputFields"),P=o(s=>{if(s.type==="image"){m.push(["Upload","antd"],["getValueFromEvent","@refinedev/antd"]);let k='valuePropName="fileList"';return s.multiple&&!s.accessor&&(k="getValueProps={(value) => ({ fileList: value?.map((item: any) => ({ url: item, name: item, uid: item }))})}"),s.multiple||(s.accessor?k="getValueProps={(value) => ({ fileList: value ? [value] : [] })}":k="getValueProps={(value) => ({ fileList: [{ url: value, name: value, uid: value }]})}"),I`
                <Form.Item label=${x({resource:e,field:s,i18n:u})}>
                    <Form.Item
                        name="${s.key}"
                        ${k}
                        getValueFromEvent={getValueFromEvent}
                        noStyle
                        rules={[
                            {
                                required: true,
                            },
                        ]}
                    >
                        <Upload.Dragger
                            listType="picture"
                            ${s.multiple?"multiple":""}
                            beforeUpload={() => false}
                        >
                            <p className="ant-upload-text">
                                Drag & drop a file in this area
                            </p>
                        </Upload.Dragger>
                    </Form.Item>
                </Form.Item>
                `}},"imageFields"),E=o(s=>{if(s.type==="boolean"){if(m.push(["Checkbox","antd"]),s.multiple){let k=f(s.key,"index",s.accessor).split("?.").map(C=>`"${C}"`).join(", ").replace(/"index"/,"index");return`
                    <>
                        {(${f(l,s.key)} as any[])?.map((item, index) => (
                            <Form.Item
                                key={index}
                                valuePropName="checked"
                                label=${x({resource:e,field:s,i18n:u})}
                                name={[${k}]}
                            >
                                <Checkbox>${X(s.key)}</Checkbox>
                            </Form.Item>
                        ))}
                    </>
                `}return I`
                <Form.Item
                    label=${x({resource:e,field:s,i18n:u})}
                    valuePropName="checked"
                    name={["${s.key}"${s.accessor?`, "${s.accessor}"`:""}]}
                    rules={[
                        {
                            required: true,
                        },
                    ]}
                >
                    <Checkbox>${X(s.key)}</Checkbox>
                </Form.Item>
            `}},"booleanFields"),d=o(s=>{if(s.type==="date"){if(m.push(["DatePicker","antd"],["dayjs","dayjs",!0]),s.multiple){let k=f(s.key,"index",s.accessor).split("?.").map(C=>`"${C}"`).join(", ").replace(/"index"/,"index");return I`
                    <>
                        {(${f(l,s.key)} as any[])?.map((item, index) => (
                            <Form.Item
                                key={index}
                                label=${x({resource:e,field:s,i18n:u})}
                                name={[${k}]}
                                getValueProps={(value) => ({ value: value ? dayjs(value) : undefined })}
                            >
                                <DatePicker />
                            </Form.Item>
                        ))}
                    </>
                `}return I`
                <Form.Item
                    label=${x({resource:e,field:s,i18n:u})}
                    name={["${s.key}"${s.accessor?`, "${s.accessor}"`:""}]}
                    rules={[
                        {
                            required: true,
                        },
                    ]}
                    getValueProps={(value) => ({ value: value ? dayjs(value) : undefined })}
                >
                    <DatePicker />
                </Form.Item>
            `}},"dateFields"),F=o(s=>{if(s.type==="richtext")return I`
            <Form.Item
                label=${x({resource:e,field:s,i18n:u})}
                name="${s.key}"
                rules={[
                    {
                        required: true,
                    },
                ]}
            >
                <Input.TextArea rows={5} />
            </Form.Item>
            `},"richtextFields"),p=n.map(s=>{switch(s==null?void 0:s.type){case"text":case"number":case"email":case"url":return h(s);case"richtext":return F(s);case"image":return P(s);case"date":return d(s);case"boolean":return E(s);case"relation":return A(s);default:return}});ue(m);let L=u&&"const translate = useTranslate();";return I`
    ${pe(m)}
    
    export const ${y} = () => {
        ${L}
        const { formProps, saveButtonProps, query } = useForm(${c?`{
                      resource: "${e.name}",
                      id: ${Ee(a)},
                      action: "edit",
                      ${U((e==null?void 0:e.identifier)??(e==null?void 0:e.name),i,["update","getOne"])}
                  }`:U((e==null?void 0:e.identifier)??(e==null?void 0:e.name),i,["update","getOne"])?`{
                    ${U((e==null?void 0:e.identifier)??(e==null?void 0:e.name),i,["update","getOne"])}
                }`:""});
    
        const ${l} = query?.data?.data;
    
        ${R}

        return (
            <Edit saveButtonProps={saveButtonProps}>
                <Form {...formProps} layout="vertical">
                    ${p.join("")}
                </Form>
            </Edit>
        );
    };
    `},"renderer"),_e=fe({type:"edit",additionalScope:[["@refinedev/antd","RefineAntd",{Edit:$e.Edit,useForm:$e.useForm,useSelect:$e.useSelect,getValueFromEvent:$e.getValueFromEvent}],["dayjs","dayjs",er.default,!0],["antd","AntdPackage",{Form:re.Form,Input:re.Input,Select:re.Select,Upload:re.Upload,Checkbox:re.Checkbox,DatePicker:re.DatePicker}]],codeViewerComponent:de,loadingComponent:Ie,errorComponent:ge,renderer:ft});var Pr=o(({action:e,id:n,...i})=>{let{action:c,id:a}=(0,tr.useResource)();switch(e??c){case"show":return Me.default.createElement(ze,{...i,id:n??a});case"create":return Me.default.createElement(Qe,{...i,id:n??a});case"edit":return Me.default.createElement(_e,{...i,id:n??a});default:return Me.default.createElement(Ke,{...i,id:n??a})}},"AntdInferencer");
//# sourceMappingURL=antd.cjs.map